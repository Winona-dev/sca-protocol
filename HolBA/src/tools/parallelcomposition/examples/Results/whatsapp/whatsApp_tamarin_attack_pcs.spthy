theory WhatsApp begin

// Function signature and definition of the equational theory E

builtins: multiset
functions: dec/2[destructor], enc/2, fst/1, hash/1, hash2/2,
           hkdf/2, pair/2, pars1/1, pars2/1, session/1, snd/1
equations:
    dec(enc(m, k), k) = m,
    fst(<x.1, x.2>) = x.1,
    snd(<x.1, x.2>) = x.2



heuristic: p















lemma attack_pcs:
  exists-trace
  "∃ MK sidA sidB #i #j #k #l.
    ((((((Send( sidA, sidB, MK ) @ #i) ∧ (!KU( MK ) @ #j)) ∧
        (Compromise( sidA, sidB ) @ #k)) ∧
       (Heal( sidA, sidB ) @ #l)) ∧
      (#l < #i)) ∧
     (#k < #l)) ∧
    (∀ #x #y.
      ((Compromise( sidA, sidB ) @ #x) ∧
       (Compromise( sidA, sidB ) @ #y)) ⇒
      (#x = #y))"
/*
guarded formula characterizing all satisfying traces:
"∃ MK sidA sidB #i #j #k #l.
  (Send( sidA, sidB, MK ) @ #i) ∧
  (!KU( MK ) @ #j) ∧
  (Compromise( sidA, sidB ) @ #k) ∧
  (Heal( sidA, sidB ) @ #l)
 ∧
  (#l < #i) ∧
  (#k < #l) ∧
  (∀ #x #y.
    (Compromise( sidA, sidB ) @ #x) ∧ (Compromise( sidA, sidB ) @ #y)
   ⇒
    #x = #y)"
*/
simplify
solve( Send( sidA, sidB, MK ) @ #i )
  case eventSendsessionAlicesessionBobhashCKs_0_11111111111121212121211111111
  solve( State_11111111111121212121211111111( lock, ~Alice, ~Bob,
                                              ~EphemeralInit, ~RootInit, ~payload, CKs, lock.1,
                                              lock.2
         ) ▶₀ #i )
    case outencpayloadhashCKs_0_1111111111112121212121111111
    solve( (#vr.13 < #t2)  ∥ (#vr.13 = #t2) )
      case case_1
      solve( Heal( session(~Alice), session(~Bob) ) @ #l )
        case eventHealsessionAlicesessionBob_0_1111111111112121212121111112111111
        solve( State_1111111111112121212121111112111111( lock, ~Alice,
                                                         ~Bob, ~EphemeralInit.1, ~RootInit.1,
                                                         ~payload.1, CKs.1, lock.1, ~Ephemeral_sy,
                                                         ~Root_sy, lock.2, lock.3
               ) ▶₀ #l )
          case insertsessionBobparshkdfRootsyEphemeralsy_0_111111111111212121212111111211111
          solve( (#vr.13 < #t2.1)  ∥ (#vr.13 = #t2.1) )
            case case_1
            by sorry
          next
            case case_2
            solve( Insert( session(~Alice), CKs.1 ) @ #t2 )
              case insertsessionAliceparshkdfRootInitEphemeralInit_0_111111
              solve( ((#vr.2 < #vr.20) ∧
                      (∃ #t2.
                        (Unlock_12( '12', ~n.2, session(~Alice) ) @ #t2)
                       ∧
                        (#vr.2 < #t2) ∧
                        (#t2 < #vr.20) ∧
                        (∀ #t0 pp.
                          (Unlock( pp, ~n.2, session(~Alice) ) @ #t0) ⇒ #t0 = #t2) ∧
                        (∀ pp lpp #t0.
                          (Lock( pp, lpp, session(~Alice) ) @ #t0)
                         ⇒
                          ((#t0 < #vr.2) ∨ (#t0 = #vr.2) ∨ (#t2 < #t0))) ∧
                        (∀ pp lpp #t0.
                          (Unlock( pp, lpp, session(~Alice) ) @ #t0)
                         ⇒
                          ((#t0 < #vr.2) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                     (#vr.20 < #vr.2)  ∥ (#vr.2 = #vr.20) )
                case case_1
                by sorry
              next
                case case_2
                solve( Unlock_12( '12', ~n.3, session(~Alice) ) @ #t2.2 )
                  case unlocksessionAlice_0_1111111111112121212121111111111
                  by solve( State_1111111111112121212121111111111( lock, ~Alice,
                                                                   ~Bob.1, ~EphemeralInit.1,
                                                                   ~RootInit.1, ~payload.2, CKs.1,
                                                                   lock.1, ~n.3
                            ) ▶₀ #t2.1 )
                next
                  case unlocksessionAlice_0_11111111111121212121211111121111111
                  solve( State_11111111111121212121211111121111111( lock, ~Alice,
                                                                    ~Bob.1, ~EphemeralInit.1,
                                                                    ~RootInit.1, ~payload.2, CKs.1,
                                                                    lock.1, ~Ephemeral_sy.1,
                                                                    ~Root_sy.1, ~n.3, lock.2
                         ) ▶₀ #t2.1 )
                    case eventHealsessionAlicesessionBob_0_1111111111112121212121111112111111
                    solve( (#vr.17 < #t2.2)  ∥ (#vr.17 = #t2.2) )
                      case case_1
                      by sorry
                    next
                      case case_2
                      solve( (#t2 < #t2.3)  ∥ (#t2 = #t2.3) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        solve( Insert( session(~Alice), CKs ) @ #t2.2 )
                          case insertsessionAliceparshkdfRootsyEphemeralsy_0_11111111111121212121211111121111
                          solve( Compromise( session(~Alice), session(~Bob) ) @ #k )
                            case eventCompromisesessionAlicesessionBob_0_11111111111121212121111111111
                            solve( State_11111111111121212121111111111( lock, ~Alice, ~Bob,
                                                                        ~EphemeralInit.1,
                                                                        ~RootInit.1, CKa, CKb,
                                                                        lock.1, lock.2, lock.3
                                   ) ▶₀ #k )
                              case outhashCKb_0_1111111111112121212111111111
                              solve( (#t2 < #t2.6)  ∥ (#t2 = #t2.6) )
                                case case_1
                                by sorry
                              next
                                case case_2
                                solve( (#vr.12 < #t2.5)  ∥ (#vr.12 = #t2.5) )
                                  case case_1
                                  by sorry
                                next
                                  case case_2
                                  solve( ((#vr.16 < #vr.30) ∧
                                          (∃ #t2.
                                            (Unlock_13( '13', ~n.6, session(~Bob) ) @ #t2)
                                           ∧
                                            (#vr.16 < #t2) ∧
                                            (#t2 < #vr.30) ∧
                                            (∀ #t0 pp.
                                              (Unlock( pp, ~n.6, session(~Bob) ) @ #t0)
                                             ⇒
                                              #t0 = #t2) ∧
                                            (∀ pp lpp #t0.
                                              (Lock( pp, lpp, session(~Bob) ) @ #t0)
                                             ⇒
                                              ((#t0 < #vr.16) ∨ (#t0 = #vr.16) ∨ (#t2 < #t0))) ∧
                                            (∀ pp lpp #t0.
                                              (Unlock( pp, lpp, session(~Bob) ) @ #t0)
                                             ⇒
                                              ((#t0 < #vr.16) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                         (#vr.30 < #vr.16) )
                                    case case_1
                                    by contradiction /* cyclic */
                                  next
                                    case case_2
                                    solve( Unlock_10( '10', ~n.3, session(~Alice) ) @ #t2.4 )
                                      case unlocksessionAlice_0_111111111111212121211111111111
                                      solve( State_111111111111212121211111111111( lock, ~Alice,
                                                                                   ~Bob.1,
                                                                                   ~EphemeralInit.1,
                                                                                   ~RootInit.1,
                                                                                   CKa.1, CKb.1,
                                                                                   lock.1, ~n.3,
                                                                                   lock.2
                                             ) ▶₀ #t2.4 )
                                        case eventCompromisesessionAlicesessionBob_0_11111111111121212121111111111
                                        solve( (#t2 < #t2.8)  ∥ (#t2 = #t2.8) )
                                          case case_1
                                          by contradiction /* from formulas */
                                        next
                                          case case_2
                                          solve( (#t2.3 < #t2.7)  ∥ (#t2.3 = #t2.7) )
                                            case case_1
                                            by sorry /* bound 5 hit */
                                          next
                                            case case_2
                                            solve( Unlock_11( '11', ~n.4, session(~Bob) ) @ #t2.5 )
                                              case unlocksessionBob_0_1111111111112121212111111111111
                                              solve( State_1111111111112121212111111111111( lock,
                                                                                            ~Alice.1,
                                                                                            ~Bob,
                                                                                            ~EphemeralInit.1,
                                                                                            ~RootInit.1,
                                                                                            CKa.1,
                                                                                            CKb.1,
                                                                                            lock.1,
                                                                                            lock.2,
                                                                                            ~n.4
                                                     ) ▶₀ #t2.5 )
                                                case unlocksessionAlice_0_111111111111212121211111111111
                                                solve( (#t2 < #t2.7)  ∥ (#t2 = #t2.7) )
                                                  case case_1
                                                  by contradiction /* from formulas */
                                                next
                                                  case case_2
                                                  solve( (#t2.3 < #t2.6)  ∥ (#t2.3 = #t2.6) )
                                                    case case_1
                                                    by contradiction /* from formulas */
                                                  next
                                                    case case_2
                                                    solve( Insert( session(~Bob), CKb ) @ #t2.3 )
                                                      case insertsessionBobparshkdfRootInitEphemeralInit_0_1111111
                                                      solve( Insert( session(~Alice), CKa ) @ #t2 )
                                                        case insertsessionAliceparshkdfRootInitEphemeralInit_0_111111
                                                        solve( !KU( hash2(pars1(hkdf(~Root_sy,
                                                                                     ~Ephemeral_sy)),
                                                                          '1')
                                                               ) @ #j )
                                                          case c_hash2
                                                          by sorry /* bound 5 hit */
                                                        next
                                                          case eventSendsessionAlicesessionBobhashCKs_0_11111111111121212121211111111
                                                          solve( ((#vr.2 < #vr.41) ∧
                                                                  (∃ #t2.
                                                                    (Unlock_12( '12', ~n.2,
                                                                                session(~Alice)
                                                                     ) @ #t2)
                                                                   ∧
                                                                    (#vr.2 < #t2) ∧
                                                                    (#t2 < #vr.41) ∧
                                                                    (∀ #t0 pp.
                                                                      (Unlock( pp, ~n.2,
                                                                               session(~Alice)
                                                                       ) @ #t0)
                                                                     ⇒
                                                                      #t0 = #t2) ∧
                                                                    (∀ pp lpp #t0.
                                                                      (Lock( pp, lpp,
                                                                             session(~Alice)
                                                                       ) @ #t0)
                                                                     ⇒
                                                                      ((#t0 < #vr.2) ∨
                                                                       (#t0 = #vr.2) ∨
                                                                       (#t2 < #t0))) ∧
                                                                    (∀ pp lpp #t0.
                                                                      (Unlock( pp, lpp,
                                                                               session(~Alice)
                                                                       ) @ #t0)
                                                                     ⇒
                                                                      ((#t0 < #vr.2) ∨
                                                                       (#t2 < #t0) ∨
                                                                       (#t2 = #t0)))))  ∥
                                                                 (#vr.41 < #vr.2)  ∥
                                                                 (#vr.2 = #vr.41) )
                                                            case case_3
                                                            solve( (#t2.6 < #t2)  ∥ (#t2.6 = #t2)  ∥
                                                                   (#vr.17 < #t2.6) )
                                                              case case_3
                                                              solve( (#t2.2 < #t2.6)  ∥
                                                                     (#t2.2 = #t2.6) )
                                                                case case_2
                                                                SOLVED // trace found
                                                              qed
                                                            qed
                                                          qed
                                                        next
                                                          case eventSendsessionBobsessionAlicehashCKs_0_1111111111112121212121211111111
                                                          by sorry /* bound 5 hit */
                                                        next
                                                          case outCKa_0_111111111111212121211111112
                                                          by sorry /* bound 5 hit */
                                                        next
                                                          case outCKb_0_1111111111112121212111111121
                                                          by sorry /* bound 5 hit */
                                                        next
                                                          case outhashCKa_0_111111111111212121211111111
                                                          by sorry /* bound 5 hit */
                                                        next
                                                          case outhashCKb_0_1111111111112121212111111111
                                                          by sorry /* bound 5 hit */
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            next
                                              case unlocksessionBob_0_1111111111112121212111111121111
                                              by sorry
                                            qed
                                          qed
                                        qed
                                      qed
                                    next
                                      case unlocksessionAlice_0_111111111111212121211111112111
                                      by solve( State_111111111111212121211111112111( lock, ~Alice,
                                                                                      ~Bob.1,
                                                                                      ~EphemeralInit.1,
                                                                                      ~RootInit.1,
                                                                                      CKa.1, CKb.1,
                                                                                      lock.1, ~n.3,
                                                                                      lock.2
                                                ) ▶₀ #t2.4 )
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          next
                            case eventCompromisesessionAlicesessionBob_0_11111111111121212121111111211
                            by sorry
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case unlocksessionAlice_0_111111111111212121212111111221
                  by solve( State_111111111111212121212111111221( lock, ~Alice,
                                                                  ~Bob.1, ~EphemeralInit.1,
                                                                  ~RootInit.1, ~payload.2, CKs.1,
                                                                  lock.1, ~n.3
                            ) ▶₀ #t2.1 )
                qed
              qed
            qed
          qed
        qed
      next
        case eventHealsessionAlicesessionBob_0_11111111111121212121212121211121111111
        by sorry
      next
        case eventHealsessionAlicesessionBob_0_111111111111212121212121212111211112111
        by sorry
      next
        case eventHealsessionBobsessionAlice_0_111111111111212121212121111112111111
        by sorry
      next
        case eventHealsessionBobsessionAlice_0_111111111111212121212121211121111111
        by sorry
      next
        case eventHealsessionBobsessionAlice_0_1111111111112121212121212111211112111
        by sorry
      qed
    next
      case case_2
      by sorry
    qed
  qed
next
  case eventSendsessionBobsessionAlicehashCKs_0_1111111111112121212121211111111
  by sorry
qed

lemma IsInSrc [sources]:
  all-traces
  "∀ x y #i.
    (IsIn( x, y ) @ #i) ⇒
    (((∃ p1 p2. y = hash2(p1, p2)) ∨
      (∃ p1 p2. y = pars1(hkdf(p1, p2)))) ∨
     (∃ p1. y = hash(p1)))"
/*
guarded formula characterizing all counter-examples:
"∃ x y #i.
  (IsIn( x, y ) @ #i)
 ∧
  (∀ p1 p2. (y = hash2(p1, p2)) ⇒ ⊥) ∧
  (∀ p1 p2. (y = pars1(hkdf(p1, p2))) ⇒ ⊥) ∧
  (∀ p1. (y = hash(p1)) ⇒ ⊥)"
*/
induction
  case empty_trace
  by contradiction
next
  case non_empty_trace
  simplify
  solve( Insert( x, y ) @ #t2 )
    case insertsessionAlicehashCKe_0_1111111111112121212121212111111111
    by contradiction
  next
    case insertsessionAlicehashCKs_0_11111111111121212121211111122
    by contradiction
  next
    case insertsessionAlicehashparshkdfRootsyEphemeralsy_0_1111111111112121212121212111211111111111
    by contradiction
  next
    case insertsessionAlicehashparshkdfparshkdfRootsyEphemeralsyephemeralsecret_0_11111111111121212121212121112111121111111
    by contradiction
  next
    case insertsessionAliceparshkdfRootInitEphemeralInit_0_111111
    by contradiction
  next
    case insertsessionAliceparshkdfRootsyEphemeralsy_0_111111111111111111
    by contradiction
  next
    case insertsessionAliceparshkdfRootsyEphemeralsy_0_11111111111121111111
    by contradiction
  next
    case insertsessionAliceparshkdfRootsyEphemeralsy_0_11111111111121211111111
    by contradiction
  next
    case insertsessionAliceparshkdfRootsyEphemeralsy_0_1111111111112121211111111
    by contradiction
  next
    case insertsessionAliceparshkdfRootsyEphemeralsy_0_11111111111121212121211111121111
    by contradiction
  next
    case insertsessionAliceparshkdfRootsyEphemeralsy_0_11111111111121212121212111111211111
    by contradiction
  next
    case insertsessionAliceparshkdfRootsyEphemeralsy_0_11111111111121212121212121112111111
    by contradiction
  next
    case insertsessionAliceparshkdfRootsyEphemeralsy_0_111111111111212121212121212111211111
    by contradiction
  next
    case insertsessionAliceparshkdfparshkdfRootsyEphemeralsyephemeralsecret_0_111111111111212121212121211121111211
    by contradiction
  next
    case insertsessionBobhashCKe_0_111111111111212121212121212111111111
    by contradiction
  next
    case insertsessionBobhashCKs_0_1111111111112121212121211111122
    by contradiction
  next
    case insertsessionBobhashparshkdfRootsyEphemeralsy_0_111111111111212121212121212111211111111111
    by contradiction
  next
    case insertsessionBobhashparshkdfparshkdfRootsyEphemeralsyephemeralsecret_0_1111111111112121212121212121112111121111111
    by contradiction
  next
    case insertsessionBobparshkdfRootInitEphemeralInit_0_1111111
    by contradiction
  next
    case insertsessionBobparshkdfRootsyEphemeralsy_0_1111111111111111111
    by contradiction
  next
    case insertsessionBobparshkdfRootsyEphemeralsy_0_111111111111211111111
    by contradiction
  next
    case insertsessionBobparshkdfRootsyEphemeralsy_0_111111111111212111111111
    by contradiction
  next
    case insertsessionBobparshkdfRootsyEphemeralsy_0_11111111111121212111111111
    by contradiction
  next
    case insertsessionBobparshkdfRootsyEphemeralsy_0_111111111111212121212111111211111
    by contradiction
  next
    case insertsessionBobparshkdfRootsyEphemeralsy_0_1111111111112121212121211111121111
    by contradiction
  next
    case insertsessionBobparshkdfRootsyEphemeralsy_0_1111111111112121212121212111211111
    by contradiction
  next
    case insertsessionBobparshkdfRootsyEphemeralsy_0_1111111111112121212121212121112111111
    by contradiction
  next
    case insertsessionBobparshkdfparshkdfRootsyEphemeralsyephemeralsecret_0_11111111111121212121212121211121111211
    by contradiction
  next
    case newephemeralsecret_0_1111111111112121212121212111211112
    by contradiction
  next
    case newephemeralsecret_0_111111111111212121212121212111211112
    by contradiction
  qed
qed























rule (modulo E) Init[color=#ffffff, process="new ~Alice.1;",
                      ]:
   [ Fr( ~Alice.1 ), Fr( ~Bob.1 ) ]
  --[ Init( ) ]->
   [ State_11( ~Alice.1, ~Bob.1 ) ]

  /*
  rule (modulo AC) Init[color=#ffffff, process="new ~Alice.1;",
                         ]:
     [ Fr( ~Alice ), Fr( ~Bob ) ]
    --[ Init( ) ]->
     [ State_11( ~Alice, ~Bob ) ]
  */

rule (modulo E) locksessionAlice_0_11[color=#ffffff,
                                      process="lock session(~Alice.1);" ]:
   [ State_11( ~Alice.1, ~Bob.1 ), Fr( lock ) ]
  --[
  Lock_0( '0', lock, session(~Alice.1) ),
  Lock( '0', lock, session(~Alice.1) )
  ]->
   [ State_111( lock, ~Alice.1, ~Bob.1 ) ]

  /*
  rule (modulo AC) locksessionAlice_0_11[color=#ffffff,
                                         process="lock session(~Alice.1);" ]:
     [ State_11( ~Alice, ~Bob ), Fr( lock ) ]
    --[
    Lock_0( '0', lock, session(~Alice) ),
    Lock( '0', lock, session(~Alice) )
    ]->
     [ State_111( lock, ~Alice, ~Bob ) ]
  */

rule (modulo E) locksessionBob_0_111[color=#ffffff,
                                     process="lock session(~Bob.1);" ]:
   [
   State_111( lock, ~Alice.1, ~Bob.1 ), Fr( lock.1 ),
   Fr( ~RootInit.1 ), Fr( ~EphemeralInit.1 )
   ]
  --[
  Lock_1( '1', lock.1, session(~Bob.1) ),
  Lock( '1', lock.1, session(~Bob.1) )
  ]->
   [
   State_111111( lock, ~Alice.1, ~Bob.1, ~EphemeralInit.1,
                 ~RootInit.1, lock.1
   )
   ]

  /*
  rule (modulo AC) locksessionBob_0_111[color=#ffffff,
                                        process="lock session(~Bob.1);" ]:
     [
     State_111( lock, ~Alice, ~Bob ), Fr( lock.1 ), Fr( ~RootInit ),
     Fr( ~EphemeralInit )
     ]
    --[
    Lock_1( '1', lock.1, session(~Bob) ),
    Lock( '1', lock.1, session(~Bob) )
    ]->
     [
     State_111111( lock, ~Alice, ~Bob, ~EphemeralInit, ~RootInit, lock.1
     )
     ]
  */

rule (modulo E) insertsessionAliceparshkdfRootInitEphemeralInit_0_111111[color=#ffffff,
                                                                         process="insert session(~Alice.1),pars1(hkdf(~RootInit.1, ~EphemeralInit.1));",
                                                                          ]:
   [
   State_111111( lock, ~Alice.1, ~Bob.1, ~EphemeralInit.1,
                 ~RootInit.1, lock.1
   )
   ]
  --[
  Insert( session(~Alice.1),
          pars1(hkdf(~RootInit.1, ~EphemeralInit.1))
  )
  ]->
   [
   State_1111111( lock, ~Alice.1, ~Bob.1, ~EphemeralInit.1,
                  ~RootInit.1, lock.1
   )
   ]

  /*
  rule (modulo AC) insertsessionAliceparshkdfRootInitEphemeralInit_0_111111[color=#ffffff,
                                                                            process="insert session(~Alice.1),pars1(hkdf(~RootInit.1, ~EphemeralInit.1));",
                                                                             ]:
     [
     State_111111( lock, ~Alice, ~Bob, ~EphemeralInit, ~RootInit, lock.1
     )
     ]
    --[
    Insert( session(~Alice), pars1(hkdf(~RootInit, ~EphemeralInit)) )
    ]->
     [
     State_1111111( lock, ~Alice, ~Bob, ~EphemeralInit, ~RootInit,
                    lock.1
     )
     ]
  */

rule (modulo E) insertsessionBobparshkdfRootInitEphemeralInit_0_1111111[color=#ffffff,
                                                                        process="insert session(~Bob.1),pars1(hkdf(~RootInit.1, ~EphemeralInit.1));",
                                                                         ]:
   [
   State_1111111( lock, ~Alice.1, ~Bob.1, ~EphemeralInit.1,
                  ~RootInit.1, lock.1
   )
   ]
  --[
  Insert( session(~Bob.1), pars1(hkdf(~RootInit.1, ~EphemeralInit.1))
  )
  ]->
   [
   State_11111111( lock, ~Alice.1, ~Bob.1, ~EphemeralInit.1,
                   ~RootInit.1, lock.1
   )
   ]

  /*
  rule (modulo AC) insertsessionBobparshkdfRootInitEphemeralInit_0_1111111[color=#ffffff,
                                                                           process="insert session(~Bob.1),pars1(hkdf(~RootInit.1, ~EphemeralInit.1));",
                                                                            ]:
     [
     State_1111111( lock, ~Alice, ~Bob, ~EphemeralInit, ~RootInit,
                    lock.1
     )
     ]
    --[ Insert( session(~Bob), pars1(hkdf(~RootInit, ~EphemeralInit)) )
    ]->
     [
     State_11111111( lock, ~Alice, ~Bob, ~EphemeralInit, ~RootInit,
                     lock.1
     )
     ]
  */

rule (modulo E) unlocksessionAlice_0_11111111[color=#ffffff,
                                              process="unlock session(~Alice.1);" ]:
   [
   State_11111111( lock, ~Alice.1, ~Bob.1, ~EphemeralInit.1,
                   ~RootInit.1, lock.1
   )
   ]
  --[
  Unlock_0( '0', lock, session(~Alice.1) ),
  Unlock( '0', lock, session(~Alice.1) )
  ]->
   [
   State_111111111( lock, ~Alice.1, ~Bob.1, ~EphemeralInit.1,
                    ~RootInit.1, lock.1
   )
   ]

  /*
  rule (modulo AC) unlocksessionAlice_0_11111111[color=#ffffff,
                                                 process="unlock session(~Alice.1);" ]:
     [
     State_11111111( lock, ~Alice, ~Bob, ~EphemeralInit, ~RootInit,
                     lock.1
     )
     ]
    --[
    Unlock_0( '0', lock, session(~Alice) ),
    Unlock( '0', lock, session(~Alice) )
    ]->
     [
     State_111111111( lock, ~Alice, ~Bob, ~EphemeralInit, ~RootInit,
                      lock.1
     )
     ]
  */

rule (modulo E) unlocksessionBob_0_111111111[color=#ffffff,
                                             process="unlock session(~Bob.1);" ]:
   [
   State_111111111( lock, ~Alice.1, ~Bob.1, ~EphemeralInit.1,
                    ~RootInit.1, lock.1
   )
   ]
  --[
  Unlock_1( '1', lock.1, session(~Bob.1) ),
  Unlock( '1', lock.1, session(~Bob.1) )
  ]->
   [
   !Semistate_11111111111( lock, ~Alice.1, ~Bob.1, ~EphemeralInit.1,
                           ~RootInit.1, lock.1
   )
   ]

  /*
  rule (modulo AC) unlocksessionBob_0_111111111[color=#ffffff,
                                                process="unlock session(~Bob.1);" ]:
     [
     State_111111111( lock, ~Alice, ~Bob, ~EphemeralInit, ~RootInit,
                      lock.1
     )
     ]
    --[
    Unlock_1( '1', lock.1, session(~Bob) ),
    Unlock( '1', lock.1, session(~Bob) )
    ]->
     [
     !Semistate_11111111111( lock, ~Alice, ~Bob, ~EphemeralInit,
                             ~RootInit, lock.1
     )
     ]
  */

rule (modulo E) p_1_1111111111[color=#ffffff, process="!",
                                ]:
   [
   !Semistate_11111111111( lock, ~Alice.1, ~Bob.1, ~EphemeralInit.1,
                           ~RootInit.1, lock.1
   )
   ]
  -->
   [
   !Semistate_111111111111( lock, ~Alice.1, ~Bob.1, ~EphemeralInit.1,
                            ~RootInit.1, lock.1
   )
   ]

  /*
  rule (modulo AC) p_1_1111111111[color=#ffffff, process="!",
                                   ]:
     [
     !Semistate_11111111111( lock, ~Alice, ~Bob, ~EphemeralInit,
                             ~RootInit, lock.1
     )
     ]
    -->
     [
     !Semistate_111111111111( lock, ~Alice, ~Bob, ~EphemeralInit,
                              ~RootInit, lock.1
     )
     ]
  */

rule (modulo E) locksessionAlice_0_11111111111111[color=#408051,
                                                  process="lock session(~Alice.1);" ]:
   [
   State_11111111111111( lock, ~Alice.1, ~Bob.1, ~EphemeralInit.1,
                         ~RootInit.1, lock.1
   ),
   Fr( lock.2 )
   ]
  --[
  Lock_2( '2', lock.2, session(~Alice.1) ),
  Lock( '2', lock.2, session(~Alice.1) )
  ]->
   [
   State_111111111111111( lock, ~Alice.1, ~Bob.1, ~EphemeralInit.1,
                          ~RootInit.1, lock.1, lock.2
   )
   ]

  /*
  rule (modulo AC) locksessionAlice_0_11111111111111[color=#408051,
                                                     process="lock session(~Alice.1);",
                                                      ]:
     [
     State_11111111111111( lock, ~Alice, ~Bob, ~EphemeralInit,
                           ~RootInit, lock.1
     ),
     Fr( lock.2 )
     ]
    --[
    Lock_2( '2', lock.2, session(~Alice) ),
    Lock( '2', lock.2, session(~Alice) )
    ]->
     [
     State_111111111111111( lock, ~Alice, ~Bob, ~EphemeralInit,
                            ~RootInit, lock.1, lock.2
     )
     ]
  */

rule (modulo E) locksessionBob_0_111111111111111[color=#408051,
                                                 process="lock session(~Bob.1);" ]:
   [
   State_111111111111111( lock, ~Alice.1, ~Bob.1, ~EphemeralInit.1,
                          ~RootInit.1, lock.1, lock.2
   ),
   Fr( lock.3 ), Fr( ~Root_sy.1 ), Fr( ~Ephemeral_sy.1 )
   ]
  --[
  Lock_3( '3', lock.3, session(~Bob.1) ),
  Lock( '3', lock.3, session(~Bob.1) )
  ]->
   [
   State_111111111111111111( lock, ~Alice.1, ~Bob.1, ~EphemeralInit.1,
                             ~Ephemeral_sy.1, ~RootInit.1, ~Root_sy.1, lock.1, lock.2, lock.3
   )
   ]

  /*
  rule (modulo AC) locksessionBob_0_111111111111111[color=#408051,
                                                    process="lock session(~Bob.1);" ]:
     [
     State_111111111111111( lock, ~Alice, ~Bob, ~EphemeralInit,
                            ~RootInit, lock.1, lock.2
     ),
     Fr( lock.3 ), Fr( ~Root_sy ), Fr( ~Ephemeral_sy )
     ]
    --[
    Lock_3( '3', lock.3, session(~Bob) ),
    Lock( '3', lock.3, session(~Bob) )
    ]->
     [
     State_111111111111111111( lock, ~Alice, ~Bob, ~EphemeralInit,
                               ~Ephemeral_sy, ~RootInit, ~Root_sy, lock.1, lock.2, lock.3
     )
     ]
  */

rule (modulo E) insertsessionAliceparshkdfRootsyEphemeralsy_0_111111111111111111[color=#408051,
                                                                                 process="insert session(~Alice.1),pars1(hkdf(~Root_sy.1, ~Ephemeral_sy.1));",
                                                                                  ]:
   [
   State_111111111111111111( lock, ~Alice.1, ~Bob.1, ~EphemeralInit.1,
                             ~Ephemeral_sy.1, ~RootInit.1, ~Root_sy.1, lock.1, lock.2, lock.3
   )
   ]
  --[
  Insert( session(~Alice.1), pars1(hkdf(~Root_sy.1, ~Ephemeral_sy.1))
  )
  ]->
   [
   State_1111111111111111111( lock, ~Alice.1, ~Bob.1,
                              ~EphemeralInit.1, ~Ephemeral_sy.1, ~RootInit.1, ~Root_sy.1, lock.1,
                              lock.2, lock.3
   )
   ]

  /*
  rule (modulo AC) insertsessionAliceparshkdfRootsyEphemeralsy_0_111111111111111111[color=#408051,
                                                                                    process="insert session(~Alice.1),pars1(hkdf(~Root_sy.1, ~Ephemeral_sy.1));",
                                                                                     ]:
     [
     State_111111111111111111( lock, ~Alice, ~Bob, ~EphemeralInit,
                               ~Ephemeral_sy, ~RootInit, ~Root_sy, lock.1, lock.2, lock.3
     )
     ]
    --[ Insert( session(~Alice), pars1(hkdf(~Root_sy, ~Ephemeral_sy)) )
    ]->
     [
     State_1111111111111111111( lock, ~Alice, ~Bob, ~EphemeralInit,
                                ~Ephemeral_sy, ~RootInit, ~Root_sy, lock.1, lock.2, lock.3
     )
     ]
  */

rule (modulo E) insertsessionBobparshkdfRootsyEphemeralsy_0_1111111111111111111[color=#408051,
                                                                                process="insert session(~Bob.1),pars1(hkdf(~Root_sy.1, ~Ephemeral_sy.1));",
                                                                                 ]:
   [
   State_1111111111111111111( lock, ~Alice.1, ~Bob.1,
                              ~EphemeralInit.1, ~Ephemeral_sy.1, ~RootInit.1, ~Root_sy.1, lock.1,
                              lock.2, lock.3
   )
   ]
  --[
  Insert( session(~Bob.1), pars1(hkdf(~Root_sy.1, ~Ephemeral_sy.1)) )
  ]->
   [
   State_11111111111111111111( lock, ~Alice.1, ~Bob.1,
                               ~EphemeralInit.1, ~Ephemeral_sy.1, ~RootInit.1, ~Root_sy.1, lock.1,
                               lock.2, lock.3
   )
   ]

  /*
  rule (modulo AC) insertsessionBobparshkdfRootsyEphemeralsy_0_1111111111111111111[color=#408051,
                                                                                   process="insert session(~Bob.1),pars1(hkdf(~Root_sy.1, ~Ephemeral_sy.1));",
                                                                                    ]:
     [
     State_1111111111111111111( lock, ~Alice, ~Bob, ~EphemeralInit,
                                ~Ephemeral_sy, ~RootInit, ~Root_sy, lock.1, lock.2, lock.3
     )
     ]
    --[ Insert( session(~Bob), pars1(hkdf(~Root_sy, ~Ephemeral_sy)) )
    ]->
     [
     State_11111111111111111111( lock, ~Alice, ~Bob, ~EphemeralInit,
                                 ~Ephemeral_sy, ~RootInit, ~Root_sy, lock.1, lock.2, lock.3
     )
     ]
  */

rule (modulo E) eventNewsessionsessionAlicesessionBobAlice_0_11111111111111111111[color=#408051,
                                                                                  process="event New_session( session(~Alice.1), session(~Bob.1), ~Alice.1 );",
                                                                                   ]:
   [
   State_11111111111111111111( lock, ~Alice.1, ~Bob.1,
                               ~EphemeralInit.1, ~Ephemeral_sy.1, ~RootInit.1, ~Root_sy.1, lock.1,
                               lock.2, lock.3
   )
   ]
  --[ New_session( session(~Alice.1), session(~Bob.1), ~Alice.1 ) ]->
   [
   State_111111111111111111111( lock, ~Alice.1, ~Bob.1,
                                ~EphemeralInit.1, ~Ephemeral_sy.1, ~RootInit.1, ~Root_sy.1, lock.1,
                                lock.2, lock.3
   )
   ]

  /*
  rule (modulo AC) eventNewsessionsessionAlicesessionBobAlice_0_11111111111111111111[color=#408051,
                                                                                     process="event New_session( session(~Alice.1), session(~Bob.1), ~Alice.1 );",
                                                                                      ]:
     [
     State_11111111111111111111( lock, ~Alice, ~Bob, ~EphemeralInit,
                                 ~Ephemeral_sy, ~RootInit, ~Root_sy, lock.1, lock.2, lock.3
     )
     ]
    --[ New_session( session(~Alice), session(~Bob), ~Alice ) ]->
     [
     State_111111111111111111111( lock, ~Alice, ~Bob, ~EphemeralInit,
                                  ~Ephemeral_sy, ~RootInit, ~Root_sy, lock.1, lock.2, lock.3
     )
     ]
  */

rule (modulo E) unlocksessionAlice_0_111111111111111111111[color=#408051,
                                                           process="unlock session(~Alice.1);",
                                                            ]:
   [
   State_111111111111111111111( lock, ~Alice.1, ~Bob.1,
                                ~EphemeralInit.1, ~Ephemeral_sy.1, ~RootInit.1, ~Root_sy.1, lock.1,
                                lock.2, lock.3
   )
   ]
  --[
  Unlock_2( '2', lock.2, session(~Alice.1) ),
  Unlock( '2', lock.2, session(~Alice.1) )
  ]->
   [
   State_1111111111111111111111( lock, ~Alice.1, ~Bob.1,
                                 ~EphemeralInit.1, ~Ephemeral_sy.1, ~RootInit.1, ~Root_sy.1, lock.1,
                                 lock.2, lock.3
   )
   ]

  /*
  rule (modulo AC) unlocksessionAlice_0_111111111111111111111[color=#408051,
                                                              process="unlock session(~Alice.1);",
                                                               ]:
     [
     State_111111111111111111111( lock, ~Alice, ~Bob, ~EphemeralInit,
                                  ~Ephemeral_sy, ~RootInit, ~Root_sy, lock.1, lock.2, lock.3
     )
     ]
    --[
    Unlock_2( '2', lock.2, session(~Alice) ),
    Unlock( '2', lock.2, session(~Alice) )
    ]->
     [
     State_1111111111111111111111( lock, ~Alice, ~Bob, ~EphemeralInit,
                                   ~Ephemeral_sy, ~RootInit, ~Root_sy, lock.1, lock.2, lock.3
     )
     ]
  */

rule (modulo E) unlocksessionBob_0_1111111111111111111111[color=#408051,
                                                          process="unlock session(~Bob.1);",
                                                           ]:
   [
   State_1111111111111111111111( lock, ~Alice.1, ~Bob.1,
                                 ~EphemeralInit.1, ~Ephemeral_sy.1, ~RootInit.1, ~Root_sy.1, lock.1,
                                 lock.2, lock.3
   )
   ]
  --[
  Unlock_3( '3', lock.3, session(~Bob.1) ),
  Unlock( '3', lock.3, session(~Bob.1) )
  ]->
   [ ]

  /*
  rule (modulo AC) unlocksessionBob_0_1111111111111111111111[color=#408051,
                                                             process="unlock session(~Bob.1);",
                                                              ]:
     [
     State_1111111111111111111111( lock, ~Alice, ~Bob, ~EphemeralInit,
                                   ~Ephemeral_sy, ~RootInit, ~Root_sy, lock.1, lock.2, lock.3
     )
     ]
    --[
    Unlock_3( '3', lock.3, session(~Bob) ),
    Unlock( '3', lock.3, session(~Bob) )
    ]->
     [ ]
  */

rule (modulo E) p_1_11111111111[color=#ffffff, process="!",
                                 ]:
   [
   !Semistate_111111111111( lock, ~Alice.1, ~Bob.1, ~EphemeralInit.1,
                            ~RootInit.1, lock.1
   )
   ]
  -->
   [
   !Semistate_11111111111121( lock, ~Alice.1, ~Bob.1,
                              ~EphemeralInit.1, ~RootInit.1, lock.1
   ),
   State_11111111111111( lock, ~Alice.1, ~Bob.1, ~EphemeralInit.1,
                         ~RootInit.1, lock.1
   )
   ]

  /*
  rule (modulo AC) p_1_11111111111[color=#ffffff, process="!",
                                    ]:
     [
     !Semistate_111111111111( lock, ~Alice, ~Bob, ~EphemeralInit,
                              ~RootInit, lock.1
     )
     ]
    -->
     [
     !Semistate_11111111111121( lock, ~Alice, ~Bob, ~EphemeralInit,
                                ~RootInit, lock.1
     ),
     State_11111111111111( lock, ~Alice, ~Bob, ~EphemeralInit,
                           ~RootInit, lock.1
     )
     ]
  */

rule (modulo E) locksessionAlice_0_1111111111112111[color=#408051,
                                                    process="lock session(~Alice.1);" ]:
   [
   State_1111111111112111( lock, ~Alice.1, ~Bob.1, ~EphemeralInit.1,
                           ~RootInit.1, lock.1
   ),
   Fr( lock.4 )
   ]
  --[
  Lock_4( '4', lock.4, session(~Alice.1) ),
  Lock( '4', lock.4, session(~Alice.1) )
  ]->
   [
   State_11111111111121111( lock, ~Alice.1, ~Bob.1, ~EphemeralInit.1,
                            ~RootInit.1, lock.1, lock.4
   )
   ]

  /*
  rule (modulo AC) locksessionAlice_0_1111111111112111[color=#408051,
                                                       process="lock session(~Alice.1);",
                                                        ]:
     [
     State_1111111111112111( lock, ~Alice, ~Bob, ~EphemeralInit,
                             ~RootInit, lock.1
     ),
     Fr( lock.2 )
     ]
    --[
    Lock_4( '4', lock.2, session(~Alice) ),
    Lock( '4', lock.2, session(~Alice) )
    ]->
     [
     State_11111111111121111( lock, ~Alice, ~Bob, ~EphemeralInit,
                              ~RootInit, lock.1, lock.2
     )
     ]
  */

rule (modulo E) locksessionBob_0_11111111111121111[color=#408051,
                                                   process="lock session(~Bob.1);" ]:
   [
   State_11111111111121111( lock, ~Alice.1, ~Bob.1, ~EphemeralInit.1,
                            ~RootInit.1, lock.1, lock.4
   ),
   Fr( lock.5 ), Fr( ~Root_sy.2 ), Fr( ~Ephemeral_sy.2 )
   ]
  --[
  Lock_5( '5', lock.5, session(~Bob.1) ),
  Lock( '5', lock.5, session(~Bob.1) )
  ]->
   [
   State_11111111111121111111( lock, ~Alice.1, ~Bob.1,
                               ~EphemeralInit.1, ~RootInit.1, lock.1, ~Ephemeral_sy.2, ~Root_sy.2,
                               lock.4, lock.5
   )
   ]

  /*
  rule (modulo AC) locksessionBob_0_11111111111121111[color=#408051,
                                                      process="lock session(~Bob.1);" ]:
     [
     State_11111111111121111( lock, ~Alice, ~Bob, ~EphemeralInit,
                              ~RootInit, lock.1, lock.2
     ),
     Fr( lock.3 ), Fr( ~Root_sy ), Fr( ~Ephemeral_sy )
     ]
    --[
    Lock_5( '5', lock.3, session(~Bob) ),
    Lock( '5', lock.3, session(~Bob) )
    ]->
     [
     State_11111111111121111111( lock, ~Alice, ~Bob, ~EphemeralInit,
                                 ~RootInit, lock.1, ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
  */

rule (modulo E) insertsessionAliceparshkdfRootsyEphemeralsy_0_11111111111121111111[color=#408051,
                                                                                   process="insert session(~Alice.1),pars1(hkdf(~Root_sy.2, ~Ephemeral_sy.2));",
                                                                                    ]:
   [
   State_11111111111121111111( lock, ~Alice.1, ~Bob.1,
                               ~EphemeralInit.1, ~RootInit.1, lock.1, ~Ephemeral_sy.2, ~Root_sy.2,
                               lock.4, lock.5
   )
   ]
  --[
  Insert( session(~Alice.1), pars1(hkdf(~Root_sy.2, ~Ephemeral_sy.2))
  )
  ]->
   [
   State_111111111111211111111( lock, ~Alice.1, ~Bob.1,
                                ~EphemeralInit.1, ~RootInit.1, lock.1, ~Ephemeral_sy.2, ~Root_sy.2,
                                lock.4, lock.5
   )
   ]

  /*
  rule (modulo AC) insertsessionAliceparshkdfRootsyEphemeralsy_0_11111111111121111111[color=#408051,
                                                                                      process="insert session(~Alice.1),pars1(hkdf(~Root_sy.2, ~Ephemeral_sy.2));",
                                                                                       ]:
     [
     State_11111111111121111111( lock, ~Alice, ~Bob, ~EphemeralInit,
                                 ~RootInit, lock.1, ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
    --[ Insert( session(~Alice), pars1(hkdf(~Root_sy, ~Ephemeral_sy)) )
    ]->
     [
     State_111111111111211111111( lock, ~Alice, ~Bob, ~EphemeralInit,
                                  ~RootInit, lock.1, ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
  */

rule (modulo E) insertsessionBobparshkdfRootsyEphemeralsy_0_111111111111211111111[color=#408051,
                                                                                  process="insert session(~Bob.1),pars1(hkdf(~Root_sy.2, ~Ephemeral_sy.2));",
                                                                                   ]:
   [
   State_111111111111211111111( lock, ~Alice.1, ~Bob.1,
                                ~EphemeralInit.1, ~RootInit.1, lock.1, ~Ephemeral_sy.2, ~Root_sy.2,
                                lock.4, lock.5
   )
   ]
  --[
  Insert( session(~Bob.1), pars1(hkdf(~Root_sy.2, ~Ephemeral_sy.2)) )
  ]->
   [
   State_1111111111112111111111( lock, ~Alice.1, ~Bob.1,
                                 ~EphemeralInit.1, ~RootInit.1, lock.1, ~Ephemeral_sy.2, ~Root_sy.2,
                                 lock.4, lock.5
   )
   ]

  /*
  rule (modulo AC) insertsessionBobparshkdfRootsyEphemeralsy_0_111111111111211111111[color=#408051,
                                                                                     process="insert session(~Bob.1),pars1(hkdf(~Root_sy.2, ~Ephemeral_sy.2));",
                                                                                      ]:
     [
     State_111111111111211111111( lock, ~Alice, ~Bob, ~EphemeralInit,
                                  ~RootInit, lock.1, ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
    --[ Insert( session(~Bob), pars1(hkdf(~Root_sy, ~Ephemeral_sy)) )
    ]->
     [
     State_1111111111112111111111( lock, ~Alice, ~Bob, ~EphemeralInit,
                                   ~RootInit, lock.1, ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
  */

rule (modulo E) eventNewsessionsessionAlicesessionBobBob_0_1111111111112111111111[color=#408051,
                                                                                  process="event New_session( session(~Alice.1), session(~Bob.1), ~Bob.1 );",
                                                                                   ]:
   [
   State_1111111111112111111111( lock, ~Alice.1, ~Bob.1,
                                 ~EphemeralInit.1, ~RootInit.1, lock.1, ~Ephemeral_sy.2, ~Root_sy.2,
                                 lock.4, lock.5
   )
   ]
  --[ New_session( session(~Alice.1), session(~Bob.1), ~Bob.1 ) ]->
   [
   State_11111111111121111111111( lock, ~Alice.1, ~Bob.1,
                                  ~EphemeralInit.1, ~RootInit.1, lock.1, ~Ephemeral_sy.2,
                                  ~Root_sy.2, lock.4, lock.5
   )
   ]

  /*
  rule (modulo AC) eventNewsessionsessionAlicesessionBobBob_0_1111111111112111111111[color=#408051,
                                                                                     process="event New_session( session(~Alice.1), session(~Bob.1), ~Bob.1 );",
                                                                                      ]:
     [
     State_1111111111112111111111( lock, ~Alice, ~Bob, ~EphemeralInit,
                                   ~RootInit, lock.1, ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
    --[ New_session( session(~Alice), session(~Bob), ~Bob ) ]->
     [
     State_11111111111121111111111( lock, ~Alice, ~Bob, ~EphemeralInit,
                                    ~RootInit, lock.1, ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
  */

rule (modulo E) unlocksessionAlice_0_11111111111121111111111[color=#408051,
                                                             process="unlock session(~Alice.1);",
                                                              ]:
   [
   State_11111111111121111111111( lock, ~Alice.1, ~Bob.1,
                                  ~EphemeralInit.1, ~RootInit.1, lock.1, ~Ephemeral_sy.2,
                                  ~Root_sy.2, lock.4, lock.5
   )
   ]
  --[
  Unlock_4( '4', lock.4, session(~Alice.1) ),
  Unlock( '4', lock.4, session(~Alice.1) )
  ]->
   [
   State_111111111111211111111111( lock, ~Alice.1, ~Bob.1,
                                   ~EphemeralInit.1, ~RootInit.1, lock.1, ~Ephemeral_sy.2,
                                   ~Root_sy.2, lock.4, lock.5
   )
   ]

  /*
  rule (modulo AC) unlocksessionAlice_0_11111111111121111111111[color=#408051,
                                                                process="unlock session(~Alice.1);",
                                                                 ]:
     [
     State_11111111111121111111111( lock, ~Alice, ~Bob, ~EphemeralInit,
                                    ~RootInit, lock.1, ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
    --[
    Unlock_4( '4', lock.2, session(~Alice) ),
    Unlock( '4', lock.2, session(~Alice) )
    ]->
     [
     State_111111111111211111111111( lock, ~Alice, ~Bob, ~EphemeralInit,
                                     ~RootInit, lock.1, ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
  */

rule (modulo E) unlocksessionBob_0_111111111111211111111111[color=#408051,
                                                            process="unlock session(~Bob.1);",
                                                             ]:
   [
   State_111111111111211111111111( lock, ~Alice.1, ~Bob.1,
                                   ~EphemeralInit.1, ~RootInit.1, lock.1, ~Ephemeral_sy.2,
                                   ~Root_sy.2, lock.4, lock.5
   )
   ]
  --[
  Unlock_5( '5', lock.5, session(~Bob.1) ),
  Unlock( '5', lock.5, session(~Bob.1) )
  ]->
   [ ]

  /*
  rule (modulo AC) unlocksessionBob_0_111111111111211111111111[color=#408051,
                                                               process="unlock session(~Bob.1);",
                                                                ]:
     [
     State_111111111111211111111111( lock, ~Alice, ~Bob, ~EphemeralInit,
                                     ~RootInit, lock.1, ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
    --[
    Unlock_5( '5', lock.3, session(~Bob) ),
    Unlock( '5', lock.3, session(~Bob) )
    ]->
     [ ]
  */

rule (modulo E) p_1_1111111111112[color=#ffffff, process="!",
                                   ]:
   [
   !Semistate_11111111111121( lock, ~Alice.1, ~Bob.1,
                              ~EphemeralInit.1, ~RootInit.1, lock.1
   )
   ]
  -->
   [
   !Semistate_1111111111112121( lock, ~Alice.1, ~Bob.1,
                                ~EphemeralInit.1, ~RootInit.1, lock.1
   ),
   State_1111111111112111( lock, ~Alice.1, ~Bob.1, ~EphemeralInit.1,
                           ~RootInit.1, lock.1
   )
   ]

  /*
  rule (modulo AC) p_1_1111111111112[color=#ffffff, process="!",
                                      ]:
     [
     !Semistate_11111111111121( lock, ~Alice, ~Bob, ~EphemeralInit,
                                ~RootInit, lock.1
     )
     ]
    -->
     [
     !Semistate_1111111111112121( lock, ~Alice, ~Bob, ~EphemeralInit,
                                  ~RootInit, lock.1
     ),
     State_1111111111112111( lock, ~Alice, ~Bob, ~EphemeralInit,
                             ~RootInit, lock.1
     )
     ]
  */

rule (modulo E) locksessionAlice_0_111111111111212111[color=#408074,
                                                      process="lock session(~Alice.1);",
                                                       ]:
   [
   State_111111111111212111( lock, ~Alice.1, ~Bob.1, ~EphemeralInit.1,
                             ~RootInit.1, lock.1
   ),
   Fr( lock.6 )
   ]
  --[
  Lock_6( '6', lock.6, session(~Alice.1) ),
  Lock( '6', lock.6, session(~Alice.1) )
  ]->
   [
   State_1111111111112121111( lock, ~Alice.1, ~Bob.1,
                              ~EphemeralInit.1, ~RootInit.1, lock.1, lock.6
   )
   ]

  /*
  rule (modulo AC) locksessionAlice_0_111111111111212111[color=#408074,
                                                         process="lock session(~Alice.1);",
                                                          ]:
     [
     State_111111111111212111( lock, ~Alice, ~Bob, ~EphemeralInit,
                               ~RootInit, lock.1
     ),
     Fr( lock.2 )
     ]
    --[
    Lock_6( '6', lock.2, session(~Alice) ),
    Lock( '6', lock.2, session(~Alice) )
    ]->
     [
     State_1111111111112121111( lock, ~Alice, ~Bob, ~EphemeralInit,
                                ~RootInit, lock.1, lock.2
     )
     ]
  */

rule (modulo E) locksessionBob_0_1111111111112121111[color=#408074,
                                                     process="lock session(~Bob.1);" ]:
   [
   State_1111111111112121111( lock, ~Alice.1, ~Bob.1,
                              ~EphemeralInit.1, ~RootInit.1, lock.1, lock.6
   ),
   Fr( lock.7 ), In( am.1 ), Fr( ~Root_sy.3 ), Fr( ~Ephemeral_sy.3 )
   ]
  --[
  Lock_7( '7', lock.7, session(~Bob.1) ),
  Lock( '7', lock.7, session(~Bob.1) )
  ]->
   [
   State_11111111111121211111111( lock, ~Alice.1, ~Bob.1,
                                  ~EphemeralInit.1, ~RootInit.1, am.1, lock.1, ~Ephemeral_sy.3,
                                  ~Root_sy.3, lock.6, lock.7
   )
   ]

  /*
  rule (modulo AC) locksessionBob_0_1111111111112121111[color=#408074,
                                                        process="lock session(~Bob.1);",
                                                         ]:
     [
     State_1111111111112121111( lock, ~Alice, ~Bob, ~EphemeralInit,
                                ~RootInit, lock.1, lock.2
     ),
     Fr( lock.3 ), In( am ), Fr( ~Root_sy ), Fr( ~Ephemeral_sy )
     ]
    --[
    Lock_7( '7', lock.3, session(~Bob) ),
    Lock( '7', lock.3, session(~Bob) )
    ]->
     [
     State_11111111111121211111111( lock, ~Alice, ~Bob, ~EphemeralInit,
                                    ~RootInit, am, lock.1, ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
  */

rule (modulo E) insertsessionAliceparshkdfRootsyEphemeralsy_0_11111111111121211111111[color=#408074,
                                                                                      process="insert session(~Alice.1),pars1(hkdf(~Root_sy.3, ~Ephemeral_sy.3));",
                                                                                       ]:
   [
   State_11111111111121211111111( lock, ~Alice.1, ~Bob.1,
                                  ~EphemeralInit.1, ~RootInit.1, am.1, lock.1, ~Ephemeral_sy.3,
                                  ~Root_sy.3, lock.6, lock.7
   )
   ]
  --[
  Insert( session(~Alice.1), pars1(hkdf(~Root_sy.3, ~Ephemeral_sy.3))
  )
  ]->
   [
   State_111111111111212111111111( lock, ~Alice.1, ~Bob.1,
                                   ~EphemeralInit.1, ~RootInit.1, am.1, lock.1, ~Ephemeral_sy.3,
                                   ~Root_sy.3, lock.6, lock.7
   )
   ]

  /*
  rule (modulo AC) insertsessionAliceparshkdfRootsyEphemeralsy_0_11111111111121211111111[color=#408074,
                                                                                         process="insert session(~Alice.1),pars1(hkdf(~Root_sy.3, ~Ephemeral_sy.3));",
                                                                                          ]:
     [
     State_11111111111121211111111( lock, ~Alice, ~Bob, ~EphemeralInit,
                                    ~RootInit, am, lock.1, ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
    --[ Insert( session(~Alice), pars1(hkdf(~Root_sy, ~Ephemeral_sy)) )
    ]->
     [
     State_111111111111212111111111( lock, ~Alice, ~Bob, ~EphemeralInit,
                                     ~RootInit, am, lock.1, ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
  */

rule (modulo E) insertsessionBobparshkdfRootsyEphemeralsy_0_111111111111212111111111[color=#408074,
                                                                                     process="insert session(~Bob.1),pars1(hkdf(~Root_sy.3, ~Ephemeral_sy.3));",
                                                                                      ]:
   [
   State_111111111111212111111111( lock, ~Alice.1, ~Bob.1,
                                   ~EphemeralInit.1, ~RootInit.1, am.1, lock.1, ~Ephemeral_sy.3,
                                   ~Root_sy.3, lock.6, lock.7
   )
   ]
  --[
  Insert( session(~Bob.1), pars1(hkdf(~Root_sy.3, ~Ephemeral_sy.3)) )
  ]->
   [
   State_1111111111112121111111111( lock, ~Alice.1, ~Bob.1,
                                    ~EphemeralInit.1, ~RootInit.1, am.1, lock.1, ~Ephemeral_sy.3,
                                    ~Root_sy.3, lock.6, lock.7
   )
   ]

  /*
  rule (modulo AC) insertsessionBobparshkdfRootsyEphemeralsy_0_111111111111212111111111[color=#408074,
                                                                                        process="insert session(~Bob.1),pars1(hkdf(~Root_sy.3, ~Ephemeral_sy.3));",
                                                                                         ]:
     [
     State_111111111111212111111111( lock, ~Alice, ~Bob, ~EphemeralInit,
                                     ~RootInit, am, lock.1, ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
    --[ Insert( session(~Bob), pars1(hkdf(~Root_sy, ~Ephemeral_sy)) )
    ]->
     [
     State_1111111111112121111111111( lock, ~Alice, ~Bob,
                                      ~EphemeralInit, ~RootInit, am, lock.1, ~Ephemeral_sy,
                                      ~Root_sy, lock.2, lock.3
     )
     ]
  */

rule (modulo E) eventMsgnewsessionamsessionAlicesessionBobAlice_0_1111111111112121111111111[color=#408074,
                                                                                            process="event Msg_new_session( am.1, session(~Alice.1), session(~Bob.1), ~Alice.1
);",
                                                                                             ]:
   [
   State_1111111111112121111111111( lock, ~Alice.1, ~Bob.1,
                                    ~EphemeralInit.1, ~RootInit.1, am.1, lock.1, ~Ephemeral_sy.3,
                                    ~Root_sy.3, lock.6, lock.7
   )
   ]
  --[
  Msg_new_session( am.1, session(~Alice.1), session(~Bob.1), ~Alice.1
  )
  ]->
   [
   State_11111111111121211111111111( lock, ~Alice.1, ~Bob.1,
                                     ~EphemeralInit.1, ~RootInit.1, am.1, lock.1, ~Ephemeral_sy.3,
                                     ~Root_sy.3, lock.6, lock.7
   )
   ]

  /*
  rule (modulo AC) eventMsgnewsessionamsessionAlicesessionBobAlice_0_1111111111112121111111111[color=#408074,
                                                                                               process="event Msg_new_session( am.1, session(~Alice.1), session(~Bob.1), ~Alice.1
);",
                                                                                                ]:
     [
     State_1111111111112121111111111( lock, ~Alice, ~Bob,
                                      ~EphemeralInit, ~RootInit, am, lock.1, ~Ephemeral_sy,
                                      ~Root_sy, lock.2, lock.3
     )
     ]
    --[ Msg_new_session( am, session(~Alice), session(~Bob), ~Alice )
    ]->
     [
     State_11111111111121211111111111( lock, ~Alice, ~Bob,
                                       ~EphemeralInit, ~RootInit, am, lock.1, ~Ephemeral_sy,
                                       ~Root_sy, lock.2, lock.3
     )
     ]
  */

rule (modulo E) unlocksessionAlice_0_11111111111121211111111111[color=#408074,
                                                                process="unlock session(~Alice.1);",
                                                                 ]:
   [
   State_11111111111121211111111111( lock, ~Alice.1, ~Bob.1,
                                     ~EphemeralInit.1, ~RootInit.1, am.1, lock.1, ~Ephemeral_sy.3,
                                     ~Root_sy.3, lock.6, lock.7
   )
   ]
  --[
  Unlock_6( '6', lock.6, session(~Alice.1) ),
  Unlock( '6', lock.6, session(~Alice.1) )
  ]->
   [
   State_111111111111212111111111111( lock, ~Alice.1, ~Bob.1,
                                      ~EphemeralInit.1, ~RootInit.1, am.1, lock.1, ~Ephemeral_sy.3,
                                      ~Root_sy.3, lock.6, lock.7
   )
   ]

  /*
  rule (modulo AC) unlocksessionAlice_0_11111111111121211111111111[color=#408074,
                                                                   process="unlock session(~Alice.1);",
                                                                    ]:
     [
     State_11111111111121211111111111( lock, ~Alice, ~Bob,
                                       ~EphemeralInit, ~RootInit, am, lock.1, ~Ephemeral_sy,
                                       ~Root_sy, lock.2, lock.3
     )
     ]
    --[
    Unlock_6( '6', lock.2, session(~Alice) ),
    Unlock( '6', lock.2, session(~Alice) )
    ]->
     [
     State_111111111111212111111111111( lock, ~Alice, ~Bob,
                                        ~EphemeralInit, ~RootInit, am, lock.1, ~Ephemeral_sy,
                                        ~Root_sy, lock.2, lock.3
     )
     ]
  */

rule (modulo E) unlocksessionBob_0_111111111111212111111111111[color=#408074,
                                                               process="unlock session(~Bob.1);",
                                                                ]:
   [
   State_111111111111212111111111111( lock, ~Alice.1, ~Bob.1,
                                      ~EphemeralInit.1, ~RootInit.1, am.1, lock.1, ~Ephemeral_sy.3,
                                      ~Root_sy.3, lock.6, lock.7
   )
   ]
  --[
  Unlock_7( '7', lock.7, session(~Bob.1) ),
  Unlock( '7', lock.7, session(~Bob.1) )
  ]->
   [ ]

  /*
  rule (modulo AC) unlocksessionBob_0_111111111111212111111111111[color=#408074,
                                                                  process="unlock session(~Bob.1);",
                                                                   ]:
     [
     State_111111111111212111111111111( lock, ~Alice, ~Bob,
                                        ~EphemeralInit, ~RootInit, am, lock.1, ~Ephemeral_sy,
                                        ~Root_sy, lock.2, lock.3
     )
     ]
    --[
    Unlock_7( '7', lock.3, session(~Bob) ),
    Unlock( '7', lock.3, session(~Bob) )
    ]->
     [ ]
  */

rule (modulo E) p_1_111111111111212[color=#ffffff, process="!",
                                     ]:
   [
   !Semistate_1111111111112121( lock, ~Alice.1, ~Bob.1,
                                ~EphemeralInit.1, ~RootInit.1, lock.1
   )
   ]
  -->
   [
   !Semistate_111111111111212121( lock, ~Alice.1, ~Bob.1,
                                  ~EphemeralInit.1, ~RootInit.1, lock.1
   ),
   State_111111111111212111( lock, ~Alice.1, ~Bob.1, ~EphemeralInit.1,
                             ~RootInit.1, lock.1
   )
   ]

  /*
  rule (modulo AC) p_1_111111111111212[color=#ffffff, process="!",
                                        ]:
     [
     !Semistate_1111111111112121( lock, ~Alice, ~Bob, ~EphemeralInit,
                                  ~RootInit, lock.1
     )
     ]
    -->
     [
     !Semistate_111111111111212121( lock, ~Alice, ~Bob, ~EphemeralInit,
                                    ~RootInit, lock.1
     ),
     State_111111111111212111( lock, ~Alice, ~Bob, ~EphemeralInit,
                               ~RootInit, lock.1
     )
     ]
  */

rule (modulo E) locksessionAlice_0_11111111111121212111[color=#408074,
                                                        process="lock session(~Alice.1);",
                                                         ]:
   [
   State_11111111111121212111( lock, ~Alice.1, ~Bob.1,
                               ~EphemeralInit.1, ~RootInit.1, lock.1
   ),
   Fr( lock.8 )
   ]
  --[
  Lock_8( '8', lock.8, session(~Alice.1) ),
  Lock( '8', lock.8, session(~Alice.1) )
  ]->
   [
   State_111111111111212121111( lock, ~Alice.1, ~Bob.1,
                                ~EphemeralInit.1, ~RootInit.1, lock.1, lock.8
   )
   ]

  /*
  rule (modulo AC) locksessionAlice_0_11111111111121212111[color=#408074,
                                                           process="lock session(~Alice.1);",
                                                            ]:
     [
     State_11111111111121212111( lock, ~Alice, ~Bob, ~EphemeralInit,
                                 ~RootInit, lock.1
     ),
     Fr( lock.2 )
     ]
    --[
    Lock_8( '8', lock.2, session(~Alice) ),
    Lock( '8', lock.2, session(~Alice) )
    ]->
     [
     State_111111111111212121111( lock, ~Alice, ~Bob, ~EphemeralInit,
                                  ~RootInit, lock.1, lock.2
     )
     ]
  */

rule (modulo E) locksessionBob_0_111111111111212121111[color=#408074,
                                                       process="lock session(~Bob.1);",
                                                        ]:
   [
   State_111111111111212121111( lock, ~Alice.1, ~Bob.1,
                                ~EphemeralInit.1, ~RootInit.1, lock.1, lock.8
   ),
   Fr( lock.9 ), In( am.2 ), Fr( ~Root_sy.4 ), Fr( ~Ephemeral_sy.4 )
   ]
  --[
  Lock_9( '9', lock.9, session(~Bob.1) ),
  Lock( '9', lock.9, session(~Bob.1) )
  ]->
   [
   State_1111111111112121211111111( lock, ~Alice.1, ~Bob.1,
                                    ~EphemeralInit.1, ~RootInit.1, lock.1, am.2, ~Ephemeral_sy.4,
                                    ~Root_sy.4, lock.8, lock.9
   )
   ]

  /*
  rule (modulo AC) locksessionBob_0_111111111111212121111[color=#408074,
                                                          process="lock session(~Bob.1);",
                                                           ]:
     [
     State_111111111111212121111( lock, ~Alice, ~Bob, ~EphemeralInit,
                                  ~RootInit, lock.1, lock.2
     ),
     Fr( lock.3 ), In( am ), Fr( ~Root_sy ), Fr( ~Ephemeral_sy )
     ]
    --[
    Lock_9( '9', lock.3, session(~Bob) ),
    Lock( '9', lock.3, session(~Bob) )
    ]->
     [
     State_1111111111112121211111111( lock, ~Alice, ~Bob,
                                      ~EphemeralInit, ~RootInit, lock.1, am, ~Ephemeral_sy,
                                      ~Root_sy, lock.2, lock.3
     )
     ]
  */

rule (modulo E) insertsessionAliceparshkdfRootsyEphemeralsy_0_1111111111112121211111111[color=#408074,
                                                                                        process="insert session(~Alice.1),pars1(hkdf(~Root_sy.4, ~Ephemeral_sy.4));",
                                                                                         ]:
   [
   State_1111111111112121211111111( lock, ~Alice.1, ~Bob.1,
                                    ~EphemeralInit.1, ~RootInit.1, lock.1, am.2, ~Ephemeral_sy.4,
                                    ~Root_sy.4, lock.8, lock.9
   )
   ]
  --[
  Insert( session(~Alice.1), pars1(hkdf(~Root_sy.4, ~Ephemeral_sy.4))
  )
  ]->
   [
   State_11111111111121212111111111( lock, ~Alice.1, ~Bob.1,
                                     ~EphemeralInit.1, ~RootInit.1, lock.1, am.2, ~Ephemeral_sy.4,
                                     ~Root_sy.4, lock.8, lock.9
   )
   ]

  /*
  rule (modulo AC) insertsessionAliceparshkdfRootsyEphemeralsy_0_1111111111112121211111111[color=#408074,
                                                                                           process="insert session(~Alice.1),pars1(hkdf(~Root_sy.4, ~Ephemeral_sy.4));",
                                                                                            ]:
     [
     State_1111111111112121211111111( lock, ~Alice, ~Bob,
                                      ~EphemeralInit, ~RootInit, lock.1, am, ~Ephemeral_sy,
                                      ~Root_sy, lock.2, lock.3
     )
     ]
    --[ Insert( session(~Alice), pars1(hkdf(~Root_sy, ~Ephemeral_sy)) )
    ]->
     [
     State_11111111111121212111111111( lock, ~Alice, ~Bob,
                                       ~EphemeralInit, ~RootInit, lock.1, am, ~Ephemeral_sy,
                                       ~Root_sy, lock.2, lock.3
     )
     ]
  */

rule (modulo E) insertsessionBobparshkdfRootsyEphemeralsy_0_11111111111121212111111111[color=#408074,
                                                                                       process="insert session(~Bob.1),pars1(hkdf(~Root_sy.4, ~Ephemeral_sy.4));",
                                                                                        ]:
   [
   State_11111111111121212111111111( lock, ~Alice.1, ~Bob.1,
                                     ~EphemeralInit.1, ~RootInit.1, lock.1, am.2, ~Ephemeral_sy.4,
                                     ~Root_sy.4, lock.8, lock.9
   )
   ]
  --[
  Insert( session(~Bob.1), pars1(hkdf(~Root_sy.4, ~Ephemeral_sy.4)) )
  ]->
   [
   State_111111111111212121111111111( lock, ~Alice.1, ~Bob.1,
                                      ~EphemeralInit.1, ~RootInit.1, lock.1, am.2, ~Ephemeral_sy.4,
                                      ~Root_sy.4, lock.8, lock.9
   )
   ]

  /*
  rule (modulo AC) insertsessionBobparshkdfRootsyEphemeralsy_0_11111111111121212111111111[color=#408074,
                                                                                          process="insert session(~Bob.1),pars1(hkdf(~Root_sy.4, ~Ephemeral_sy.4));",
                                                                                           ]:
     [
     State_11111111111121212111111111( lock, ~Alice, ~Bob,
                                       ~EphemeralInit, ~RootInit, lock.1, am, ~Ephemeral_sy,
                                       ~Root_sy, lock.2, lock.3
     )
     ]
    --[ Insert( session(~Bob), pars1(hkdf(~Root_sy, ~Ephemeral_sy)) )
    ]->
     [
     State_111111111111212121111111111( lock, ~Alice, ~Bob,
                                        ~EphemeralInit, ~RootInit, lock.1, am, ~Ephemeral_sy,
                                        ~Root_sy, lock.2, lock.3
     )
     ]
  */

rule (modulo E) eventMsgnewsessionamsessionAlicesessionBobBob_0_111111111111212121111111111[color=#408074,
                                                                                            process="event Msg_new_session( am.2, session(~Alice.1), session(~Bob.1), ~Bob.1 );",
                                                                                             ]:
   [
   State_111111111111212121111111111( lock, ~Alice.1, ~Bob.1,
                                      ~EphemeralInit.1, ~RootInit.1, lock.1, am.2, ~Ephemeral_sy.4,
                                      ~Root_sy.4, lock.8, lock.9
   )
   ]
  --[
  Msg_new_session( am.2, session(~Alice.1), session(~Bob.1), ~Bob.1 )
  ]->
   [
   State_1111111111112121211111111111( lock, ~Alice.1, ~Bob.1,
                                       ~EphemeralInit.1, ~RootInit.1, lock.1, am.2, ~Ephemeral_sy.4,
                                       ~Root_sy.4, lock.8, lock.9
   )
   ]

  /*
  rule (modulo AC) eventMsgnewsessionamsessionAlicesessionBobBob_0_111111111111212121111111111[color=#408074,
                                                                                               process="event Msg_new_session( am.2, session(~Alice.1), session(~Bob.1), ~Bob.1 );",
                                                                                                ]:
     [
     State_111111111111212121111111111( lock, ~Alice, ~Bob,
                                        ~EphemeralInit, ~RootInit, lock.1, am, ~Ephemeral_sy,
                                        ~Root_sy, lock.2, lock.3
     )
     ]
    --[ Msg_new_session( am, session(~Alice), session(~Bob), ~Bob ) ]->
     [
     State_1111111111112121211111111111( lock, ~Alice, ~Bob,
                                         ~EphemeralInit, ~RootInit, lock.1, am, ~Ephemeral_sy,
                                         ~Root_sy, lock.2, lock.3
     )
     ]
  */

rule (modulo E) unlocksessionAlice_0_1111111111112121211111111111[color=#408074,
                                                                  process="unlock session(~Alice.1);",
                                                                   ]:
   [
   State_1111111111112121211111111111( lock, ~Alice.1, ~Bob.1,
                                       ~EphemeralInit.1, ~RootInit.1, lock.1, am.2, ~Ephemeral_sy.4,
                                       ~Root_sy.4, lock.8, lock.9
   )
   ]
  --[
  Unlock_8( '8', lock.8, session(~Alice.1) ),
  Unlock( '8', lock.8, session(~Alice.1) )
  ]->
   [
   State_11111111111121212111111111111( lock, ~Alice.1, ~Bob.1,
                                        ~EphemeralInit.1, ~RootInit.1, lock.1, am.2,
                                        ~Ephemeral_sy.4, ~Root_sy.4, lock.8, lock.9
   )
   ]

  /*
  rule (modulo AC) unlocksessionAlice_0_1111111111112121211111111111[color=#408074,
                                                                     process="unlock session(~Alice.1);",
                                                                      ]:
     [
     State_1111111111112121211111111111( lock, ~Alice, ~Bob,
                                         ~EphemeralInit, ~RootInit, lock.1, am, ~Ephemeral_sy,
                                         ~Root_sy, lock.2, lock.3
     )
     ]
    --[
    Unlock_8( '8', lock.2, session(~Alice) ),
    Unlock( '8', lock.2, session(~Alice) )
    ]->
     [
     State_11111111111121212111111111111( lock, ~Alice, ~Bob,
                                          ~EphemeralInit, ~RootInit, lock.1, am, ~Ephemeral_sy,
                                          ~Root_sy, lock.2, lock.3
     )
     ]
  */

rule (modulo E) unlocksessionBob_0_11111111111121212111111111111[color=#408074,
                                                                 process="unlock session(~Bob.1);",
                                                                  ]:
   [
   State_11111111111121212111111111111( lock, ~Alice.1, ~Bob.1,
                                        ~EphemeralInit.1, ~RootInit.1, lock.1, am.2,
                                        ~Ephemeral_sy.4, ~Root_sy.4, lock.8, lock.9
   )
   ]
  --[
  Unlock_9( '9', lock.9, session(~Bob.1) ),
  Unlock( '9', lock.9, session(~Bob.1) )
  ]->
   [ ]

  /*
  rule (modulo AC) unlocksessionBob_0_11111111111121212111111111111[color=#408074,
                                                                    process="unlock session(~Bob.1);",
                                                                     ]:
     [
     State_11111111111121212111111111111( lock, ~Alice, ~Bob,
                                          ~EphemeralInit, ~RootInit, lock.1, am, ~Ephemeral_sy,
                                          ~Root_sy, lock.2, lock.3
     )
     ]
    --[
    Unlock_9( '9', lock.3, session(~Bob) ),
    Unlock( '9', lock.3, session(~Bob) )
    ]->
     [ ]
  */

rule (modulo E) p_1_11111111111121212[color=#ffffff, process="!",
                                       ]:
   [
   !Semistate_111111111111212121( lock, ~Alice.1, ~Bob.1,
                                  ~EphemeralInit.1, ~RootInit.1, lock.1
   )
   ]
  -->
   [
   !Semistate_11111111111121212121( lock, ~Alice.1, ~Bob.1,
                                    ~EphemeralInit.1, ~RootInit.1, lock.1
   ),
   State_11111111111121212111( lock, ~Alice.1, ~Bob.1,
                               ~EphemeralInit.1, ~RootInit.1, lock.1
   )
   ]

  /*
  rule (modulo AC) p_1_11111111111121212[color=#ffffff, process="!",
                                          ]:
     [
     !Semistate_111111111111212121( lock, ~Alice, ~Bob, ~EphemeralInit,
                                    ~RootInit, lock.1
     )
     ]
    -->
     [
     !Semistate_11111111111121212121( lock, ~Alice, ~Bob,
                                      ~EphemeralInit, ~RootInit, lock.1
     ),
     State_11111111111121212111( lock, ~Alice, ~Bob, ~EphemeralInit,
                                 ~RootInit, lock.1
     )
     ]
  */

rule (modulo E) locksessionAlice_0_1111111111112121212111[color=#40807e,
                                                          process="lock session(~Alice.1);",
                                                           ]:
   [
   State_1111111111112121212111( lock, ~Alice.1, ~Bob.1,
                                 ~EphemeralInit.1, ~RootInit.1, lock.1
   ),
   Fr( lock.10 )
   ]
  --[
  Lock_10( '10', lock.10, session(~Alice.1) ),
  Lock( '10', lock.10, session(~Alice.1) )
  ]->
   [
   State_11111111111121212121111( lock, ~Alice.1, ~Bob.1,
                                  ~EphemeralInit.1, ~RootInit.1, lock.1, lock.10
   )
   ]

  /*
  rule (modulo AC) locksessionAlice_0_1111111111112121212111[color=#40807e,
                                                             process="lock session(~Alice.1);",
                                                              ]:
     [
     State_1111111111112121212111( lock, ~Alice, ~Bob, ~EphemeralInit,
                                   ~RootInit, lock.1
     ),
     Fr( lock.2 )
     ]
    --[
    Lock_10( '10', lock.2, session(~Alice) ),
    Lock( '10', lock.2, session(~Alice) )
    ]->
     [
     State_11111111111121212121111( lock, ~Alice, ~Bob, ~EphemeralInit,
                                    ~RootInit, lock.1, lock.2
     )
     ]
  */

rule (modulo E) locksessionBob_0_11111111111121212121111[color=#40807e,
                                                         process="lock session(~Bob.1);",
                                                          ]:
   [
   State_11111111111121212121111( lock, ~Alice.1, ~Bob.1,
                                  ~EphemeralInit.1, ~RootInit.1, lock.1, lock.10
   ),
   Fr( lock.11 )
   ]
  --[
  Lock_11( '11', lock.11, session(~Bob.1) ),
  Lock( '11', lock.11, session(~Bob.1) )
  ]->
   [
   State_111111111111212121211111( lock, ~Alice.1, ~Bob.1,
                                   ~EphemeralInit.1, ~RootInit.1, lock.1, lock.10, lock.11
   )
   ]

  /*
  rule (modulo AC) locksessionBob_0_11111111111121212121111[color=#40807e,
                                                            process="lock session(~Bob.1);",
                                                             ]:
     [
     State_11111111111121212121111( lock, ~Alice, ~Bob, ~EphemeralInit,
                                    ~RootInit, lock.1, lock.2
     ),
     Fr( lock.3 )
     ]
    --[
    Lock_11( '11', lock.3, session(~Bob) ),
    Lock( '11', lock.3, session(~Bob) )
    ]->
     [
     State_111111111111212121211111( lock, ~Alice, ~Bob, ~EphemeralInit,
                                     ~RootInit, lock.1, lock.2, lock.3
     )
     ]
  */

rule (modulo E) lookupsessionAliceasCKa_0_111111111111212121211111[color=#40807e,
                                                                   process="lookup session(~Alice.1) as CKa.1",
                                                                    ]:
   [
   State_111111111111212121211111( lock, ~Alice.1, ~Bob.1,
                                   ~EphemeralInit.1, ~RootInit.1, lock.1, lock.10, lock.11
   )
   ]
  --[ IsIn( session(~Alice.1), CKa.1 ) ]->
   [
   State_1111111111112121212111111( lock, ~Alice.1, ~Bob.1,
                                    ~EphemeralInit.1, ~RootInit.1, CKa.1, lock.1, lock.10, lock.11
   )
   ]

  /*
  rule (modulo AC) lookupsessionAliceasCKa_0_111111111111212121211111[color=#40807e,
                                                                      process="lookup session(~Alice.1) as CKa.1",
                                                                       ]:
     [
     State_111111111111212121211111( lock, ~Alice, ~Bob, ~EphemeralInit,
                                     ~RootInit, lock.1, lock.2, lock.3
     )
     ]
    --[ IsIn( session(~Alice), CKa ) ]->
     [
     State_1111111111112121212111111( lock, ~Alice, ~Bob,
                                      ~EphemeralInit, ~RootInit, CKa, lock.1, lock.2, lock.3
     )
     ]
  */

rule (modulo E) lookupsessionBobasCKb_0_1111111111112121212111111[color=#40807e,
                                                                  process="lookup session(~Bob.1) as CKb.1",
                                                                   ]:
   [
   State_1111111111112121212111111( lock, ~Alice.1, ~Bob.1,
                                    ~EphemeralInit.1, ~RootInit.1, CKa.1, lock.1, lock.10, lock.11
   )
   ]
  --[ IsIn( session(~Bob.1), CKb.1 ) ]->
   [
   State_11111111111121212121111111( lock, ~Alice.1, ~Bob.1,
                                     ~EphemeralInit.1, ~RootInit.1, CKa.1, CKb.1, lock.1, lock.10,
                                     lock.11
   )
   ]

  /*
  rule (modulo AC) lookupsessionBobasCKb_0_1111111111112121212111111[color=#40807e,
                                                                     process="lookup session(~Bob.1) as CKb.1",
                                                                      ]:
     [
     State_1111111111112121212111111( lock, ~Alice, ~Bob,
                                      ~EphemeralInit, ~RootInit, CKa, lock.1, lock.2, lock.3
     )
     ]
    --[ IsIn( session(~Bob), CKb ) ]->
     [
     State_11111111111121212121111111( lock, ~Alice, ~Bob,
                                       ~EphemeralInit, ~RootInit, CKa, CKb, lock.1, lock.2, lock.3
     )
     ]
  */

rule (modulo E) outhashCKa_0_111111111111212121211111111[color=#40807e,
                                                         process="out(hash2(CKa.1, '1'));",
                                                          ]:
   [
   State_11111111111121212121111111( lock, ~Alice.1, ~Bob.1,
                                     ~EphemeralInit.1, ~RootInit.1, CKa.1, CKb.1, lock.1, lock.10,
                                     lock.11
   )
   ]
  -->
   [
   State_1111111111112121212111111111( lock, ~Alice.1, ~Bob.1,
                                       ~EphemeralInit.1, ~RootInit.1, CKa.1, CKb.1, lock.1, lock.10,
                                       lock.11
   ),
   Out( hash2(CKa.1, '1') )
   ]

  /*
  rule (modulo AC) outhashCKa_0_111111111111212121211111111[color=#40807e,
                                                            process="out(hash2(CKa.1, '1'));",
                                                             ]:
     [
     State_11111111111121212121111111( lock, ~Alice, ~Bob,
                                       ~EphemeralInit, ~RootInit, CKa, CKb, lock.1, lock.2, lock.3
     )
     ]
    -->
     [
     State_1111111111112121212111111111( lock, ~Alice, ~Bob,
                                         ~EphemeralInit, ~RootInit, CKa, CKb, lock.1, lock.2, lock.3
     ),
     Out( hash2(CKa, '1') )
     ]
  */

rule (modulo E) outhashCKb_0_1111111111112121212111111111[color=#40807e,
                                                          process="out(hash2(CKb.1, '1'));",
                                                           ]:
   [
   State_1111111111112121212111111111( lock, ~Alice.1, ~Bob.1,
                                       ~EphemeralInit.1, ~RootInit.1, CKa.1, CKb.1, lock.1, lock.10,
                                       lock.11
   )
   ]
  -->
   [
   State_11111111111121212121111111111( lock, ~Alice.1, ~Bob.1,
                                        ~EphemeralInit.1, ~RootInit.1, CKa.1, CKb.1, lock.1,
                                        lock.10, lock.11
   ),
   Out( hash2(CKb.1, '1') )
   ]

  /*
  rule (modulo AC) outhashCKb_0_1111111111112121212111111111[color=#40807e,
                                                             process="out(hash2(CKb.1, '1'));",
                                                              ]:
     [
     State_1111111111112121212111111111( lock, ~Alice, ~Bob,
                                         ~EphemeralInit, ~RootInit, CKa, CKb, lock.1, lock.2, lock.3
     )
     ]
    -->
     [
     State_11111111111121212121111111111( lock, ~Alice, ~Bob,
                                          ~EphemeralInit, ~RootInit, CKa, CKb, lock.1, lock.2,
                                          lock.3
     ),
     Out( hash2(CKb, '1') )
     ]
  */

rule (modulo E) eventCompromisesessionAlicesessionBob_0_11111111111121212121111111111[color=#40807e,
                                                                                      process="event Compromise( session(~Alice.1), session(~Bob.1) );",
                                                                                       ]:
   [
   State_11111111111121212121111111111( lock, ~Alice.1, ~Bob.1,
                                        ~EphemeralInit.1, ~RootInit.1, CKa.1, CKb.1, lock.1,
                                        lock.10, lock.11
   )
   ]
  --[ Compromise( session(~Alice.1), session(~Bob.1) ) ]->
   [
   State_111111111111212121211111111111( lock, ~Alice.1, ~Bob.1,
                                         ~EphemeralInit.1, ~RootInit.1, CKa.1, CKb.1, lock.1,
                                         lock.10, lock.11
   )
   ]

  /*
  rule (modulo AC) eventCompromisesessionAlicesessionBob_0_11111111111121212121111111111[color=#40807e,
                                                                                         process="event Compromise( session(~Alice.1), session(~Bob.1) );",
                                                                                          ]:
     [
     State_11111111111121212121111111111( lock, ~Alice, ~Bob,
                                          ~EphemeralInit, ~RootInit, CKa, CKb, lock.1, lock.2,
                                          lock.3
     )
     ]
    --[ Compromise( session(~Alice), session(~Bob) ) ]->
     [
     State_111111111111212121211111111111( lock, ~Alice, ~Bob,
                                           ~EphemeralInit, ~RootInit, CKa, CKb, lock.1, lock.2,
                                           lock.3
     )
     ]
  */

rule (modulo E) unlocksessionAlice_0_111111111111212121211111111111[color=#40807e,
                                                                    process="unlock session(~Alice.1);",
                                                                     ]:
   [
   State_111111111111212121211111111111( lock, ~Alice.1, ~Bob.1,
                                         ~EphemeralInit.1, ~RootInit.1, CKa.1, CKb.1, lock.1,
                                         lock.10, lock.11
   )
   ]
  --[
  Unlock_10( '10', lock.10, session(~Alice.1) ),
  Unlock( '10', lock.10, session(~Alice.1) )
  ]->
   [
   State_1111111111112121212111111111111( lock, ~Alice.1, ~Bob.1,
                                          ~EphemeralInit.1, ~RootInit.1, CKa.1, CKb.1, lock.1,
                                          lock.10, lock.11
   )
   ]

  /*
  rule (modulo AC) unlocksessionAlice_0_111111111111212121211111111111[color=#40807e,
                                                                       process="unlock session(~Alice.1);",
                                                                        ]:
     [
     State_111111111111212121211111111111( lock, ~Alice, ~Bob,
                                           ~EphemeralInit, ~RootInit, CKa, CKb, lock.1, lock.2,
                                           lock.3
     )
     ]
    --[
    Unlock_10( '10', lock.2, session(~Alice) ),
    Unlock( '10', lock.2, session(~Alice) )
    ]->
     [
     State_1111111111112121212111111111111( lock, ~Alice, ~Bob,
                                            ~EphemeralInit, ~RootInit, CKa, CKb, lock.1, lock.2,
                                            lock.3
     )
     ]
  */

rule (modulo E) unlocksessionBob_0_1111111111112121212111111111111[color=#40807e,
                                                                   process="unlock session(~Bob.1);",
                                                                    ]:
   [
   State_1111111111112121212111111111111( lock, ~Alice.1, ~Bob.1,
                                          ~EphemeralInit.1, ~RootInit.1, CKa.1, CKb.1, lock.1,
                                          lock.10, lock.11
   )
   ]
  --[
  Unlock_11( '11', lock.11, session(~Bob.1) ),
  Unlock( '11', lock.11, session(~Bob.1) )
  ]->
   [ ]

  /*
  rule (modulo AC) unlocksessionBob_0_1111111111112121212111111111111[color=#40807e,
                                                                      process="unlock session(~Bob.1);",
                                                                       ]:
     [
     State_1111111111112121212111111111111( lock, ~Alice, ~Bob,
                                            ~EphemeralInit, ~RootInit, CKa, CKb, lock.1, lock.2,
                                            lock.3
     )
     ]
    --[
    Unlock_11( '11', lock.3, session(~Bob) ),
    Unlock( '11', lock.3, session(~Bob) )
    ]->
     [ ]
  */

rule (modulo E) outCKa_0_111111111111212121211111112[color=#40807e,
                                                     process="out(CKa.1);" ]:
   [
   State_11111111111121212121111111( lock, ~Alice.1, ~Bob.1,
                                     ~EphemeralInit.1, ~RootInit.1, CKa.1, CKb.1, lock.1, lock.10,
                                     lock.11
   )
   ]
  -->
   [
   State_1111111111112121212111111121( lock, ~Alice.1, ~Bob.1,
                                       ~EphemeralInit.1, ~RootInit.1, CKa.1, CKb.1, lock.1, lock.10,
                                       lock.11
   ),
   Out( CKa.1 )
   ]

  /*
  rule (modulo AC) outCKa_0_111111111111212121211111112[color=#40807e,
                                                        process="out(CKa.1);" ]:
     [
     State_11111111111121212121111111( lock, ~Alice, ~Bob,
                                       ~EphemeralInit, ~RootInit, CKa, CKb, lock.1, lock.2, lock.3
     )
     ]
    -->
     [
     State_1111111111112121212111111121( lock, ~Alice, ~Bob,
                                         ~EphemeralInit, ~RootInit, CKa, CKb, lock.1, lock.2, lock.3
     ),
     Out( CKa )
     ]
  */

rule (modulo E) outCKb_0_1111111111112121212111111121[color=#40807e,
                                                      process="out(CKb.1);" ]:
   [
   State_1111111111112121212111111121( lock, ~Alice.1, ~Bob.1,
                                       ~EphemeralInit.1, ~RootInit.1, CKa.1, CKb.1, lock.1, lock.10,
                                       lock.11
   )
   ]
  -->
   [
   State_11111111111121212121111111211( lock, ~Alice.1, ~Bob.1,
                                        ~EphemeralInit.1, ~RootInit.1, CKa.1, CKb.1, lock.1,
                                        lock.10, lock.11
   ),
   Out( CKb.1 )
   ]

  /*
  rule (modulo AC) outCKb_0_1111111111112121212111111121[color=#40807e,
                                                         process="out(CKb.1);" ]:
     [
     State_1111111111112121212111111121( lock, ~Alice, ~Bob,
                                         ~EphemeralInit, ~RootInit, CKa, CKb, lock.1, lock.2, lock.3
     )
     ]
    -->
     [
     State_11111111111121212121111111211( lock, ~Alice, ~Bob,
                                          ~EphemeralInit, ~RootInit, CKa, CKb, lock.1, lock.2,
                                          lock.3
     ),
     Out( CKb )
     ]
  */

rule (modulo E) eventCompromisesessionAlicesessionBob_0_11111111111121212121111111211[color=#40807e,
                                                                                      process="event Compromise( session(~Alice.1), session(~Bob.1) );",
                                                                                       ]:
   [
   State_11111111111121212121111111211( lock, ~Alice.1, ~Bob.1,
                                        ~EphemeralInit.1, ~RootInit.1, CKa.1, CKb.1, lock.1,
                                        lock.10, lock.11
   )
   ]
  --[ Compromise( session(~Alice.1), session(~Bob.1) ) ]->
   [
   State_111111111111212121211111112111( lock, ~Alice.1, ~Bob.1,
                                         ~EphemeralInit.1, ~RootInit.1, CKa.1, CKb.1, lock.1,
                                         lock.10, lock.11
   )
   ]

  /*
  rule (modulo AC) eventCompromisesessionAlicesessionBob_0_11111111111121212121111111211[color=#40807e,
                                                                                         process="event Compromise( session(~Alice.1), session(~Bob.1) );",
                                                                                          ]:
     [
     State_11111111111121212121111111211( lock, ~Alice, ~Bob,
                                          ~EphemeralInit, ~RootInit, CKa, CKb, lock.1, lock.2,
                                          lock.3
     )
     ]
    --[ Compromise( session(~Alice), session(~Bob) ) ]->
     [
     State_111111111111212121211111112111( lock, ~Alice, ~Bob,
                                           ~EphemeralInit, ~RootInit, CKa, CKb, lock.1, lock.2,
                                           lock.3
     )
     ]
  */

rule (modulo E) unlocksessionAlice_0_111111111111212121211111112111[color=#40807e,
                                                                    process="unlock session(~Alice.1);",
                                                                     ]:
   [
   State_111111111111212121211111112111( lock, ~Alice.1, ~Bob.1,
                                         ~EphemeralInit.1, ~RootInit.1, CKa.1, CKb.1, lock.1,
                                         lock.10, lock.11
   )
   ]
  --[
  Unlock_10( '10', lock.10, session(~Alice.1) ),
  Unlock( '10', lock.10, session(~Alice.1) )
  ]->
   [
   State_1111111111112121212111111121111( lock, ~Alice.1, ~Bob.1,
                                          ~EphemeralInit.1, ~RootInit.1, CKa.1, CKb.1, lock.1,
                                          lock.10, lock.11
   )
   ]

  /*
  rule (modulo AC) unlocksessionAlice_0_111111111111212121211111112111[color=#40807e,
                                                                       process="unlock session(~Alice.1);",
                                                                        ]:
     [
     State_111111111111212121211111112111( lock, ~Alice, ~Bob,
                                           ~EphemeralInit, ~RootInit, CKa, CKb, lock.1, lock.2,
                                           lock.3
     )
     ]
    --[
    Unlock_10( '10', lock.2, session(~Alice) ),
    Unlock( '10', lock.2, session(~Alice) )
    ]->
     [
     State_1111111111112121212111111121111( lock, ~Alice, ~Bob,
                                            ~EphemeralInit, ~RootInit, CKa, CKb, lock.1, lock.2,
                                            lock.3
     )
     ]
  */

rule (modulo E) unlocksessionBob_0_1111111111112121212111111121111[color=#40807e,
                                                                   process="unlock session(~Bob.1);",
                                                                    ]:
   [
   State_1111111111112121212111111121111( lock, ~Alice.1, ~Bob.1,
                                          ~EphemeralInit.1, ~RootInit.1, CKa.1, CKb.1, lock.1,
                                          lock.10, lock.11
   )
   ]
  --[
  Unlock_11( '11', lock.11, session(~Bob.1) ),
  Unlock( '11', lock.11, session(~Bob.1) )
  ]->
   [ ]

  /*
  rule (modulo AC) unlocksessionBob_0_1111111111112121212111111121111[color=#40807e,
                                                                      process="unlock session(~Bob.1);",
                                                                       ]:
     [
     State_1111111111112121212111111121111( lock, ~Alice, ~Bob,
                                            ~EphemeralInit, ~RootInit, CKa, CKb, lock.1, lock.2,
                                            lock.3
     )
     ]
    --[
    Unlock_11( '11', lock.3, session(~Bob) ),
    Unlock( '11', lock.3, session(~Bob) )
    ]->
     [ ]
  */

rule (modulo E) lookupsessionBobasCKb_1_1111111111112121212111111[color=#40807e,
                                                                  process="lookup session(~Bob.1) as CKb.1",
                                                                   ]:
   [
   State_1111111111112121212111111( lock, ~Alice.1, ~Bob.1,
                                    ~EphemeralInit.1, ~RootInit.1, CKa.1, lock.1, lock.10, lock.11
   )
   ]
  --[ IsNotSet( session(~Bob.1) ) ]->
   [ ]

  /*
  rule (modulo AC) lookupsessionBobasCKb_1_1111111111112121212111111[color=#40807e,
                                                                     process="lookup session(~Bob.1) as CKb.1",
                                                                      ]:
     [
     State_1111111111112121212111111( lock, ~Alice, ~Bob,
                                      ~EphemeralInit, ~RootInit, CKa, lock.1, lock.2, lock.3
     )
     ]
    --[ IsNotSet( session(~Bob) ) ]->
     [ ]
  */

rule (modulo E) lookupsessionAliceasCKa_1_111111111111212121211111[color=#40807e,
                                                                   process="lookup session(~Alice.1) as CKa.1",
                                                                    ]:
   [
   State_111111111111212121211111( lock, ~Alice.1, ~Bob.1,
                                   ~EphemeralInit.1, ~RootInit.1, lock.1, lock.10, lock.11
   )
   ]
  --[ IsNotSet( session(~Alice.1) ) ]->
   [ ]

  /*
  rule (modulo AC) lookupsessionAliceasCKa_1_111111111111212121211111[color=#40807e,
                                                                      process="lookup session(~Alice.1) as CKa.1",
                                                                       ]:
     [
     State_111111111111212121211111( lock, ~Alice, ~Bob, ~EphemeralInit,
                                     ~RootInit, lock.1, lock.2, lock.3
     )
     ]
    --[ IsNotSet( session(~Alice) ) ]->
     [ ]
  */

rule (modulo E) p_1_1111111111112121212[color=#ffffff, process="!",
                                         ]:
   [
   !Semistate_11111111111121212121( lock, ~Alice.1, ~Bob.1,
                                    ~EphemeralInit.1, ~RootInit.1, lock.1
   )
   ]
  -->
   [
   !Semistate_1111111111112121212121( lock, ~Alice.1, ~Bob.1,
                                      ~EphemeralInit.1, ~RootInit.1, lock.1
   ),
   State_1111111111112121212111( lock, ~Alice.1, ~Bob.1,
                                 ~EphemeralInit.1, ~RootInit.1, lock.1
   )
   ]

  /*
  rule (modulo AC) p_1_1111111111112121212[color=#ffffff,
                                           process="!" ]:
     [
     !Semistate_11111111111121212121( lock, ~Alice, ~Bob,
                                      ~EphemeralInit, ~RootInit, lock.1
     )
     ]
    -->
     [
     !Semistate_1111111111112121212121( lock, ~Alice, ~Bob,
                                        ~EphemeralInit, ~RootInit, lock.1
     ),
     State_1111111111112121212111( lock, ~Alice, ~Bob, ~EphemeralInit,
                                   ~RootInit, lock.1
     )
     ]
  */

rule (modulo E) locksessionAlice_0_111111111111212121212111[color=#408045,
                                                            process="lock session(~Alice.1);",
                                                             ]:
   [
   State_111111111111212121212111( lock, ~Alice.1, ~Bob.1,
                                   ~EphemeralInit.1, ~RootInit.1, lock.1
   ),
   Fr( lock.12 )
   ]
  --[
  Lock_12( '12', lock.12, session(~Alice.1) ),
  Lock( '12', lock.12, session(~Alice.1) )
  ]->
   [
   State_1111111111112121212121111( lock, ~Alice.1, ~Bob.1,
                                    ~EphemeralInit.1, ~RootInit.1, lock.1, lock.12
   )
   ]

  /*
  rule (modulo AC) locksessionAlice_0_111111111111212121212111[color=#408045,
                                                               process="lock session(~Alice.1);",
                                                                ]:
     [
     State_111111111111212121212111( lock, ~Alice, ~Bob, ~EphemeralInit,
                                     ~RootInit, lock.1
     ),
     Fr( lock.2 )
     ]
    --[
    Lock_12( '12', lock.2, session(~Alice) ),
    Lock( '12', lock.2, session(~Alice) )
    ]->
     [
     State_1111111111112121212121111( lock, ~Alice, ~Bob,
                                      ~EphemeralInit, ~RootInit, lock.1, lock.2
     )
     ]
  */

rule (modulo E) lookupsessionAliceasCKs_0_1111111111112121212121111[color=#408045,
                                                                    process="lookup session(~Alice.1) as CKs.1",
                                                                     ]:
   [
   State_1111111111112121212121111( lock, ~Alice.1, ~Bob.1,
                                    ~EphemeralInit.1, ~RootInit.1, lock.1, lock.12
   ),
   Fr( ~payload.1 )
   ]
  --[ IsIn( session(~Alice.1), CKs.1 ) ]->
   [
   State_111111111111212121212111111( lock, ~Alice.1, ~Bob.1,
                                      ~EphemeralInit.1, ~RootInit.1, ~payload.1, CKs.1, lock.1,
                                      lock.12
   )
   ]

  /*
  rule (modulo AC) lookupsessionAliceasCKs_0_1111111111112121212121111[color=#408045,
                                                                       process="lookup session(~Alice.1) as CKs.1",
                                                                        ]:
     [
     State_1111111111112121212121111( lock, ~Alice, ~Bob,
                                      ~EphemeralInit, ~RootInit, lock.1, lock.2
     ),
     Fr( ~payload )
     ]
    --[ IsIn( session(~Alice), CKs ) ]->
     [
     State_111111111111212121212111111( lock, ~Alice, ~Bob,
                                        ~EphemeralInit, ~RootInit, ~payload, CKs, lock.1, lock.2
     )
     ]
  */

rule (modulo E) outencpayloadhashCKs_0_1111111111112121212121111111[color=#408045,
                                                                    process="out(enc(~payload.1, hash2(CKs.1, '1')));",
                                                                     ]:
   [
   State_111111111111212121212111111( lock, ~Alice.1, ~Bob.1,
                                      ~EphemeralInit.1, ~RootInit.1, ~payload.1, CKs.1, lock.1,
                                      lock.12
   )
   ]
  -->
   [
   State_11111111111121212121211111111( lock, ~Alice.1, ~Bob.1,
                                        ~EphemeralInit.1, ~RootInit.1, ~payload.1, CKs.1, lock.1,
                                        lock.12
   ),
   Out( enc(~payload.1, hash2(CKs.1, '1')) )
   ]

  /*
  rule (modulo AC) outencpayloadhashCKs_0_1111111111112121212121111111[color=#408045,
                                                                       process="out(enc(~payload.1, hash2(CKs.1, '1')));",
                                                                        ]:
     [
     State_111111111111212121212111111( lock, ~Alice, ~Bob,
                                        ~EphemeralInit, ~RootInit, ~payload, CKs, lock.1, lock.2
     )
     ]
    -->
     [
     State_11111111111121212121211111111( lock, ~Alice, ~Bob,
                                          ~EphemeralInit, ~RootInit, ~payload, CKs, lock.1, lock.2
     ),
     Out( enc(~payload, hash2(CKs, '1')) )
     ]
  */

rule (modulo E) eventSendsessionAlicesessionBobhashCKs_0_11111111111121212121211111111[color=#408045,
                                                                                       process="event Send( session(~Alice.1), session(~Bob.1), hash2(CKs.1, '1') );",
                                                                                        ]:
   [
   State_11111111111121212121211111111( lock, ~Alice.1, ~Bob.1,
                                        ~EphemeralInit.1, ~RootInit.1, ~payload.1, CKs.1, lock.1,
                                        lock.12
   )
   ]
  --[ Send( session(~Alice.1), session(~Bob.1), hash2(CKs.1, '1') )
  ]->
   [
   State_1111111111112121212121111111111( lock, ~Alice.1, ~Bob.1,
                                          ~EphemeralInit.1, ~RootInit.1, ~payload.1, CKs.1, lock.1,
                                          lock.12
   ),
   Out( hash2(CKs.1, '1') )
   ]

  /*
  rule (modulo AC) eventSendsessionAlicesessionBobhashCKs_0_11111111111121212121211111111[color=#408045,
                                                                                          process="event Send( session(~Alice.1), session(~Bob.1), hash2(CKs.1, '1') );",
                                                                                           ]:
     [
     State_11111111111121212121211111111( lock, ~Alice, ~Bob,
                                          ~EphemeralInit, ~RootInit, ~payload, CKs, lock.1, lock.2
     )
     ]
    --[ Send( session(~Alice), session(~Bob), hash2(CKs, '1') ) ]->
     [
     State_1111111111112121212121111111111( lock, ~Alice, ~Bob,
                                            ~EphemeralInit, ~RootInit, ~payload, CKs, lock.1, lock.2
     ),
     Out( hash2(CKs, '1') )
     ]
  */

rule (modulo E) unlocksessionAlice_0_1111111111112121212121111111111[color=#408045,
                                                                     process="unlock session(~Alice.1);",
                                                                      ]:
   [
   State_1111111111112121212121111111111( lock, ~Alice.1, ~Bob.1,
                                          ~EphemeralInit.1, ~RootInit.1, ~payload.1, CKs.1, lock.1,
                                          lock.12
   )
   ]
  --[
  Unlock_12( '12', lock.12, session(~Alice.1) ),
  Unlock( '12', lock.12, session(~Alice.1) )
  ]->
   [ ]

  /*
  rule (modulo AC) unlocksessionAlice_0_1111111111112121212121111111111[color=#408045,
                                                                        process="unlock session(~Alice.1);",
                                                                         ]:
     [
     State_1111111111112121212121111111111( lock, ~Alice, ~Bob,
                                            ~EphemeralInit, ~RootInit, ~payload, CKs, lock.1, lock.2
     )
     ]
    --[
    Unlock_12( '12', lock.2, session(~Alice) ),
    Unlock( '12', lock.2, session(~Alice) )
    ]->
     [ ]
  */

rule (modulo E) locksessionBob_0_11111111111121212121211111121[color=#408045,
                                                               process="lock session(~Bob.1);",
                                                                ]:
   [
   State_111111111111212121212111111( lock, ~Alice.1, ~Bob.1,
                                      ~EphemeralInit.1, ~RootInit.1, ~payload.1, CKs.1, lock.1,
                                      lock.12
   ),
   Fr( lock.13 ), Fr( ~Root_sy.5 ), Fr( ~Ephemeral_sy.5 )
   ]
  --[
  Lock_13( '13', lock.13, session(~Bob.1) ),
  Lock( '13', lock.13, session(~Bob.1) )
  ]->
   [
   State_11111111111121212121211111121111( lock, ~Alice.1, ~Bob.1,
                                           ~EphemeralInit.1, ~RootInit.1, ~payload.1, CKs.1, lock.1,
                                           ~Ephemeral_sy.5, ~Root_sy.5, lock.12, lock.13
   )
   ]

  /*
  rule (modulo AC) locksessionBob_0_11111111111121212121211111121[color=#408045,
                                                                  process="lock session(~Bob.1);",
                                                                   ]:
     [
     State_111111111111212121212111111( lock, ~Alice, ~Bob,
                                        ~EphemeralInit, ~RootInit, ~payload, CKs, lock.1, lock.2
     ),
     Fr( lock.3 ), Fr( ~Root_sy ), Fr( ~Ephemeral_sy )
     ]
    --[
    Lock_13( '13', lock.3, session(~Bob) ),
    Lock( '13', lock.3, session(~Bob) )
    ]->
     [
     State_11111111111121212121211111121111( lock, ~Alice, ~Bob,
                                             ~EphemeralInit, ~RootInit, ~payload, CKs, lock.1,
                                             ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
  */

rule (modulo E) insertsessionAliceparshkdfRootsyEphemeralsy_0_11111111111121212121211111121111[color=#408045,
                                                                                               process="insert session(~Alice.1),pars1(hkdf(~Root_sy.5, ~Ephemeral_sy.5));",
                                                                                                ]:
   [
   State_11111111111121212121211111121111( lock, ~Alice.1, ~Bob.1,
                                           ~EphemeralInit.1, ~RootInit.1, ~payload.1, CKs.1, lock.1,
                                           ~Ephemeral_sy.5, ~Root_sy.5, lock.12, lock.13
   )
   ]
  --[
  Insert( session(~Alice.1), pars1(hkdf(~Root_sy.5, ~Ephemeral_sy.5))
  )
  ]->
   [
   State_111111111111212121212111111211111( lock, ~Alice.1, ~Bob.1,
                                            ~EphemeralInit.1, ~RootInit.1, ~payload.1, CKs.1,
                                            lock.1, ~Ephemeral_sy.5, ~Root_sy.5, lock.12, lock.13
   )
   ]

  /*
  rule (modulo AC) insertsessionAliceparshkdfRootsyEphemeralsy_0_11111111111121212121211111121111[color=#408045,
                                                                                                  process="insert session(~Alice.1),pars1(hkdf(~Root_sy.5, ~Ephemeral_sy.5));",
                                                                                                   ]:
     [
     State_11111111111121212121211111121111( lock, ~Alice, ~Bob,
                                             ~EphemeralInit, ~RootInit, ~payload, CKs, lock.1,
                                             ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
    --[ Insert( session(~Alice), pars1(hkdf(~Root_sy, ~Ephemeral_sy)) )
    ]->
     [
     State_111111111111212121212111111211111( lock, ~Alice, ~Bob,
                                              ~EphemeralInit, ~RootInit, ~payload, CKs, lock.1,
                                              ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
  */

rule (modulo E) insertsessionBobparshkdfRootsyEphemeralsy_0_111111111111212121212111111211111[color=#408045,
                                                                                              process="insert session(~Bob.1),pars1(hkdf(~Root_sy.5, ~Ephemeral_sy.5));",
                                                                                               ]:
   [
   State_111111111111212121212111111211111( lock, ~Alice.1, ~Bob.1,
                                            ~EphemeralInit.1, ~RootInit.1, ~payload.1, CKs.1,
                                            lock.1, ~Ephemeral_sy.5, ~Root_sy.5, lock.12, lock.13
   )
   ]
  --[
  Insert( session(~Bob.1), pars1(hkdf(~Root_sy.5, ~Ephemeral_sy.5)) )
  ]->
   [
   State_1111111111112121212121111112111111( lock, ~Alice.1, ~Bob.1,
                                             ~EphemeralInit.1, ~RootInit.1, ~payload.1, CKs.1,
                                             lock.1, ~Ephemeral_sy.5, ~Root_sy.5, lock.12, lock.13
   )
   ]

  /*
  rule (modulo AC) insertsessionBobparshkdfRootsyEphemeralsy_0_111111111111212121212111111211111[color=#408045,
                                                                                                 process="insert session(~Bob.1),pars1(hkdf(~Root_sy.5, ~Ephemeral_sy.5));",
                                                                                                  ]:
     [
     State_111111111111212121212111111211111( lock, ~Alice, ~Bob,
                                              ~EphemeralInit, ~RootInit, ~payload, CKs, lock.1,
                                              ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
    --[ Insert( session(~Bob), pars1(hkdf(~Root_sy, ~Ephemeral_sy)) )
    ]->
     [
     State_1111111111112121212121111112111111( lock, ~Alice, ~Bob,
                                               ~EphemeralInit, ~RootInit, ~payload, CKs, lock.1,
                                               ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
  */

rule (modulo E) eventHealsessionAlicesessionBob_0_1111111111112121212121111112111111[color=#408045,
                                                                                     process="event Heal( session(~Alice.1), session(~Bob.1) );",
                                                                                      ]:
   [
   State_1111111111112121212121111112111111( lock, ~Alice.1, ~Bob.1,
                                             ~EphemeralInit.1, ~RootInit.1, ~payload.1, CKs.1,
                                             lock.1, ~Ephemeral_sy.5, ~Root_sy.5, lock.12, lock.13
   )
   ]
  --[ Heal( session(~Alice.1), session(~Bob.1) ) ]->
   [
   State_11111111111121212121211111121111111( lock, ~Alice.1, ~Bob.1,
                                              ~EphemeralInit.1, ~RootInit.1, ~payload.1, CKs.1,
                                              lock.1, ~Ephemeral_sy.5, ~Root_sy.5, lock.12, lock.13
   )
   ]

  /*
  rule (modulo AC) eventHealsessionAlicesessionBob_0_1111111111112121212121111112111111[color=#408045,
                                                                                        process="event Heal( session(~Alice.1), session(~Bob.1) );",
                                                                                         ]:
     [
     State_1111111111112121212121111112111111( lock, ~Alice, ~Bob,
                                               ~EphemeralInit, ~RootInit, ~payload, CKs, lock.1,
                                               ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
    --[ Heal( session(~Alice), session(~Bob) ) ]->
     [
     State_11111111111121212121211111121111111( lock, ~Alice, ~Bob,
                                                ~EphemeralInit, ~RootInit, ~payload, CKs, lock.1,
                                                ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
  */

rule (modulo E) unlocksessionAlice_0_11111111111121212121211111121111111[color=#408045,
                                                                         process="unlock session(~Alice.1);",
                                                                          ]:
   [
   State_11111111111121212121211111121111111( lock, ~Alice.1, ~Bob.1,
                                              ~EphemeralInit.1, ~RootInit.1, ~payload.1, CKs.1,
                                              lock.1, ~Ephemeral_sy.5, ~Root_sy.5, lock.12, lock.13
   )
   ]
  --[
  Unlock_12( '12', lock.12, session(~Alice.1) ),
  Unlock( '12', lock.12, session(~Alice.1) )
  ]->
   [
   State_111111111111212121212111111211111111( lock, ~Alice.1, ~Bob.1,
                                               ~EphemeralInit.1, ~RootInit.1, ~payload.1, CKs.1,
                                               lock.1, ~Ephemeral_sy.5, ~Root_sy.5, lock.12, lock.13
   )
   ]

  /*
  rule (modulo AC) unlocksessionAlice_0_11111111111121212121211111121111111[color=#408045,
                                                                            process="unlock session(~Alice.1);",
                                                                             ]:
     [
     State_11111111111121212121211111121111111( lock, ~Alice, ~Bob,
                                                ~EphemeralInit, ~RootInit, ~payload, CKs, lock.1,
                                                ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
    --[
    Unlock_12( '12', lock.2, session(~Alice) ),
    Unlock( '12', lock.2, session(~Alice) )
    ]->
     [
     State_111111111111212121212111111211111111( lock, ~Alice, ~Bob,
                                                 ~EphemeralInit, ~RootInit, ~payload, CKs, lock.1,
                                                 ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
  */

rule (modulo E) unlocksessionBob_0_111111111111212121212111111211111111[color=#408045,
                                                                        process="unlock session(~Bob.1);",
                                                                         ]:
   [
   State_111111111111212121212111111211111111( lock, ~Alice.1, ~Bob.1,
                                               ~EphemeralInit.1, ~RootInit.1, ~payload.1, CKs.1,
                                               lock.1, ~Ephemeral_sy.5, ~Root_sy.5, lock.12, lock.13
   )
   ]
  --[
  Unlock_13( '13', lock.13, session(~Bob.1) ),
  Unlock( '13', lock.13, session(~Bob.1) )
  ]->
   [ ]

  /*
  rule (modulo AC) unlocksessionBob_0_111111111111212121212111111211111111[color=#408045,
                                                                           process="unlock session(~Bob.1);",
                                                                            ]:
     [
     State_111111111111212121212111111211111111( lock, ~Alice, ~Bob,
                                                 ~EphemeralInit, ~RootInit, ~payload, CKs, lock.1,
                                                 ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
    --[
    Unlock_13( '13', lock.3, session(~Bob) ),
    Unlock( '13', lock.3, session(~Bob) )
    ]->
     [ ]
  */

rule (modulo E) insertsessionAlicehashCKs_0_11111111111121212121211111122[color=#408045,
                                                                          process="insert session(~Alice.1),hash2(CKs.1, '2');",
                                                                           ]:
   [
   State_111111111111212121212111111( lock, ~Alice.1, ~Bob.1,
                                      ~EphemeralInit.1, ~RootInit.1, ~payload.1, CKs.1, lock.1,
                                      lock.12
   )
   ]
  --[ Insert( session(~Alice.1), hash2(CKs.1, '2') ) ]->
   [
   State_111111111111212121212111111221( lock, ~Alice.1, ~Bob.1,
                                         ~EphemeralInit.1, ~RootInit.1, ~payload.1, CKs.1, lock.1,
                                         lock.12
   )
   ]

  /*
  rule (modulo AC) insertsessionAlicehashCKs_0_11111111111121212121211111122[color=#408045,
                                                                             process="insert session(~Alice.1),hash2(CKs.1, '2');",
                                                                              ]:
     [
     State_111111111111212121212111111( lock, ~Alice, ~Bob,
                                        ~EphemeralInit, ~RootInit, ~payload, CKs, lock.1, lock.2
     )
     ]
    --[ Insert( session(~Alice), hash2(CKs, '2') ) ]->
     [
     State_111111111111212121212111111221( lock, ~Alice, ~Bob,
                                           ~EphemeralInit, ~RootInit, ~payload, CKs, lock.1, lock.2
     )
     ]
  */

rule (modulo E) unlocksessionAlice_0_111111111111212121212111111221[color=#408045,
                                                                    process="unlock session(~Alice.1);",
                                                                     ]:
   [
   State_111111111111212121212111111221( lock, ~Alice.1, ~Bob.1,
                                         ~EphemeralInit.1, ~RootInit.1, ~payload.1, CKs.1, lock.1,
                                         lock.12
   )
   ]
  --[
  Unlock_12( '12', lock.12, session(~Alice.1) ),
  Unlock( '12', lock.12, session(~Alice.1) )
  ]->
   [ ]

  /*
  rule (modulo AC) unlocksessionAlice_0_111111111111212121212111111221[color=#408045,
                                                                       process="unlock session(~Alice.1);",
                                                                        ]:
     [
     State_111111111111212121212111111221( lock, ~Alice, ~Bob,
                                           ~EphemeralInit, ~RootInit, ~payload, CKs, lock.1, lock.2
     )
     ]
    --[
    Unlock_12( '12', lock.2, session(~Alice) ),
    Unlock( '12', lock.2, session(~Alice) )
    ]->
     [ ]
  */

rule (modulo E) lookupsessionAliceasCKs_1_1111111111112121212121111[color=#408045,
                                                                    process="lookup session(~Alice.1) as CKs.1",
                                                                     ]:
   [
   State_1111111111112121212121111( lock, ~Alice.1, ~Bob.1,
                                    ~EphemeralInit.1, ~RootInit.1, lock.1, lock.12
   )
   ]
  --[ IsNotSet( session(~Alice.1) ) ]->
   [ ]

  /*
  rule (modulo AC) lookupsessionAliceasCKs_1_1111111111112121212121111[color=#408045,
                                                                       process="lookup session(~Alice.1) as CKs.1",
                                                                        ]:
     [
     State_1111111111112121212121111( lock, ~Alice, ~Bob,
                                      ~EphemeralInit, ~RootInit, lock.1, lock.2
     )
     ]
    --[ IsNotSet( session(~Alice) ) ]->
     [ ]
  */

rule (modulo E) p_1_111111111111212121212[color=#ffffff,
                                          process="!" ]:
   [
   !Semistate_1111111111112121212121( lock, ~Alice.1, ~Bob.1,
                                      ~EphemeralInit.1, ~RootInit.1, lock.1
   )
   ]
  -->
   [
   !Semistate_111111111111212121212121( lock, ~Alice.1, ~Bob.1,
                                        ~EphemeralInit.1, ~RootInit.1, lock.1
   ),
   State_111111111111212121212111( lock, ~Alice.1, ~Bob.1,
                                   ~EphemeralInit.1, ~RootInit.1, lock.1
   )
   ]

  /*
  rule (modulo AC) p_1_111111111111212121212[color=#ffffff,
                                             process="!" ]:
     [
     !Semistate_1111111111112121212121( lock, ~Alice, ~Bob,
                                        ~EphemeralInit, ~RootInit, lock.1
     )
     ]
    -->
     [
     !Semistate_111111111111212121212121( lock, ~Alice, ~Bob,
                                          ~EphemeralInit, ~RootInit, lock.1
     ),
     State_111111111111212121212111( lock, ~Alice, ~Bob, ~EphemeralInit,
                                     ~RootInit, lock.1
     )
     ]
  */

rule (modulo E) locksessionBob_0_11111111111121212121212111[color=#408045,
                                                            process="lock session(~Bob.1);",
                                                             ]:
   [
   State_11111111111121212121212111( lock, ~Alice.1, ~Bob.1,
                                     ~EphemeralInit.1, ~RootInit.1, lock.1
   ),
   Fr( lock.14 )
   ]
  --[
  Lock_14( '14', lock.14, session(~Bob.1) ),
  Lock( '14', lock.14, session(~Bob.1) )
  ]->
   [
   State_111111111111212121212121111( lock, ~Alice.1, ~Bob.1,
                                      ~EphemeralInit.1, ~RootInit.1, lock.1, lock.14
   )
   ]

  /*
  rule (modulo AC) locksessionBob_0_11111111111121212121212111[color=#408045,
                                                               process="lock session(~Bob.1);",
                                                                ]:
     [
     State_11111111111121212121212111( lock, ~Alice, ~Bob,
                                       ~EphemeralInit, ~RootInit, lock.1
     ),
     Fr( lock.2 )
     ]
    --[
    Lock_14( '14', lock.2, session(~Bob) ),
    Lock( '14', lock.2, session(~Bob) )
    ]->
     [
     State_111111111111212121212121111( lock, ~Alice, ~Bob,
                                        ~EphemeralInit, ~RootInit, lock.1, lock.2
     )
     ]
  */

rule (modulo E) lookupsessionBobasCKs_0_111111111111212121212121111[color=#408045,
                                                                    process="lookup session(~Bob.1) as CKs.2",
                                                                     ]:
   [
   State_111111111111212121212121111( lock, ~Alice.1, ~Bob.1,
                                      ~EphemeralInit.1, ~RootInit.1, lock.1, lock.14
   ),
   Fr( ~payload.2 )
   ]
  --[ IsIn( session(~Bob.1), CKs.2 ) ]->
   [
   State_11111111111121212121212111111( lock, ~Alice.1, ~Bob.1,
                                        ~EphemeralInit.1, ~RootInit.1, lock.1, ~payload.2, CKs.2,
                                        lock.14
   )
   ]

  /*
  rule (modulo AC) lookupsessionBobasCKs_0_111111111111212121212121111[color=#408045,
                                                                       process="lookup session(~Bob.1) as CKs.2",
                                                                        ]:
     [
     State_111111111111212121212121111( lock, ~Alice, ~Bob,
                                        ~EphemeralInit, ~RootInit, lock.1, lock.2
     ),
     Fr( ~payload )
     ]
    --[ IsIn( session(~Bob), CKs ) ]->
     [
     State_11111111111121212121212111111( lock, ~Alice, ~Bob,
                                          ~EphemeralInit, ~RootInit, lock.1, ~payload, CKs, lock.2
     )
     ]
  */

rule (modulo E) outencpayloadhashCKs_0_111111111111212121212121111111[color=#408045,
                                                                      process="out(enc(~payload.2, hash2(CKs.2, '1')));",
                                                                       ]:
   [
   State_11111111111121212121212111111( lock, ~Alice.1, ~Bob.1,
                                        ~EphemeralInit.1, ~RootInit.1, lock.1, ~payload.2, CKs.2,
                                        lock.14
   )
   ]
  -->
   [
   State_1111111111112121212121211111111( lock, ~Alice.1, ~Bob.1,
                                          ~EphemeralInit.1, ~RootInit.1, lock.1, ~payload.2, CKs.2,
                                          lock.14
   ),
   Out( enc(~payload.2, hash2(CKs.2, '1')) )
   ]

  /*
  rule (modulo AC) outencpayloadhashCKs_0_111111111111212121212121111111[color=#408045,
                                                                         process="out(enc(~payload.2, hash2(CKs.2, '1')));",
                                                                          ]:
     [
     State_11111111111121212121212111111( lock, ~Alice, ~Bob,
                                          ~EphemeralInit, ~RootInit, lock.1, ~payload, CKs, lock.2
     )
     ]
    -->
     [
     State_1111111111112121212121211111111( lock, ~Alice, ~Bob,
                                            ~EphemeralInit, ~RootInit, lock.1, ~payload, CKs, lock.2
     ),
     Out( enc(~payload, hash2(CKs, '1')) )
     ]
  */

rule (modulo E) eventSendsessionBobsessionAlicehashCKs_0_1111111111112121212121211111111[color=#408045,
                                                                                         process="event Send( session(~Bob.1), session(~Alice.1), hash2(CKs.2, '1') );",
                                                                                          ]:
   [
   State_1111111111112121212121211111111( lock, ~Alice.1, ~Bob.1,
                                          ~EphemeralInit.1, ~RootInit.1, lock.1, ~payload.2, CKs.2,
                                          lock.14
   )
   ]
  --[ Send( session(~Bob.1), session(~Alice.1), hash2(CKs.2, '1') )
  ]->
   [
   State_111111111111212121212121111111111( lock, ~Alice.1, ~Bob.1,
                                            ~EphemeralInit.1, ~RootInit.1, lock.1, ~payload.2,
                                            CKs.2, lock.14
   ),
   Out( hash2(CKs.2, '1') )
   ]

  /*
  rule (modulo AC) eventSendsessionBobsessionAlicehashCKs_0_1111111111112121212121211111111[color=#408045,
                                                                                            process="event Send( session(~Bob.1), session(~Alice.1), hash2(CKs.2, '1') );",
                                                                                             ]:
     [
     State_1111111111112121212121211111111( lock, ~Alice, ~Bob,
                                            ~EphemeralInit, ~RootInit, lock.1, ~payload, CKs, lock.2
     )
     ]
    --[ Send( session(~Bob), session(~Alice), hash2(CKs, '1') ) ]->
     [
     State_111111111111212121212121111111111( lock, ~Alice, ~Bob,
                                              ~EphemeralInit, ~RootInit, lock.1, ~payload, CKs,
                                              lock.2
     ),
     Out( hash2(CKs, '1') )
     ]
  */

rule (modulo E) unlocksessionBob_0_111111111111212121212121111111111[color=#408045,
                                                                     process="unlock session(~Bob.1);",
                                                                      ]:
   [
   State_111111111111212121212121111111111( lock, ~Alice.1, ~Bob.1,
                                            ~EphemeralInit.1, ~RootInit.1, lock.1, ~payload.2,
                                            CKs.2, lock.14
   )
   ]
  --[
  Unlock_14( '14', lock.14, session(~Bob.1) ),
  Unlock( '14', lock.14, session(~Bob.1) )
  ]->
   [ ]

  /*
  rule (modulo AC) unlocksessionBob_0_111111111111212121212121111111111[color=#408045,
                                                                        process="unlock session(~Bob.1);",
                                                                         ]:
     [
     State_111111111111212121212121111111111( lock, ~Alice, ~Bob,
                                              ~EphemeralInit, ~RootInit, lock.1, ~payload, CKs,
                                              lock.2
     )
     ]
    --[
    Unlock_14( '14', lock.2, session(~Bob) ),
    Unlock( '14', lock.2, session(~Bob) )
    ]->
     [ ]
  */

rule (modulo E) locksessionAlice_0_1111111111112121212121211111121[color=#408045,
                                                                   process="lock session(~Alice.1);",
                                                                    ]:
   [
   State_11111111111121212121212111111( lock, ~Alice.1, ~Bob.1,
                                        ~EphemeralInit.1, ~RootInit.1, lock.1, ~payload.2, CKs.2,
                                        lock.14
   ),
   Fr( lock.15 ), Fr( ~Root_sy.6 ), Fr( ~Ephemeral_sy.6 )
   ]
  --[
  Lock_15( '15', lock.15, session(~Alice.1) ),
  Lock( '15', lock.15, session(~Alice.1) )
  ]->
   [
   State_1111111111112121212121211111121111( lock, ~Alice.1, ~Bob.1,
                                             ~EphemeralInit.1, ~RootInit.1, lock.1, ~payload.2,
                                             CKs.2, ~Ephemeral_sy.6, ~Root_sy.6, lock.14, lock.15
   )
   ]

  /*
  rule (modulo AC) locksessionAlice_0_1111111111112121212121211111121[color=#408045,
                                                                      process="lock session(~Alice.1);",
                                                                       ]:
     [
     State_11111111111121212121212111111( lock, ~Alice, ~Bob,
                                          ~EphemeralInit, ~RootInit, lock.1, ~payload, CKs, lock.2
     ),
     Fr( lock.3 ), Fr( ~Root_sy ), Fr( ~Ephemeral_sy )
     ]
    --[
    Lock_15( '15', lock.3, session(~Alice) ),
    Lock( '15', lock.3, session(~Alice) )
    ]->
     [
     State_1111111111112121212121211111121111( lock, ~Alice, ~Bob,
                                               ~EphemeralInit, ~RootInit, lock.1, ~payload, CKs,
                                               ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
  */

rule (modulo E) insertsessionBobparshkdfRootsyEphemeralsy_0_1111111111112121212121211111121111[color=#408045,
                                                                                               process="insert session(~Bob.1),pars1(hkdf(~Root_sy.6, ~Ephemeral_sy.6));",
                                                                                                ]:
   [
   State_1111111111112121212121211111121111( lock, ~Alice.1, ~Bob.1,
                                             ~EphemeralInit.1, ~RootInit.1, lock.1, ~payload.2,
                                             CKs.2, ~Ephemeral_sy.6, ~Root_sy.6, lock.14, lock.15
   )
   ]
  --[
  Insert( session(~Bob.1), pars1(hkdf(~Root_sy.6, ~Ephemeral_sy.6)) )
  ]->
   [
   State_11111111111121212121212111111211111( lock, ~Alice.1, ~Bob.1,
                                              ~EphemeralInit.1, ~RootInit.1, lock.1, ~payload.2,
                                              CKs.2, ~Ephemeral_sy.6, ~Root_sy.6, lock.14, lock.15
   )
   ]

  /*
  rule (modulo AC) insertsessionBobparshkdfRootsyEphemeralsy_0_1111111111112121212121211111121111[color=#408045,
                                                                                                  process="insert session(~Bob.1),pars1(hkdf(~Root_sy.6, ~Ephemeral_sy.6));",
                                                                                                   ]:
     [
     State_1111111111112121212121211111121111( lock, ~Alice, ~Bob,
                                               ~EphemeralInit, ~RootInit, lock.1, ~payload, CKs,
                                               ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
    --[ Insert( session(~Bob), pars1(hkdf(~Root_sy, ~Ephemeral_sy)) )
    ]->
     [
     State_11111111111121212121212111111211111( lock, ~Alice, ~Bob,
                                                ~EphemeralInit, ~RootInit, lock.1, ~payload, CKs,
                                                ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
  */

rule (modulo E) insertsessionAliceparshkdfRootsyEphemeralsy_0_11111111111121212121212111111211111[color=#408045,
                                                                                                  process="insert session(~Alice.1),pars1(hkdf(~Root_sy.6, ~Ephemeral_sy.6));",
                                                                                                   ]:
   [
   State_11111111111121212121212111111211111( lock, ~Alice.1, ~Bob.1,
                                              ~EphemeralInit.1, ~RootInit.1, lock.1, ~payload.2,
                                              CKs.2, ~Ephemeral_sy.6, ~Root_sy.6, lock.14, lock.15
   )
   ]
  --[
  Insert( session(~Alice.1), pars1(hkdf(~Root_sy.6, ~Ephemeral_sy.6))
  )
  ]->
   [
   State_111111111111212121212121111112111111( lock, ~Alice.1, ~Bob.1,
                                               ~EphemeralInit.1, ~RootInit.1, lock.1, ~payload.2,
                                               CKs.2, ~Ephemeral_sy.6, ~Root_sy.6, lock.14, lock.15
   )
   ]

  /*
  rule (modulo AC) insertsessionAliceparshkdfRootsyEphemeralsy_0_11111111111121212121212111111211111[color=#408045,
                                                                                                     process="insert session(~Alice.1),pars1(hkdf(~Root_sy.6, ~Ephemeral_sy.6));",
                                                                                                      ]:
     [
     State_11111111111121212121212111111211111( lock, ~Alice, ~Bob,
                                                ~EphemeralInit, ~RootInit, lock.1, ~payload, CKs,
                                                ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
    --[ Insert( session(~Alice), pars1(hkdf(~Root_sy, ~Ephemeral_sy)) )
    ]->
     [
     State_111111111111212121212121111112111111( lock, ~Alice, ~Bob,
                                                 ~EphemeralInit, ~RootInit, lock.1, ~payload, CKs,
                                                 ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
  */

rule (modulo E) eventHealsessionBobsessionAlice_0_111111111111212121212121111112111111[color=#408045,
                                                                                       process="event Heal( session(~Bob.1), session(~Alice.1) );",
                                                                                        ]:
   [
   State_111111111111212121212121111112111111( lock, ~Alice.1, ~Bob.1,
                                               ~EphemeralInit.1, ~RootInit.1, lock.1, ~payload.2,
                                               CKs.2, ~Ephemeral_sy.6, ~Root_sy.6, lock.14, lock.15
   )
   ]
  --[ Heal( session(~Bob.1), session(~Alice.1) ) ]->
   [
   State_1111111111112121212121211111121111111( lock, ~Alice.1,
                                                ~Bob.1, ~EphemeralInit.1, ~RootInit.1, lock.1,
                                                ~payload.2, CKs.2, ~Ephemeral_sy.6, ~Root_sy.6,
                                                lock.14, lock.15
   )
   ]

  /*
  rule (modulo AC) eventHealsessionBobsessionAlice_0_111111111111212121212121111112111111[color=#408045,
                                                                                          process="event Heal( session(~Bob.1), session(~Alice.1) );",
                                                                                           ]:
     [
     State_111111111111212121212121111112111111( lock, ~Alice, ~Bob,
                                                 ~EphemeralInit, ~RootInit, lock.1, ~payload, CKs,
                                                 ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
    --[ Heal( session(~Bob), session(~Alice) ) ]->
     [
     State_1111111111112121212121211111121111111( lock, ~Alice, ~Bob,
                                                  ~EphemeralInit, ~RootInit, lock.1, ~payload, CKs,
                                                  ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
  */

rule (modulo E) unlocksessionBob_0_1111111111112121212121211111121111111[color=#408045,
                                                                         process="unlock session(~Bob.1);",
                                                                          ]:
   [
   State_1111111111112121212121211111121111111( lock, ~Alice.1,
                                                ~Bob.1, ~EphemeralInit.1, ~RootInit.1, lock.1,
                                                ~payload.2, CKs.2, ~Ephemeral_sy.6, ~Root_sy.6,
                                                lock.14, lock.15
   )
   ]
  --[
  Unlock_14( '14', lock.14, session(~Bob.1) ),
  Unlock( '14', lock.14, session(~Bob.1) )
  ]->
   [
   State_11111111111121212121212111111211111111( lock, ~Alice.1,
                                                 ~Bob.1, ~EphemeralInit.1, ~RootInit.1, lock.1,
                                                 ~payload.2, CKs.2, ~Ephemeral_sy.6, ~Root_sy.6,
                                                 lock.14, lock.15
   )
   ]

  /*
  rule (modulo AC) unlocksessionBob_0_1111111111112121212121211111121111111[color=#408045,
                                                                            process="unlock session(~Bob.1);",
                                                                             ]:
     [
     State_1111111111112121212121211111121111111( lock, ~Alice, ~Bob,
                                                  ~EphemeralInit, ~RootInit, lock.1, ~payload, CKs,
                                                  ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
    --[
    Unlock_14( '14', lock.2, session(~Bob) ),
    Unlock( '14', lock.2, session(~Bob) )
    ]->
     [
     State_11111111111121212121212111111211111111( lock, ~Alice, ~Bob,
                                                   ~EphemeralInit, ~RootInit, lock.1, ~payload, CKs,
                                                   ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
  */

rule (modulo E) unlocksessionAlice_0_11111111111121212121212111111211111111[color=#408045,
                                                                            process="unlock session(~Alice.1);",
                                                                             ]:
   [
   State_11111111111121212121212111111211111111( lock, ~Alice.1,
                                                 ~Bob.1, ~EphemeralInit.1, ~RootInit.1, lock.1,
                                                 ~payload.2, CKs.2, ~Ephemeral_sy.6, ~Root_sy.6,
                                                 lock.14, lock.15
   )
   ]
  --[
  Unlock_15( '15', lock.15, session(~Alice.1) ),
  Unlock( '15', lock.15, session(~Alice.1) )
  ]->
   [ ]

  /*
  rule (modulo AC) unlocksessionAlice_0_11111111111121212121212111111211111111[color=#408045,
                                                                               process="unlock session(~Alice.1);",
                                                                                ]:
     [
     State_11111111111121212121212111111211111111( lock, ~Alice, ~Bob,
                                                   ~EphemeralInit, ~RootInit, lock.1, ~payload, CKs,
                                                   ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
    --[
    Unlock_15( '15', lock.3, session(~Alice) ),
    Unlock( '15', lock.3, session(~Alice) )
    ]->
     [ ]
  */

rule (modulo E) insertsessionBobhashCKs_0_1111111111112121212121211111122[color=#408045,
                                                                          process="insert session(~Bob.1),hash2(CKs.2, '2');",
                                                                           ]:
   [
   State_11111111111121212121212111111( lock, ~Alice.1, ~Bob.1,
                                        ~EphemeralInit.1, ~RootInit.1, lock.1, ~payload.2, CKs.2,
                                        lock.14
   )
   ]
  --[ Insert( session(~Bob.1), hash2(CKs.2, '2') ) ]->
   [
   State_11111111111121212121212111111221( lock, ~Alice.1, ~Bob.1,
                                           ~EphemeralInit.1, ~RootInit.1, lock.1, ~payload.2, CKs.2,
                                           lock.14
   )
   ]

  /*
  rule (modulo AC) insertsessionBobhashCKs_0_1111111111112121212121211111122[color=#408045,
                                                                             process="insert session(~Bob.1),hash2(CKs.2, '2');",
                                                                              ]:
     [
     State_11111111111121212121212111111( lock, ~Alice, ~Bob,
                                          ~EphemeralInit, ~RootInit, lock.1, ~payload, CKs, lock.2
     )
     ]
    --[ Insert( session(~Bob), hash2(CKs, '2') ) ]->
     [
     State_11111111111121212121212111111221( lock, ~Alice, ~Bob,
                                             ~EphemeralInit, ~RootInit, lock.1, ~payload, CKs,
                                             lock.2
     )
     ]
  */

rule (modulo E) unlocksessionBob_0_11111111111121212121212111111221[color=#408045,
                                                                    process="unlock session(~Bob.1);",
                                                                     ]:
   [
   State_11111111111121212121212111111221( lock, ~Alice.1, ~Bob.1,
                                           ~EphemeralInit.1, ~RootInit.1, lock.1, ~payload.2, CKs.2,
                                           lock.14
   )
   ]
  --[
  Unlock_14( '14', lock.14, session(~Bob.1) ),
  Unlock( '14', lock.14, session(~Bob.1) )
  ]->
   [ ]

  /*
  rule (modulo AC) unlocksessionBob_0_11111111111121212121212111111221[color=#408045,
                                                                       process="unlock session(~Bob.1);",
                                                                        ]:
     [
     State_11111111111121212121212111111221( lock, ~Alice, ~Bob,
                                             ~EphemeralInit, ~RootInit, lock.1, ~payload, CKs,
                                             lock.2
     )
     ]
    --[
    Unlock_14( '14', lock.2, session(~Bob) ),
    Unlock( '14', lock.2, session(~Bob) )
    ]->
     [ ]
  */

rule (modulo E) lookupsessionBobasCKs_1_111111111111212121212121111[color=#408045,
                                                                    process="lookup session(~Bob.1) as CKs.2",
                                                                     ]:
   [
   State_111111111111212121212121111( lock, ~Alice.1, ~Bob.1,
                                      ~EphemeralInit.1, ~RootInit.1, lock.1, lock.14
   )
   ]
  --[ IsNotSet( session(~Bob.1) ) ]->
   [ ]

  /*
  rule (modulo AC) lookupsessionBobasCKs_1_111111111111212121212121111[color=#408045,
                                                                       process="lookup session(~Bob.1) as CKs.2",
                                                                        ]:
     [
     State_111111111111212121212121111( lock, ~Alice, ~Bob,
                                        ~EphemeralInit, ~RootInit, lock.1, lock.2
     )
     ]
    --[ IsNotSet( session(~Bob) ) ]->
     [ ]
  */

rule (modulo E) p_1_11111111111121212121212[color=#ffffff,
                                            process="!" ]:
   [
   !Semistate_111111111111212121212121( lock, ~Alice.1, ~Bob.1,
                                        ~EphemeralInit.1, ~RootInit.1, lock.1
   )
   ]
  -->
   [
   !Semistate_11111111111121212121212121( lock, ~Alice.1, ~Bob.1,
                                          ~EphemeralInit.1, ~RootInit.1, lock.1
   ),
   State_11111111111121212121212111( lock, ~Alice.1, ~Bob.1,
                                     ~EphemeralInit.1, ~RootInit.1, lock.1
   )
   ]

  /*
  rule (modulo AC) p_1_11111111111121212121212[color=#ffffff,
                                               process="!" ]:
     [
     !Semistate_111111111111212121212121( lock, ~Alice, ~Bob,
                                          ~EphemeralInit, ~RootInit, lock.1
     )
     ]
    -->
     [
     !Semistate_11111111111121212121212121( lock, ~Alice, ~Bob,
                                            ~EphemeralInit, ~RootInit, lock.1
     ),
     State_11111111111121212121212111( lock, ~Alice, ~Bob,
                                       ~EphemeralInit, ~RootInit, lock.1
     )
     ]
  */

rule (modulo E) locksessionAlice_0_11111111111121212121212121111[color=#40804c,
                                                                 process="lock session(~Alice.1);",
                                                                  ]:
   [
   State_1111111111112121212121212111( lock, ~Alice.1, ~Bob.1,
                                       ~EphemeralInit.1, ~RootInit.1, lock.1
   ),
   Fr( lock.16 )
   ]
  --[
  Lock_16( '16', lock.16, session(~Alice.1) ),
  Lock( '16', lock.16, session(~Alice.1) )
  ]->
   [
   State_111111111111212121212121211111( lock, ~Alice.1, ~Bob.1,
                                         ~EphemeralInit.1, ~RootInit.1, lock.1, lock.16
   )
   ]

  /*
  rule (modulo AC) locksessionAlice_0_11111111111121212121212121111[color=#40804c,
                                                                    process="lock session(~Alice.1);",
                                                                     ]:
     [
     State_1111111111112121212121212111( lock, ~Alice, ~Bob,
                                         ~EphemeralInit, ~RootInit, lock.1
     ),
     Fr( lock.2 )
     ]
    --[
    Lock_16( '16', lock.2, session(~Alice) ),
    Lock( '16', lock.2, session(~Alice) )
    ]->
     [
     State_111111111111212121212121211111( lock, ~Alice, ~Bob,
                                           ~EphemeralInit, ~RootInit, lock.1, lock.2
     )
     ]
  */

rule (modulo E) lookupsessionAliceasCKe_0_111111111111212121212121211111[color=#40804c,
                                                                         process="lookup session(~Alice.1) as CKe.1",
                                                                          ]:
   [
   State_111111111111212121212121211111( lock, ~Alice.1, ~Bob.1,
                                         ~EphemeralInit.1, ~RootInit.1, lock.1, lock.16
   ),
   In( a.1 )
   ]
  --[ IsIn( session(~Alice.1), CKe.1 ) ]->
   [
   Let_111111111111212121212121211111111( <a.1, hash2(CKe.1, '1')>,
                                          lock, ~Alice.1, ~Bob.1, ~EphemeralInit.1, ~RootInit.1,
                                          CKe.1, a.1, lock.1, lock.16
   )
   ]

  /*
  rule (modulo AC) lookupsessionAliceasCKe_0_111111111111212121212121211111[color=#40804c,
                                                                            process="lookup session(~Alice.1) as CKe.1",
                                                                             ]:
     [
     State_111111111111212121212121211111( lock, ~Alice, ~Bob,
                                           ~EphemeralInit, ~RootInit, lock.1, lock.2
     ),
     In( a )
     ]
    --[ IsIn( session(~Alice), CKe ) ]->
     [
     Let_111111111111212121212121211111111( <a, hash2(CKe, '1')>, lock,
                                            ~Alice, ~Bob, ~EphemeralInit, ~RootInit, CKe, a, lock.1,
                                            lock.2
     )
     ]
  */

rule (modulo E) letDecdecahashCKe_1_11111111111121212121212121111111[color=#ffffff,
                                                                     process="let Dec.1=dec(a.1, hash2(CKe.1, '1'))",
                                                                      ]:
   [
   Let_111111111111212121212121211111111( <enc(Dec.1, k), k>, lock,
                                          ~Alice.1, ~Bob.1, ~EphemeralInit.1, ~RootInit.1, CKe.1,
                                          a.1, lock.1, lock.16
   )
   ]
  -->
   [
   State_111111111111212121212121211111111( lock, ~Alice.1, ~Bob.1,
                                            ~EphemeralInit.1, ~RootInit.1, CKe.1, Dec.1, a.1,
                                            lock.1, lock.16
   )
   ]

  /*
  rule (modulo AC) letDecdecahashCKe_1_11111111111121212121212121111111[color=#ffffff,
                                                                        process="let Dec.1=dec(a.1, hash2(CKe.1, '1'))",
                                                                         ]:
     [
     Let_111111111111212121212121211111111( <enc(Dec, k), k>, lock,
                                            ~Alice, ~Bob, ~EphemeralInit, ~RootInit, CKe, a, lock.1,
                                            lock.2
     )
     ]
    -->
     [
     State_111111111111212121212121211111111( lock, ~Alice, ~Bob,
                                              ~EphemeralInit, ~RootInit, CKe, Dec, a, lock.1, lock.2
     )
     ]
  */

rule (modulo E) eventReceivesessionBobsessionAlicehashCKe_0_111111111111212121212121211111111[color=#40804c,
                                                                                              process="event Receive( session(~Bob.1), session(~Alice.1), hash2(CKe.1, '1') );",
                                                                                               ]:
   [
   State_111111111111212121212121211111111( lock, ~Alice.1, ~Bob.1,
                                            ~EphemeralInit.1, ~RootInit.1, CKe.1, Dec.1, a.1,
                                            lock.1, lock.16
   )
   ]
  --[
  Receive( session(~Bob.1), session(~Alice.1), hash2(CKe.1, '1') )
  ]->
   [
   State_1111111111112121212121212111111111( lock, ~Alice.1, ~Bob.1,
                                             ~EphemeralInit.1, ~RootInit.1, CKe.1, Dec.1, a.1,
                                             lock.1, lock.16
   )
   ]

  /*
  rule (modulo AC) eventReceivesessionBobsessionAlicehashCKe_0_111111111111212121212121211111111[color=#40804c,
                                                                                                 process="event Receive( session(~Bob.1), session(~Alice.1), hash2(CKe.1, '1') );",
                                                                                                  ]:
     [
     State_111111111111212121212121211111111( lock, ~Alice, ~Bob,
                                              ~EphemeralInit, ~RootInit, CKe, Dec, a, lock.1, lock.2
     )
     ]
    --[ Receive( session(~Bob), session(~Alice), hash2(CKe, '1') ) ]->
     [
     State_1111111111112121212121212111111111( lock, ~Alice, ~Bob,
                                               ~EphemeralInit, ~RootInit, CKe, Dec, a, lock.1,
                                               lock.2
     )
     ]
  */

rule (modulo E) insertsessionAlicehashCKe_0_1111111111112121212121212111111111[color=#40804c,
                                                                               process="insert session(~Alice.1),hash2(CKe.1, '2');",
                                                                                ]:
   [
   State_1111111111112121212121212111111111( lock, ~Alice.1, ~Bob.1,
                                             ~EphemeralInit.1, ~RootInit.1, CKe.1, Dec.1, a.1,
                                             lock.1, lock.16
   )
   ]
  --[ Insert( session(~Alice.1), hash2(CKe.1, '2') ) ]->
   [
   State_11111111111121212121212121111111111( lock, ~Alice.1, ~Bob.1,
                                              ~EphemeralInit.1, ~RootInit.1, CKe.1, Dec.1, a.1,
                                              lock.1, lock.16
   )
   ]

  /*
  rule (modulo AC) insertsessionAlicehashCKe_0_1111111111112121212121212111111111[color=#40804c,
                                                                                  process="insert session(~Alice.1),hash2(CKe.1, '2');",
                                                                                   ]:
     [
     State_1111111111112121212121212111111111( lock, ~Alice, ~Bob,
                                               ~EphemeralInit, ~RootInit, CKe, Dec, a, lock.1,
                                               lock.2
     )
     ]
    --[ Insert( session(~Alice), hash2(CKe, '2') ) ]->
     [
     State_11111111111121212121212121111111111( lock, ~Alice, ~Bob,
                                                ~EphemeralInit, ~RootInit, CKe, Dec, a, lock.1,
                                                lock.2
     )
     ]
  */

rule (modulo E) unlocksessionAlice_0_11111111111121212121212121111111111[color=#40804c,
                                                                         process="unlock session(~Alice.1);",
                                                                          ]:
   [
   State_11111111111121212121212121111111111( lock, ~Alice.1, ~Bob.1,
                                              ~EphemeralInit.1, ~RootInit.1, CKe.1, Dec.1, a.1,
                                              lock.1, lock.16
   )
   ]
  --[
  Unlock_16( '16', lock.16, session(~Alice.1) ),
  Unlock( '16', lock.16, session(~Alice.1) )
  ]->
   [ ]

  /*
  rule (modulo AC) unlocksessionAlice_0_11111111111121212121212121111111111[color=#40804c,
                                                                            process="unlock session(~Alice.1);",
                                                                             ]:
     [
     State_11111111111121212121212121111111111( lock, ~Alice, ~Bob,
                                                ~EphemeralInit, ~RootInit, CKe, Dec, a, lock.1,
                                                lock.2
     )
     ]
    --[
    Unlock_16( '16', lock.2, session(~Alice) ),
    Unlock( '16', lock.2, session(~Alice) )
    ]->
     [ ]
  */

rule (modulo E) lookupsessionAliceasCKe_1_111111111111212121212121211111[color=#40804c,
                                                                         process="lookup session(~Alice.1) as CKe.1",
                                                                          ]:
   [
   State_111111111111212121212121211111( lock, ~Alice.1, ~Bob.1,
                                         ~EphemeralInit.1, ~RootInit.1, lock.1, lock.16
   )
   ]
  --[ IsNotSet( session(~Alice.1) ) ]->
   [ ]

  /*
  rule (modulo AC) lookupsessionAliceasCKe_1_111111111111212121212121211111[color=#40804c,
                                                                            process="lookup session(~Alice.1) as CKe.1",
                                                                             ]:
     [
     State_111111111111212121212121211111( lock, ~Alice, ~Bob,
                                           ~EphemeralInit, ~RootInit, lock.1, lock.2
     )
     ]
    --[ IsNotSet( session(~Alice) ) ]->
     [ ]
  */

rule (modulo E) locksessionBob_0_11111111111121212121212121112[color=#40804c,
                                                               process="lock session(~Bob.1);",
                                                                ]:
   [
   State_1111111111112121212121212111( lock, ~Alice.1, ~Bob.1,
                                       ~EphemeralInit.1, ~RootInit.1, lock.1
   ),
   Fr( lock.17 )
   ]
  --[
  Lock_17( '17', lock.17, session(~Bob.1) ),
  Lock( '17', lock.17, session(~Bob.1) )
  ]->
   [
   State_111111111111212121212121211121( lock, ~Alice.1, ~Bob.1,
                                         ~EphemeralInit.1, ~RootInit.1, lock.1, lock.17
   )
   ]

  /*
  rule (modulo AC) locksessionBob_0_11111111111121212121212121112[color=#40804c,
                                                                  process="lock session(~Bob.1);",
                                                                   ]:
     [
     State_1111111111112121212121212111( lock, ~Alice, ~Bob,
                                         ~EphemeralInit, ~RootInit, lock.1
     ),
     Fr( lock.2 )
     ]
    --[
    Lock_17( '17', lock.2, session(~Bob) ),
    Lock( '17', lock.2, session(~Bob) )
    ]->
     [
     State_111111111111212121212121211121( lock, ~Alice, ~Bob,
                                           ~EphemeralInit, ~RootInit, lock.1, lock.2
     )
     ]
  */

rule (modulo E) locksessionAlice_0_111111111111212121212121211121[color=#40804c,
                                                                  process="lock session(~Alice.1);",
                                                                   ]:
   [
   State_111111111111212121212121211121( lock, ~Alice.1, ~Bob.1,
                                         ~EphemeralInit.1, ~RootInit.1, lock.1, lock.17
   ),
   Fr( lock.18 ), Fr( ~Root_sy.7 ), Fr( ~Ephemeral_sy.7 )
   ]
  --[
  Lock_18( '18', lock.18, session(~Alice.1) ),
  Lock( '18', lock.18, session(~Alice.1) )
  ]->
   [
   State_111111111111212121212121211121111( lock, ~Alice.1, ~Bob.1,
                                            ~EphemeralInit.1, ~RootInit.1, lock.1, ~Ephemeral_sy.7,
                                            ~Root_sy.7, lock.17, lock.18
   )
   ]

  /*
  rule (modulo AC) locksessionAlice_0_111111111111212121212121211121[color=#40804c,
                                                                     process="lock session(~Alice.1);",
                                                                      ]:
     [
     State_111111111111212121212121211121( lock, ~Alice, ~Bob,
                                           ~EphemeralInit, ~RootInit, lock.1, lock.2
     ),
     Fr( lock.3 ), Fr( ~Root_sy ), Fr( ~Ephemeral_sy )
     ]
    --[
    Lock_18( '18', lock.3, session(~Alice) ),
    Lock( '18', lock.3, session(~Alice) )
    ]->
     [
     State_111111111111212121212121211121111( lock, ~Alice, ~Bob,
                                              ~EphemeralInit, ~RootInit, lock.1, ~Ephemeral_sy,
                                              ~Root_sy, lock.2, lock.3
     )
     ]
  */

rule (modulo E) insertsessionBobparshkdfRootsyEphemeralsy_0_1111111111112121212121212111211111[color=#40804c,
                                                                                               process="insert session(~Bob.1),pars1(hkdf(~Root_sy.7, ~Ephemeral_sy.7));",
                                                                                                ]:
   [
   State_111111111111212121212121211121111( lock, ~Alice.1, ~Bob.1,
                                            ~EphemeralInit.1, ~RootInit.1, lock.1, ~Ephemeral_sy.7,
                                            ~Root_sy.7, lock.17, lock.18
   )
   ]
  --[
  Insert( session(~Bob.1), pars1(hkdf(~Root_sy.7, ~Ephemeral_sy.7)) )
  ]->
   [
   State_11111111111121212121212121112111111( lock, ~Alice.1, ~Bob.1,
                                              ~EphemeralInit.1, ~RootInit.1, lock.1,
                                              ~Ephemeral_sy.7, ~Root_sy.7, lock.17, lock.18
   )
   ]

  /*
  rule (modulo AC) insertsessionBobparshkdfRootsyEphemeralsy_0_1111111111112121212121212111211111[color=#40804c,
                                                                                                  process="insert session(~Bob.1),pars1(hkdf(~Root_sy.7, ~Ephemeral_sy.7));",
                                                                                                   ]:
     [
     State_111111111111212121212121211121111( lock, ~Alice, ~Bob,
                                              ~EphemeralInit, ~RootInit, lock.1, ~Ephemeral_sy,
                                              ~Root_sy, lock.2, lock.3
     )
     ]
    --[ Insert( session(~Bob), pars1(hkdf(~Root_sy, ~Ephemeral_sy)) )
    ]->
     [
     State_11111111111121212121212121112111111( lock, ~Alice, ~Bob,
                                                ~EphemeralInit, ~RootInit, lock.1, ~Ephemeral_sy,
                                                ~Root_sy, lock.2, lock.3
     )
     ]
  */

rule (modulo E) insertsessionAliceparshkdfRootsyEphemeralsy_0_11111111111121212121212121112111111[color=#40804c,
                                                                                                  process="insert session(~Alice.1),pars1(hkdf(~Root_sy.7, ~Ephemeral_sy.7));",
                                                                                                   ]:
   [
   State_11111111111121212121212121112111111( lock, ~Alice.1, ~Bob.1,
                                              ~EphemeralInit.1, ~RootInit.1, lock.1,
                                              ~Ephemeral_sy.7, ~Root_sy.7, lock.17, lock.18
   )
   ]
  --[
  Insert( session(~Alice.1), pars1(hkdf(~Root_sy.7, ~Ephemeral_sy.7))
  )
  ]->
   [
   State_111111111111212121212121211121111111( lock, ~Alice.1, ~Bob.1,
                                               ~EphemeralInit.1, ~RootInit.1, lock.1,
                                               ~Ephemeral_sy.7, ~Root_sy.7, lock.17, lock.18
   )
   ]

  /*
  rule (modulo AC) insertsessionAliceparshkdfRootsyEphemeralsy_0_11111111111121212121212121112111111[color=#40804c,
                                                                                                     process="insert session(~Alice.1),pars1(hkdf(~Root_sy.7, ~Ephemeral_sy.7));",
                                                                                                      ]:
     [
     State_11111111111121212121212121112111111( lock, ~Alice, ~Bob,
                                                ~EphemeralInit, ~RootInit, lock.1, ~Ephemeral_sy,
                                                ~Root_sy, lock.2, lock.3
     )
     ]
    --[ Insert( session(~Alice), pars1(hkdf(~Root_sy, ~Ephemeral_sy)) )
    ]->
     [
     State_111111111111212121212121211121111111( lock, ~Alice, ~Bob,
                                                 ~EphemeralInit, ~RootInit, lock.1, ~Ephemeral_sy,
                                                 ~Root_sy, lock.2, lock.3
     )
     ]
  */

rule (modulo E) eventHealsessionBobsessionAlice_0_111111111111212121212121211121111111[color=#40804c,
                                                                                       process="event Heal( session(~Bob.1), session(~Alice.1) );",
                                                                                        ]:
   [
   State_111111111111212121212121211121111111( lock, ~Alice.1, ~Bob.1,
                                               ~EphemeralInit.1, ~RootInit.1, lock.1,
                                               ~Ephemeral_sy.7, ~Root_sy.7, lock.17, lock.18
   ),
   In( a.2 )
   ]
  --[ Heal( session(~Bob.1), session(~Alice.1) ) ]->
   [
   Let_111111111111212121212121211121111111111( <a.2, 
                                                 hash2(pars1(hkdf(~Root_sy.7, ~Ephemeral_sy.7)),
                                                       '1')
                                                >,
                                                lock, ~Alice.1, ~Bob.1, ~EphemeralInit.1,
                                                ~RootInit.1, lock.1, a.2, ~Ephemeral_sy.7,
                                                ~Root_sy.7, lock.17, lock.18
   )
   ]

  /*
  rule (modulo AC) eventHealsessionBobsessionAlice_0_111111111111212121212121211121111111[color=#40804c,
                                                                                          process="event Heal( session(~Bob.1), session(~Alice.1) );",
                                                                                           ]:
     [
     State_111111111111212121212121211121111111( lock, ~Alice, ~Bob,
                                                 ~EphemeralInit, ~RootInit, lock.1, ~Ephemeral_sy,
                                                 ~Root_sy, lock.2, lock.3
     ),
     In( a )
     ]
    --[ Heal( session(~Bob), session(~Alice) ) ]->
     [
     Let_111111111111212121212121211121111111111( <a, 
                                                   hash2(pars1(hkdf(~Root_sy, ~Ephemeral_sy)), '1')
                                                  >,
                                                  lock, ~Alice, ~Bob, ~EphemeralInit, ~RootInit,
                                                  lock.1, a, ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
  */

rule (modulo E) letDecdecahashparshkdfRootsyEphemeralsy_1_11111111111121212121212121112111111111[color=#ffffff,
                                                                                                 process="let Dec.2=dec(a.2, hash2(pars1(hkdf(~Root_sy.7, ~Ephemeral_sy.7)), '1'))",
                                                                                                  ]:
   [
   Let_111111111111212121212121211121111111111( <enc(Dec.2, k), k>,
                                                lock, ~Alice.1, ~Bob.1, ~EphemeralInit.1,
                                                ~RootInit.1, lock.1, a.2, ~Ephemeral_sy.7,
                                                ~Root_sy.7, lock.17, lock.18
   )
   ]
  -->
   [
   State_111111111111212121212121211121111111111( lock, ~Alice.1,
                                                  ~Bob.1, ~EphemeralInit.1, ~RootInit.1, lock.1,
                                                  Dec.2, a.2, ~Ephemeral_sy.7, ~Root_sy.7, lock.17,
                                                  lock.18
   )
   ]

  /*
  rule (modulo AC) letDecdecahashparshkdfRootsyEphemeralsy_1_11111111111121212121212121112111111111[color=#ffffff,
                                                                                                    process="let Dec.2=dec(a.2, hash2(pars1(hkdf(~Root_sy.7, ~Ephemeral_sy.7)), '1'))",
                                                                                                     ]:
     [
     Let_111111111111212121212121211121111111111( <enc(Dec, k), k>,
                                                  lock, ~Alice, ~Bob, ~EphemeralInit, ~RootInit,
                                                  lock.1, a, ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
    -->
     [
     State_111111111111212121212121211121111111111( lock, ~Alice, ~Bob,
                                                    ~EphemeralInit, ~RootInit, lock.1, Dec, a,
                                                    ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
  */

rule (modulo E) eventReceivesessionBobsessionAlicehashparshkdfRootsyEphemeralsy_0_111111111111212121212121211121111111111[color=#40804c,
                                                                                                                          process="event Receive( session(~Bob.1), session(~Alice.1),
         hash2(pars1(hkdf(~Root_sy.7, ~Ephemeral_sy.7)), '1')
);",
                                                                                                                           ]:
   [
   State_111111111111212121212121211121111111111( lock, ~Alice.1,
                                                  ~Bob.1, ~EphemeralInit.1, ~RootInit.1, lock.1,
                                                  Dec.2, a.2, ~Ephemeral_sy.7, ~Root_sy.7, lock.17,
                                                  lock.18
   )
   ]
  --[
  Receive( session(~Bob.1), session(~Alice.1),
           hash2(pars1(hkdf(~Root_sy.7, ~Ephemeral_sy.7)), '1')
  )
  ]->
   [
   State_1111111111112121212121212111211111111111( lock, ~Alice.1,
                                                   ~Bob.1, ~EphemeralInit.1, ~RootInit.1, lock.1,
                                                   Dec.2, a.2, ~Ephemeral_sy.7, ~Root_sy.7, lock.17,
                                                   lock.18
   )
   ]

  /*
  rule (modulo AC) eventReceivesessionBobsessionAlicehashparshkdfRootsyEphemeralsy_0_111111111111212121212121211121111111111[color=#40804c,
                                                                                                                             process="event Receive( session(~Bob.1), session(~Alice.1),
         hash2(pars1(hkdf(~Root_sy.7, ~Ephemeral_sy.7)), '1')
);",
                                                                                                                              ]:
     [
     State_111111111111212121212121211121111111111( lock, ~Alice, ~Bob,
                                                    ~EphemeralInit, ~RootInit, lock.1, Dec, a,
                                                    ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
    --[
    Receive( session(~Bob), session(~Alice),
             hash2(pars1(hkdf(~Root_sy, ~Ephemeral_sy)), '1')
    )
    ]->
     [
     State_1111111111112121212121212111211111111111( lock, ~Alice, ~Bob,
                                                     ~EphemeralInit, ~RootInit, lock.1, Dec, a,
                                                     ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
  */

rule (modulo E) insertsessionAlicehashparshkdfRootsyEphemeralsy_0_1111111111112121212121212111211111111111[color=#40804c,
                                                                                                           process="insert session(~Alice.1),hash2(pars1(hkdf(~Root_sy.7, ~Ephemeral_sy.7)), '2');",
                                                                                                            ]:
   [
   State_1111111111112121212121212111211111111111( lock, ~Alice.1,
                                                   ~Bob.1, ~EphemeralInit.1, ~RootInit.1, lock.1,
                                                   Dec.2, a.2, ~Ephemeral_sy.7, ~Root_sy.7, lock.17,
                                                   lock.18
   )
   ]
  --[
  Insert( session(~Alice.1),
          hash2(pars1(hkdf(~Root_sy.7, ~Ephemeral_sy.7)), '2')
  )
  ]->
   [
   State_11111111111121212121212121112111111111111( lock, ~Alice.1,
                                                    ~Bob.1, ~EphemeralInit.1, ~RootInit.1, lock.1,
                                                    Dec.2, a.2, ~Ephemeral_sy.7, ~Root_sy.7,
                                                    lock.17, lock.18
   )
   ]

  /*
  rule (modulo AC) insertsessionAlicehashparshkdfRootsyEphemeralsy_0_1111111111112121212121212111211111111111[color=#40804c,
                                                                                                              process="insert session(~Alice.1),hash2(pars1(hkdf(~Root_sy.7, ~Ephemeral_sy.7)), '2');",
                                                                                                               ]:
     [
     State_1111111111112121212121212111211111111111( lock, ~Alice, ~Bob,
                                                     ~EphemeralInit, ~RootInit, lock.1, Dec, a,
                                                     ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
    --[
    Insert( session(~Alice),
            hash2(pars1(hkdf(~Root_sy, ~Ephemeral_sy)), '2')
    )
    ]->
     [
     State_11111111111121212121212121112111111111111( lock, ~Alice,
                                                      ~Bob, ~EphemeralInit, ~RootInit, lock.1, Dec,
                                                      a, ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
  */

rule (modulo E) unlocksessionBob_0_11111111111121212121212121112111111111111[color=#40804c,
                                                                             process="unlock session(~Bob.1);",
                                                                              ]:
   [
   State_11111111111121212121212121112111111111111( lock, ~Alice.1,
                                                    ~Bob.1, ~EphemeralInit.1, ~RootInit.1, lock.1,
                                                    Dec.2, a.2, ~Ephemeral_sy.7, ~Root_sy.7,
                                                    lock.17, lock.18
   )
   ]
  --[
  Unlock_17( '17', lock.17, session(~Bob.1) ),
  Unlock( '17', lock.17, session(~Bob.1) )
  ]->
   [
   State_111111111111212121212121211121111111111111( lock, ~Alice.1,
                                                     ~Bob.1, ~EphemeralInit.1, ~RootInit.1, lock.1,
                                                     Dec.2, a.2, ~Ephemeral_sy.7, ~Root_sy.7,
                                                     lock.17, lock.18
   )
   ]

  /*
  rule (modulo AC) unlocksessionBob_0_11111111111121212121212121112111111111111[color=#40804c,
                                                                                process="unlock session(~Bob.1);",
                                                                                 ]:
     [
     State_11111111111121212121212121112111111111111( lock, ~Alice,
                                                      ~Bob, ~EphemeralInit, ~RootInit, lock.1, Dec,
                                                      a, ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
    --[
    Unlock_17( '17', lock.2, session(~Bob) ),
    Unlock( '17', lock.2, session(~Bob) )
    ]->
     [
     State_111111111111212121212121211121111111111111( lock, ~Alice,
                                                       ~Bob, ~EphemeralInit, ~RootInit, lock.1, Dec,
                                                       a, ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
  */

rule (modulo E) unlocksessionAlice_0_111111111111212121212121211121111111111111[color=#40804c,
                                                                                process="unlock session(~Alice.1);",
                                                                                 ]:
   [
   State_111111111111212121212121211121111111111111( lock, ~Alice.1,
                                                     ~Bob.1, ~EphemeralInit.1, ~RootInit.1, lock.1,
                                                     Dec.2, a.2, ~Ephemeral_sy.7, ~Root_sy.7,
                                                     lock.17, lock.18
   )
   ]
  --[
  Unlock_18( '18', lock.18, session(~Alice.1) ),
  Unlock( '18', lock.18, session(~Alice.1) )
  ]->
   [ ]

  /*
  rule (modulo AC) unlocksessionAlice_0_111111111111212121212121211121111111111111[color=#40804c,
                                                                                   process="unlock session(~Alice.1);",
                                                                                    ]:
     [
     State_111111111111212121212121211121111111111111( lock, ~Alice,
                                                       ~Bob, ~EphemeralInit, ~RootInit, lock.1, Dec,
                                                       a, ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
    --[
    Unlock_18( '18', lock.3, session(~Alice) ),
    Unlock( '18', lock.3, session(~Alice) )
    ]->
     [ ]
  */

rule (modulo E) newephemeralsecret_0_1111111111112121212121212111211112[color=#40804c,
                                                                        process="new ~ephemeral_secret.1;",
                                                                         ]:
   [
   State_111111111111212121212121211121111( lock, ~Alice.1, ~Bob.1,
                                            ~EphemeralInit.1, ~RootInit.1, lock.1, ~Ephemeral_sy.7,
                                            ~Root_sy.7, lock.17, lock.18
   ),
   Fr( ~ephemeral_secret.1 )
   ]
  --[
  Insert( session(~Bob.1),
          pars1(hkdf(pars2(hkdf(~Root_sy.7, ~Ephemeral_sy.7)),
                     ~ephemeral_secret.1))
  )
  ]->
   [
   State_111111111111212121212121211121111211( lock, ~Alice.1, ~Bob.1,
                                               ~EphemeralInit.1, ~RootInit.1, ~ephemeral_secret.1,
                                               lock.1, ~Ephemeral_sy.7, ~Root_sy.7, lock.17, lock.18
   )
   ]

  /*
  rule (modulo AC) newephemeralsecret_0_1111111111112121212121212111211112[color=#40804c,
                                                                           process="new ~ephemeral_secret.1;",
                                                                            ]:
     [
     State_111111111111212121212121211121111( lock, ~Alice, ~Bob,
                                              ~EphemeralInit, ~RootInit, lock.1, ~Ephemeral_sy,
                                              ~Root_sy, lock.2, lock.3
     ),
     Fr( ~ephemeral_secret )
     ]
    --[
    Insert( session(~Bob),
            pars1(hkdf(pars2(hkdf(~Root_sy, ~Ephemeral_sy)),
                       ~ephemeral_secret))
    )
    ]->
     [
     State_111111111111212121212121211121111211( lock, ~Alice, ~Bob,
                                                 ~EphemeralInit, ~RootInit, ~ephemeral_secret,
                                                 lock.1, ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
  */

rule (modulo E) insertsessionAliceparshkdfparshkdfRootsyEphemeralsyephemeralsecret_0_111111111111212121212121211121111211[color=#40804c,
                                                                                                                          process="insert session(~Alice.1),pars1(hkdf(pars2(hkdf(~Root_sy.7, ~Ephemeral_sy.7)),
           ~ephemeral_secret.1));",
                                                                                                                           ]:
   [
   State_111111111111212121212121211121111211( lock, ~Alice.1, ~Bob.1,
                                               ~EphemeralInit.1, ~RootInit.1, ~ephemeral_secret.1,
                                               lock.1, ~Ephemeral_sy.7, ~Root_sy.7, lock.17, lock.18
   )
   ]
  --[
  Insert( session(~Alice.1),
          pars1(hkdf(pars2(hkdf(~Root_sy.7, ~Ephemeral_sy.7)),
                     ~ephemeral_secret.1))
  )
  ]->
   [
   State_1111111111112121212121212111211112111( lock, ~Alice.1,
                                                ~Bob.1, ~EphemeralInit.1, ~RootInit.1,
                                                ~ephemeral_secret.1, lock.1, ~Ephemeral_sy.7,
                                                ~Root_sy.7, lock.17, lock.18
   )
   ]

  /*
  rule (modulo AC) insertsessionAliceparshkdfparshkdfRootsyEphemeralsyephemeralsecret_0_111111111111212121212121211121111211[color=#40804c,
                                                                                                                             process="insert session(~Alice.1),pars1(hkdf(pars2(hkdf(~Root_sy.7, ~Ephemeral_sy.7)),
           ~ephemeral_secret.1));",
                                                                                                                              ]:
     [
     State_111111111111212121212121211121111211( lock, ~Alice, ~Bob,
                                                 ~EphemeralInit, ~RootInit, ~ephemeral_secret,
                                                 lock.1, ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
    --[
    Insert( session(~Alice),
            pars1(hkdf(pars2(hkdf(~Root_sy, ~Ephemeral_sy)),
                       ~ephemeral_secret))
    )
    ]->
     [
     State_1111111111112121212121212111211112111( lock, ~Alice, ~Bob,
                                                  ~EphemeralInit, ~RootInit, ~ephemeral_secret,
                                                  lock.1, ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
  */

rule (modulo E) eventHealsessionBobsessionAlice_0_1111111111112121212121212111211112111[color=#40804c,
                                                                                        process="event Heal( session(~Bob.1), session(~Alice.1) );",
                                                                                         ]:
   [
   State_1111111111112121212121212111211112111( lock, ~Alice.1,
                                                ~Bob.1, ~EphemeralInit.1, ~RootInit.1,
                                                ~ephemeral_secret.1, lock.1, ~Ephemeral_sy.7,
                                                ~Root_sy.7, lock.17, lock.18
   ),
   In( a.3 )
   ]
  --[ Heal( session(~Bob.1), session(~Alice.1) ) ]->
   [
   Let_1111111111112121212121212111211112111111( <a.3, 
                                                  hash2(pars1(hkdf(pars2(hkdf(~Root_sy.7,
                                                                              ~Ephemeral_sy.7)),
                                                                   ~ephemeral_secret.1)),
                                                        '1')
                                                 >,
                                                 lock, ~Alice.1, ~Bob.1, ~EphemeralInit.1,
                                                 ~RootInit.1, ~ephemeral_secret.1, lock.1, a.3,
                                                 ~Ephemeral_sy.7, ~Root_sy.7, lock.17, lock.18
   )
   ]

  /*
  rule (modulo AC) eventHealsessionBobsessionAlice_0_1111111111112121212121212111211112111[color=#40804c,
                                                                                           process="event Heal( session(~Bob.1), session(~Alice.1) );",
                                                                                            ]:
     [
     State_1111111111112121212121212111211112111( lock, ~Alice, ~Bob,
                                                  ~EphemeralInit, ~RootInit, ~ephemeral_secret,
                                                  lock.1, ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     ),
     In( a )
     ]
    --[ Heal( session(~Bob), session(~Alice) ) ]->
     [
     Let_1111111111112121212121212111211112111111( <a, 
                                                    hash2(pars1(hkdf(pars2(hkdf(~Root_sy,
                                                                                ~Ephemeral_sy)),
                                                                     ~ephemeral_secret)),
                                                          '1')
                                                   >,
                                                   lock, ~Alice, ~Bob, ~EphemeralInit, ~RootInit,
                                                   ~ephemeral_secret, lock.1, a, ~Ephemeral_sy,
                                                   ~Root_sy, lock.2, lock.3
     )
     ]
  */

rule (modulo E) letDecdecahashparshkdfparshkdfRootsyEphemeralsyephemeralsecret_1_111111111111212121212121211121111211111[color=#ffffff,
                                                                                                                         process="let Dec.3=dec(a.3,
    hash2(pars1(hkdf(pars2(hkdf(~Root_sy.7, ~Ephemeral_sy.7)),
                     ~ephemeral_secret.1)),
          '1'))",
                                                                                                                          ]:
   [
   Let_1111111111112121212121212111211112111111( <enc(Dec.3, k), k>,
                                                 lock, ~Alice.1, ~Bob.1, ~EphemeralInit.1,
                                                 ~RootInit.1, ~ephemeral_secret.1, lock.1, a.3,
                                                 ~Ephemeral_sy.7, ~Root_sy.7, lock.17, lock.18
   )
   ]
  -->
   [
   State_1111111111112121212121212111211112111111( lock, ~Alice.1,
                                                   ~Bob.1, ~EphemeralInit.1, ~RootInit.1,
                                                   ~ephemeral_secret.1, lock.1, Dec.3, a.3,
                                                   ~Ephemeral_sy.7, ~Root_sy.7, lock.17, lock.18
   )
   ]

  /*
  rule (modulo AC) letDecdecahashparshkdfparshkdfRootsyEphemeralsyephemeralsecret_1_111111111111212121212121211121111211111[color=#ffffff,
                                                                                                                            process="let Dec.3=dec(a.3,
    hash2(pars1(hkdf(pars2(hkdf(~Root_sy.7, ~Ephemeral_sy.7)),
                     ~ephemeral_secret.1)),
          '1'))",
                                                                                                                             ]:
     [
     Let_1111111111112121212121212111211112111111( <enc(Dec, k), k>,
                                                   lock, ~Alice, ~Bob, ~EphemeralInit, ~RootInit,
                                                   ~ephemeral_secret, lock.1, a, ~Ephemeral_sy,
                                                   ~Root_sy, lock.2, lock.3
     )
     ]
    -->
     [
     State_1111111111112121212121212111211112111111( lock, ~Alice, ~Bob,
                                                     ~EphemeralInit, ~RootInit, ~ephemeral_secret,
                                                     lock.1, Dec, a, ~Ephemeral_sy, ~Root_sy,
                                                     lock.2, lock.3
     )
     ]
  */

rule (modulo E) eventReceivesessionBobsessionAlicehashparshkdfparshkdfRootsyEphemeralsyephemeralsecret_0_1111111111112121212121212111211112111111[color=#40804c,
                                                                                                                                                  process="event Receive( session(~Bob.1), session(~Alice.1),
         hash2(pars1(hkdf(pars2(hkdf(~Root_sy.7, ~Ephemeral_sy.7)),
                          ~ephemeral_secret.1)),
               '1')
);",
                                                                                                                                                   ]:
   [
   State_1111111111112121212121212111211112111111( lock, ~Alice.1,
                                                   ~Bob.1, ~EphemeralInit.1, ~RootInit.1,
                                                   ~ephemeral_secret.1, lock.1, Dec.3, a.3,
                                                   ~Ephemeral_sy.7, ~Root_sy.7, lock.17, lock.18
   )
   ]
  --[
  Receive( session(~Bob.1), session(~Alice.1),
           hash2(pars1(hkdf(pars2(hkdf(~Root_sy.7, ~Ephemeral_sy.7)),
                            ~ephemeral_secret.1)),
                 '1')
  )
  ]->
   [
   State_11111111111121212121212121112111121111111( lock, ~Alice.1,
                                                    ~Bob.1, ~EphemeralInit.1, ~RootInit.1,
                                                    ~ephemeral_secret.1, lock.1, Dec.3, a.3,
                                                    ~Ephemeral_sy.7, ~Root_sy.7, lock.17, lock.18
   )
   ]

  /*
  rule (modulo AC) eventReceivesessionBobsessionAlicehashparshkdfparshkdfRootsyEphemeralsyephemeralsecret_0_1111111111112121212121212111211112111111[color=#40804c,
                                                                                                                                                     process="event Receive( session(~Bob.1), session(~Alice.1),
         hash2(pars1(hkdf(pars2(hkdf(~Root_sy.7, ~Ephemeral_sy.7)),
                          ~ephemeral_secret.1)),
               '1')
);",
                                                                                                                                                      ]:
     [
     State_1111111111112121212121212111211112111111( lock, ~Alice, ~Bob,
                                                     ~EphemeralInit, ~RootInit, ~ephemeral_secret,
                                                     lock.1, Dec, a, ~Ephemeral_sy, ~Root_sy,
                                                     lock.2, lock.3
     )
     ]
    --[
    Receive( session(~Bob), session(~Alice),
             hash2(pars1(hkdf(pars2(hkdf(~Root_sy, ~Ephemeral_sy)),
                              ~ephemeral_secret)),
                   '1')
    )
    ]->
     [
     State_11111111111121212121212121112111121111111( lock, ~Alice,
                                                      ~Bob, ~EphemeralInit, ~RootInit,
                                                      ~ephemeral_secret, lock.1, Dec, a,
                                                      ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
  */

rule (modulo E) insertsessionAlicehashparshkdfparshkdfRootsyEphemeralsyephemeralsecret_0_11111111111121212121212121112111121111111[color=#40804c,
                                                                                                                                   process="insert session(~Alice.1),hash2(pars1(hkdf(pars2(hkdf(~Root_sy.7, ~Ephemeral_sy.7)),
                 ~ephemeral_secret.1)),
      '2');",
                                                                                                                                    ]:
   [
   State_11111111111121212121212121112111121111111( lock, ~Alice.1,
                                                    ~Bob.1, ~EphemeralInit.1, ~RootInit.1,
                                                    ~ephemeral_secret.1, lock.1, Dec.3, a.3,
                                                    ~Ephemeral_sy.7, ~Root_sy.7, lock.17, lock.18
   )
   ]
  --[
  Insert( session(~Alice.1),
          hash2(pars1(hkdf(pars2(hkdf(~Root_sy.7, ~Ephemeral_sy.7)),
                           ~ephemeral_secret.1)),
                '2')
  )
  ]->
   [
   State_111111111111212121212121211121111211111111( lock, ~Alice.1,
                                                     ~Bob.1, ~EphemeralInit.1, ~RootInit.1,
                                                     ~ephemeral_secret.1, lock.1, Dec.3, a.3,
                                                     ~Ephemeral_sy.7, ~Root_sy.7, lock.17, lock.18
   )
   ]

  /*
  rule (modulo AC) insertsessionAlicehashparshkdfparshkdfRootsyEphemeralsyephemeralsecret_0_11111111111121212121212121112111121111111[color=#40804c,
                                                                                                                                      process="insert session(~Alice.1),hash2(pars1(hkdf(pars2(hkdf(~Root_sy.7, ~Ephemeral_sy.7)),
                 ~ephemeral_secret.1)),
      '2');",
                                                                                                                                       ]:
     [
     State_11111111111121212121212121112111121111111( lock, ~Alice,
                                                      ~Bob, ~EphemeralInit, ~RootInit,
                                                      ~ephemeral_secret, lock.1, Dec, a,
                                                      ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
    --[
    Insert( session(~Alice),
            hash2(pars1(hkdf(pars2(hkdf(~Root_sy, ~Ephemeral_sy)),
                             ~ephemeral_secret)),
                  '2')
    )
    ]->
     [
     State_111111111111212121212121211121111211111111( lock, ~Alice,
                                                       ~Bob, ~EphemeralInit, ~RootInit,
                                                       ~ephemeral_secret, lock.1, Dec, a,
                                                       ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
  */

rule (modulo E) unlocksessionBob_0_111111111111212121212121211121111211111111[color=#40804c,
                                                                              process="unlock session(~Bob.1);",
                                                                               ]:
   [
   State_111111111111212121212121211121111211111111( lock, ~Alice.1,
                                                     ~Bob.1, ~EphemeralInit.1, ~RootInit.1,
                                                     ~ephemeral_secret.1, lock.1, Dec.3, a.3,
                                                     ~Ephemeral_sy.7, ~Root_sy.7, lock.17, lock.18
   )
   ]
  --[
  Unlock_17( '17', lock.17, session(~Bob.1) ),
  Unlock( '17', lock.17, session(~Bob.1) )
  ]->
   [
   State_1111111111112121212121212111211112111111111( lock, ~Alice.1,
                                                      ~Bob.1, ~EphemeralInit.1, ~RootInit.1,
                                                      ~ephemeral_secret.1, lock.1, Dec.3, a.3,
                                                      ~Ephemeral_sy.7, ~Root_sy.7, lock.17, lock.18
   )
   ]

  /*
  rule (modulo AC) unlocksessionBob_0_111111111111212121212121211121111211111111[color=#40804c,
                                                                                 process="unlock session(~Bob.1);",
                                                                                  ]:
     [
     State_111111111111212121212121211121111211111111( lock, ~Alice,
                                                       ~Bob, ~EphemeralInit, ~RootInit,
                                                       ~ephemeral_secret, lock.1, Dec, a,
                                                       ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
    --[
    Unlock_17( '17', lock.2, session(~Bob) ),
    Unlock( '17', lock.2, session(~Bob) )
    ]->
     [
     State_1111111111112121212121212111211112111111111( lock, ~Alice,
                                                        ~Bob, ~EphemeralInit, ~RootInit,
                                                        ~ephemeral_secret, lock.1, Dec, a,
                                                        ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
  */

rule (modulo E) unlocksessionAlice_0_1111111111112121212121212111211112111111111[color=#40804c,
                                                                                 process="unlock session(~Alice.1);",
                                                                                  ]:
   [
   State_1111111111112121212121212111211112111111111( lock, ~Alice.1,
                                                      ~Bob.1, ~EphemeralInit.1, ~RootInit.1,
                                                      ~ephemeral_secret.1, lock.1, Dec.3, a.3,
                                                      ~Ephemeral_sy.7, ~Root_sy.7, lock.17, lock.18
   )
   ]
  --[
  Unlock_18( '18', lock.18, session(~Alice.1) ),
  Unlock( '18', lock.18, session(~Alice.1) )
  ]->
   [ ]

  /*
  rule (modulo AC) unlocksessionAlice_0_1111111111112121212121212111211112111111111[color=#40804c,
                                                                                    process="unlock session(~Alice.1);",
                                                                                     ]:
     [
     State_1111111111112121212121212111211112111111111( lock, ~Alice,
                                                        ~Bob, ~EphemeralInit, ~RootInit,
                                                        ~ephemeral_secret, lock.1, Dec, a,
                                                        ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
    --[
    Unlock_18( '18', lock.3, session(~Alice) ),
    Unlock( '18', lock.3, session(~Alice) )
    ]->
     [ ]
  */

rule (modulo E) p_1_1111111111112121212121212[color=#ffffff,
                                              process="!" ]:
   [
   !Semistate_11111111111121212121212121( lock, ~Alice.1, ~Bob.1,
                                          ~EphemeralInit.1, ~RootInit.1, lock.1
   )
   ]
  -->
   [
   !Semistate_1111111111112121212121212121( lock, ~Alice.1, ~Bob.1,
                                            ~EphemeralInit.1, ~RootInit.1, lock.1
   ),
   State_1111111111112121212121212111( lock, ~Alice.1, ~Bob.1,
                                       ~EphemeralInit.1, ~RootInit.1, lock.1
   )
   ]

  /*
  rule (modulo AC) p_1_1111111111112121212121212[color=#ffffff,
                                                 process="!" ]:
     [
     !Semistate_11111111111121212121212121( lock, ~Alice, ~Bob,
                                            ~EphemeralInit, ~RootInit, lock.1
     )
     ]
    -->
     [
     !Semistate_1111111111112121212121212121( lock, ~Alice, ~Bob,
                                              ~EphemeralInit, ~RootInit, lock.1
     ),
     State_1111111111112121212121212111( lock, ~Alice, ~Bob,
                                         ~EphemeralInit, ~RootInit, lock.1
     )
     ]
  */

rule (modulo E) locksessionBob_0_1111111111112121212121212121111[color=#40804c,
                                                                 process="lock session(~Bob.1);",
                                                                  ]:
   [
   State_111111111111212121212121212111( lock, ~Alice.1, ~Bob.1,
                                         ~EphemeralInit.1, ~RootInit.1, lock.1
   ),
   Fr( lock.19 )
   ]
  --[
  Lock_19( '19', lock.19, session(~Bob.1) ),
  Lock( '19', lock.19, session(~Bob.1) )
  ]->
   [
   State_11111111111121212121212121211111( lock, ~Alice.1, ~Bob.1,
                                           ~EphemeralInit.1, ~RootInit.1, lock.1, lock.19
   )
   ]

  /*
  rule (modulo AC) locksessionBob_0_1111111111112121212121212121111[color=#40804c,
                                                                    process="lock session(~Bob.1);",
                                                                     ]:
     [
     State_111111111111212121212121212111( lock, ~Alice, ~Bob,
                                           ~EphemeralInit, ~RootInit, lock.1
     ),
     Fr( lock.2 )
     ]
    --[
    Lock_19( '19', lock.2, session(~Bob) ),
    Lock( '19', lock.2, session(~Bob) )
    ]->
     [
     State_11111111111121212121212121211111( lock, ~Alice, ~Bob,
                                             ~EphemeralInit, ~RootInit, lock.1, lock.2
     )
     ]
  */

rule (modulo E) lookupsessionBobasCKe_0_11111111111121212121212121211111[color=#40804c,
                                                                         process="lookup session(~Bob.1) as CKe.3",
                                                                          ]:
   [
   State_11111111111121212121212121211111( lock, ~Alice.1, ~Bob.1,
                                           ~EphemeralInit.1, ~RootInit.1, lock.1, lock.19
   ),
   In( a.4 )
   ]
  --[ IsIn( session(~Bob.1), CKe.3 ) ]->
   [
   Let_11111111111121212121212121211111111( <a.4, hash2(CKe.3, '1')>,
                                            lock, ~Alice.1, ~Bob.1, ~EphemeralInit.1, ~RootInit.1,
                                            lock.1, CKe.3, a.4, lock.19
   )
   ]

  /*
  rule (modulo AC) lookupsessionBobasCKe_0_11111111111121212121212121211111[color=#40804c,
                                                                            process="lookup session(~Bob.1) as CKe.3",
                                                                             ]:
     [
     State_11111111111121212121212121211111( lock, ~Alice, ~Bob,
                                             ~EphemeralInit, ~RootInit, lock.1, lock.2
     ),
     In( a )
     ]
    --[ IsIn( session(~Bob), CKe ) ]->
     [
     Let_11111111111121212121212121211111111( <a, hash2(CKe, '1')>,
                                              lock, ~Alice, ~Bob, ~EphemeralInit, ~RootInit, lock.1,
                                              CKe, a, lock.2
     )
     ]
  */

rule (modulo E) letDecdecahashCKe_1_1111111111112121212121212121111111[color=#ffffff,
                                                                       process="let Dec.4=dec(a.4, hash2(CKe.3, '1'))",
                                                                        ]:
   [
   Let_11111111111121212121212121211111111( <enc(Dec.4, k), k>, lock,
                                            ~Alice.1, ~Bob.1, ~EphemeralInit.1, ~RootInit.1, lock.1,
                                            CKe.3, a.4, lock.19
   )
   ]
  -->
   [
   State_11111111111121212121212121211111111( lock, ~Alice.1, ~Bob.1,
                                              ~EphemeralInit.1, ~RootInit.1, lock.1, CKe.3, Dec.4,
                                              a.4, lock.19
   )
   ]

  /*
  rule (modulo AC) letDecdecahashCKe_1_1111111111112121212121212121111111[color=#ffffff,
                                                                          process="let Dec.4=dec(a.4, hash2(CKe.3, '1'))",
                                                                           ]:
     [
     Let_11111111111121212121212121211111111( <enc(Dec, k), k>, lock,
                                              ~Alice, ~Bob, ~EphemeralInit, ~RootInit, lock.1, CKe,
                                              a, lock.2
     )
     ]
    -->
     [
     State_11111111111121212121212121211111111( lock, ~Alice, ~Bob,
                                                ~EphemeralInit, ~RootInit, lock.1, CKe, Dec, a,
                                                lock.2
     )
     ]
  */

rule (modulo E) eventReceivesessionAlicesessionBobhashCKe_0_11111111111121212121212121211111111[color=#40804c,
                                                                                                process="event Receive( session(~Alice.1), session(~Bob.1), hash2(CKe.3, '1') );",
                                                                                                 ]:
   [
   State_11111111111121212121212121211111111( lock, ~Alice.1, ~Bob.1,
                                              ~EphemeralInit.1, ~RootInit.1, lock.1, CKe.3, Dec.4,
                                              a.4, lock.19
   )
   ]
  --[
  Receive( session(~Alice.1), session(~Bob.1), hash2(CKe.3, '1') )
  ]->
   [
   State_111111111111212121212121212111111111( lock, ~Alice.1, ~Bob.1,
                                               ~EphemeralInit.1, ~RootInit.1, lock.1, CKe.3, Dec.4,
                                               a.4, lock.19
   )
   ]

  /*
  rule (modulo AC) eventReceivesessionAlicesessionBobhashCKe_0_11111111111121212121212121211111111[color=#40804c,
                                                                                                   process="event Receive( session(~Alice.1), session(~Bob.1), hash2(CKe.3, '1') );",
                                                                                                    ]:
     [
     State_11111111111121212121212121211111111( lock, ~Alice, ~Bob,
                                                ~EphemeralInit, ~RootInit, lock.1, CKe, Dec, a,
                                                lock.2
     )
     ]
    --[ Receive( session(~Alice), session(~Bob), hash2(CKe, '1') ) ]->
     [
     State_111111111111212121212121212111111111( lock, ~Alice, ~Bob,
                                                 ~EphemeralInit, ~RootInit, lock.1, CKe, Dec, a,
                                                 lock.2
     )
     ]
  */

rule (modulo E) insertsessionBobhashCKe_0_111111111111212121212121212111111111[color=#40804c,
                                                                               process="insert session(~Bob.1),hash2(CKe.3, '2');",
                                                                                ]:
   [
   State_111111111111212121212121212111111111( lock, ~Alice.1, ~Bob.1,
                                               ~EphemeralInit.1, ~RootInit.1, lock.1, CKe.3, Dec.4,
                                               a.4, lock.19
   )
   ]
  --[ Insert( session(~Bob.1), hash2(CKe.3, '2') ) ]->
   [
   State_1111111111112121212121212121111111111( lock, ~Alice.1,
                                                ~Bob.1, ~EphemeralInit.1, ~RootInit.1, lock.1,
                                                CKe.3, Dec.4, a.4, lock.19
   )
   ]

  /*
  rule (modulo AC) insertsessionBobhashCKe_0_111111111111212121212121212111111111[color=#40804c,
                                                                                  process="insert session(~Bob.1),hash2(CKe.3, '2');",
                                                                                   ]:
     [
     State_111111111111212121212121212111111111( lock, ~Alice, ~Bob,
                                                 ~EphemeralInit, ~RootInit, lock.1, CKe, Dec, a,
                                                 lock.2
     )
     ]
    --[ Insert( session(~Bob), hash2(CKe, '2') ) ]->
     [
     State_1111111111112121212121212121111111111( lock, ~Alice, ~Bob,
                                                  ~EphemeralInit, ~RootInit, lock.1, CKe, Dec, a,
                                                  lock.2
     )
     ]
  */

rule (modulo E) unlocksessionBob_0_1111111111112121212121212121111111111[color=#40804c,
                                                                         process="unlock session(~Bob.1);",
                                                                          ]:
   [
   State_1111111111112121212121212121111111111( lock, ~Alice.1,
                                                ~Bob.1, ~EphemeralInit.1, ~RootInit.1, lock.1,
                                                CKe.3, Dec.4, a.4, lock.19
   )
   ]
  --[
  Unlock_19( '19', lock.19, session(~Bob.1) ),
  Unlock( '19', lock.19, session(~Bob.1) )
  ]->
   [ ]

  /*
  rule (modulo AC) unlocksessionBob_0_1111111111112121212121212121111111111[color=#40804c,
                                                                            process="unlock session(~Bob.1);",
                                                                             ]:
     [
     State_1111111111112121212121212121111111111( lock, ~Alice, ~Bob,
                                                  ~EphemeralInit, ~RootInit, lock.1, CKe, Dec, a,
                                                  lock.2
     )
     ]
    --[
    Unlock_19( '19', lock.2, session(~Bob) ),
    Unlock( '19', lock.2, session(~Bob) )
    ]->
     [ ]
  */

rule (modulo E) lookupsessionBobasCKe_1_11111111111121212121212121211111[color=#40804c,
                                                                         process="lookup session(~Bob.1) as CKe.3",
                                                                          ]:
   [
   State_11111111111121212121212121211111( lock, ~Alice.1, ~Bob.1,
                                           ~EphemeralInit.1, ~RootInit.1, lock.1, lock.19
   )
   ]
  --[ IsNotSet( session(~Bob.1) ) ]->
   [ ]

  /*
  rule (modulo AC) lookupsessionBobasCKe_1_11111111111121212121212121211111[color=#40804c,
                                                                            process="lookup session(~Bob.1) as CKe.3",
                                                                             ]:
     [
     State_11111111111121212121212121211111( lock, ~Alice, ~Bob,
                                             ~EphemeralInit, ~RootInit, lock.1, lock.2
     )
     ]
    --[ IsNotSet( session(~Bob) ) ]->
     [ ]
  */

rule (modulo E) locksessionAlice_0_1111111111112121212121212121112[color=#40804c,
                                                                   process="lock session(~Alice.1);",
                                                                    ]:
   [
   State_111111111111212121212121212111( lock, ~Alice.1, ~Bob.1,
                                         ~EphemeralInit.1, ~RootInit.1, lock.1
   ),
   Fr( lock.20 )
   ]
  --[
  Lock_20( '20', lock.20, session(~Alice.1) ),
  Lock( '20', lock.20, session(~Alice.1) )
  ]->
   [
   State_11111111111121212121212121211121( lock, ~Alice.1, ~Bob.1,
                                           ~EphemeralInit.1, ~RootInit.1, lock.1, lock.20
   )
   ]

  /*
  rule (modulo AC) locksessionAlice_0_1111111111112121212121212121112[color=#40804c,
                                                                      process="lock session(~Alice.1);",
                                                                       ]:
     [
     State_111111111111212121212121212111( lock, ~Alice, ~Bob,
                                           ~EphemeralInit, ~RootInit, lock.1
     ),
     Fr( lock.2 )
     ]
    --[
    Lock_20( '20', lock.2, session(~Alice) ),
    Lock( '20', lock.2, session(~Alice) )
    ]->
     [
     State_11111111111121212121212121211121( lock, ~Alice, ~Bob,
                                             ~EphemeralInit, ~RootInit, lock.1, lock.2
     )
     ]
  */

rule (modulo E) locksessionBob_0_11111111111121212121212121211121[color=#40804c,
                                                                  process="lock session(~Bob.1);",
                                                                   ]:
   [
   State_11111111111121212121212121211121( lock, ~Alice.1, ~Bob.1,
                                           ~EphemeralInit.1, ~RootInit.1, lock.1, lock.20
   ),
   Fr( lock.21 ), Fr( ~Root_sy.8 ), Fr( ~Ephemeral_sy.8 )
   ]
  --[
  Lock_21( '21', lock.21, session(~Bob.1) ),
  Lock( '21', lock.21, session(~Bob.1) )
  ]->
   [
   State_11111111111121212121212121211121111( lock, ~Alice.1, ~Bob.1,
                                              ~EphemeralInit.1, ~RootInit.1, lock.1,
                                              ~Ephemeral_sy.8, ~Root_sy.8, lock.20, lock.21
   )
   ]

  /*
  rule (modulo AC) locksessionBob_0_11111111111121212121212121211121[color=#40804c,
                                                                     process="lock session(~Bob.1);",
                                                                      ]:
     [
     State_11111111111121212121212121211121( lock, ~Alice, ~Bob,
                                             ~EphemeralInit, ~RootInit, lock.1, lock.2
     ),
     Fr( lock.3 ), Fr( ~Root_sy ), Fr( ~Ephemeral_sy )
     ]
    --[
    Lock_21( '21', lock.3, session(~Bob) ),
    Lock( '21', lock.3, session(~Bob) )
    ]->
     [
     State_11111111111121212121212121211121111( lock, ~Alice, ~Bob,
                                                ~EphemeralInit, ~RootInit, lock.1, ~Ephemeral_sy,
                                                ~Root_sy, lock.2, lock.3
     )
     ]
  */

rule (modulo E) insertsessionAliceparshkdfRootsyEphemeralsy_0_111111111111212121212121212111211111[color=#40804c,
                                                                                                   process="insert session(~Alice.1),pars1(hkdf(~Root_sy.8, ~Ephemeral_sy.8));",
                                                                                                    ]:
   [
   State_11111111111121212121212121211121111( lock, ~Alice.1, ~Bob.1,
                                              ~EphemeralInit.1, ~RootInit.1, lock.1,
                                              ~Ephemeral_sy.8, ~Root_sy.8, lock.20, lock.21
   )
   ]
  --[
  Insert( session(~Alice.1), pars1(hkdf(~Root_sy.8, ~Ephemeral_sy.8))
  )
  ]->
   [
   State_1111111111112121212121212121112111111( lock, ~Alice.1,
                                                ~Bob.1, ~EphemeralInit.1, ~RootInit.1, lock.1,
                                                ~Ephemeral_sy.8, ~Root_sy.8, lock.20, lock.21
   )
   ]

  /*
  rule (modulo AC) insertsessionAliceparshkdfRootsyEphemeralsy_0_111111111111212121212121212111211111[color=#40804c,
                                                                                                      process="insert session(~Alice.1),pars1(hkdf(~Root_sy.8, ~Ephemeral_sy.8));",
                                                                                                       ]:
     [
     State_11111111111121212121212121211121111( lock, ~Alice, ~Bob,
                                                ~EphemeralInit, ~RootInit, lock.1, ~Ephemeral_sy,
                                                ~Root_sy, lock.2, lock.3
     )
     ]
    --[ Insert( session(~Alice), pars1(hkdf(~Root_sy, ~Ephemeral_sy)) )
    ]->
     [
     State_1111111111112121212121212121112111111( lock, ~Alice, ~Bob,
                                                  ~EphemeralInit, ~RootInit, lock.1, ~Ephemeral_sy,
                                                  ~Root_sy, lock.2, lock.3
     )
     ]
  */

rule (modulo E) insertsessionBobparshkdfRootsyEphemeralsy_0_1111111111112121212121212121112111111[color=#40804c,
                                                                                                  process="insert session(~Bob.1),pars1(hkdf(~Root_sy.8, ~Ephemeral_sy.8));",
                                                                                                   ]:
   [
   State_1111111111112121212121212121112111111( lock, ~Alice.1,
                                                ~Bob.1, ~EphemeralInit.1, ~RootInit.1, lock.1,
                                                ~Ephemeral_sy.8, ~Root_sy.8, lock.20, lock.21
   )
   ]
  --[
  Insert( session(~Bob.1), pars1(hkdf(~Root_sy.8, ~Ephemeral_sy.8)) )
  ]->
   [
   State_11111111111121212121212121211121111111( lock, ~Alice.1,
                                                 ~Bob.1, ~EphemeralInit.1, ~RootInit.1, lock.1,
                                                 ~Ephemeral_sy.8, ~Root_sy.8, lock.20, lock.21
   )
   ]

  /*
  rule (modulo AC) insertsessionBobparshkdfRootsyEphemeralsy_0_1111111111112121212121212121112111111[color=#40804c,
                                                                                                     process="insert session(~Bob.1),pars1(hkdf(~Root_sy.8, ~Ephemeral_sy.8));",
                                                                                                      ]:
     [
     State_1111111111112121212121212121112111111( lock, ~Alice, ~Bob,
                                                  ~EphemeralInit, ~RootInit, lock.1, ~Ephemeral_sy,
                                                  ~Root_sy, lock.2, lock.3
     )
     ]
    --[ Insert( session(~Bob), pars1(hkdf(~Root_sy, ~Ephemeral_sy)) )
    ]->
     [
     State_11111111111121212121212121211121111111( lock, ~Alice, ~Bob,
                                                   ~EphemeralInit, ~RootInit, lock.1, ~Ephemeral_sy,
                                                   ~Root_sy, lock.2, lock.3
     )
     ]
  */

rule (modulo E) eventHealsessionAlicesessionBob_0_11111111111121212121212121211121111111[color=#40804c,
                                                                                         process="event Heal( session(~Alice.1), session(~Bob.1) );",
                                                                                          ]:
   [
   State_11111111111121212121212121211121111111( lock, ~Alice.1,
                                                 ~Bob.1, ~EphemeralInit.1, ~RootInit.1, lock.1,
                                                 ~Ephemeral_sy.8, ~Root_sy.8, lock.20, lock.21
   ),
   In( a.5 )
   ]
  --[ Heal( session(~Alice.1), session(~Bob.1) ) ]->
   [
   Let_11111111111121212121212121211121111111111( <a.5, 
                                                   hash2(pars1(hkdf(~Root_sy.8, ~Ephemeral_sy.8)),
                                                         '1')
                                                  >,
                                                  lock, ~Alice.1, ~Bob.1, ~EphemeralInit.1,
                                                  ~RootInit.1, lock.1, a.5, ~Ephemeral_sy.8,
                                                  ~Root_sy.8, lock.20, lock.21
   )
   ]

  /*
  rule (modulo AC) eventHealsessionAlicesessionBob_0_11111111111121212121212121211121111111[color=#40804c,
                                                                                            process="event Heal( session(~Alice.1), session(~Bob.1) );",
                                                                                             ]:
     [
     State_11111111111121212121212121211121111111( lock, ~Alice, ~Bob,
                                                   ~EphemeralInit, ~RootInit, lock.1, ~Ephemeral_sy,
                                                   ~Root_sy, lock.2, lock.3
     ),
     In( a )
     ]
    --[ Heal( session(~Alice), session(~Bob) ) ]->
     [
     Let_11111111111121212121212121211121111111111( <a, 
                                                     hash2(pars1(hkdf(~Root_sy, ~Ephemeral_sy)),
                                                           '1')
                                                    >,
                                                    lock, ~Alice, ~Bob, ~EphemeralInit, ~RootInit,
                                                    lock.1, a, ~Ephemeral_sy, ~Root_sy, lock.2,
                                                    lock.3
     )
     ]
  */

rule (modulo E) letDecdecahashparshkdfRootsyEphemeralsy_1_1111111111112121212121212121112111111111[color=#ffffff,
                                                                                                   process="let Dec.5=dec(a.5, hash2(pars1(hkdf(~Root_sy.8, ~Ephemeral_sy.8)), '1'))",
                                                                                                    ]:
   [
   Let_11111111111121212121212121211121111111111( <enc(Dec.5, k), k>,
                                                  lock, ~Alice.1, ~Bob.1, ~EphemeralInit.1,
                                                  ~RootInit.1, lock.1, a.5, ~Ephemeral_sy.8,
                                                  ~Root_sy.8, lock.20, lock.21
   )
   ]
  -->
   [
   State_11111111111121212121212121211121111111111( lock, ~Alice.1,
                                                    ~Bob.1, ~EphemeralInit.1, ~RootInit.1, lock.1,
                                                    Dec.5, a.5, ~Ephemeral_sy.8, ~Root_sy.8,
                                                    lock.20, lock.21
   )
   ]

  /*
  rule (modulo AC) letDecdecahashparshkdfRootsyEphemeralsy_1_1111111111112121212121212121112111111111[color=#ffffff,
                                                                                                      process="let Dec.5=dec(a.5, hash2(pars1(hkdf(~Root_sy.8, ~Ephemeral_sy.8)), '1'))",
                                                                                                       ]:
     [
     Let_11111111111121212121212121211121111111111( <enc(Dec, k), k>,
                                                    lock, ~Alice, ~Bob, ~EphemeralInit, ~RootInit,
                                                    lock.1, a, ~Ephemeral_sy, ~Root_sy, lock.2,
                                                    lock.3
     )
     ]
    -->
     [
     State_11111111111121212121212121211121111111111( lock, ~Alice,
                                                      ~Bob, ~EphemeralInit, ~RootInit, lock.1, Dec,
                                                      a, ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
  */

rule (modulo E) eventReceivesessionAlicesessionBobhashparshkdfRootsyEphemeralsy_0_11111111111121212121212121211121111111111[color=#40804c,
                                                                                                                            process="event Receive( session(~Alice.1), session(~Bob.1),
         hash2(pars1(hkdf(~Root_sy.8, ~Ephemeral_sy.8)), '1')
);",
                                                                                                                             ]:
   [
   State_11111111111121212121212121211121111111111( lock, ~Alice.1,
                                                    ~Bob.1, ~EphemeralInit.1, ~RootInit.1, lock.1,
                                                    Dec.5, a.5, ~Ephemeral_sy.8, ~Root_sy.8,
                                                    lock.20, lock.21
   )
   ]
  --[
  Receive( session(~Alice.1), session(~Bob.1),
           hash2(pars1(hkdf(~Root_sy.8, ~Ephemeral_sy.8)), '1')
  )
  ]->
   [
   State_111111111111212121212121212111211111111111( lock, ~Alice.1,
                                                     ~Bob.1, ~EphemeralInit.1, ~RootInit.1, lock.1,
                                                     Dec.5, a.5, ~Ephemeral_sy.8, ~Root_sy.8,
                                                     lock.20, lock.21
   )
   ]

  /*
  rule (modulo AC) eventReceivesessionAlicesessionBobhashparshkdfRootsyEphemeralsy_0_11111111111121212121212121211121111111111[color=#40804c,
                                                                                                                               process="event Receive( session(~Alice.1), session(~Bob.1),
         hash2(pars1(hkdf(~Root_sy.8, ~Ephemeral_sy.8)), '1')
);",
                                                                                                                                ]:
     [
     State_11111111111121212121212121211121111111111( lock, ~Alice,
                                                      ~Bob, ~EphemeralInit, ~RootInit, lock.1, Dec,
                                                      a, ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
    --[
    Receive( session(~Alice), session(~Bob),
             hash2(pars1(hkdf(~Root_sy, ~Ephemeral_sy)), '1')
    )
    ]->
     [
     State_111111111111212121212121212111211111111111( lock, ~Alice,
                                                       ~Bob, ~EphemeralInit, ~RootInit, lock.1, Dec,
                                                       a, ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
  */

rule (modulo E) insertsessionBobhashparshkdfRootsyEphemeralsy_0_111111111111212121212121212111211111111111[color=#40804c,
                                                                                                           process="insert session(~Bob.1),hash2(pars1(hkdf(~Root_sy.8, ~Ephemeral_sy.8)), '2');",
                                                                                                            ]:
   [
   State_111111111111212121212121212111211111111111( lock, ~Alice.1,
                                                     ~Bob.1, ~EphemeralInit.1, ~RootInit.1, lock.1,
                                                     Dec.5, a.5, ~Ephemeral_sy.8, ~Root_sy.8,
                                                     lock.20, lock.21
   )
   ]
  --[
  Insert( session(~Bob.1),
          hash2(pars1(hkdf(~Root_sy.8, ~Ephemeral_sy.8)), '2')
  )
  ]->
   [
   State_1111111111112121212121212121112111111111111( lock, ~Alice.1,
                                                      ~Bob.1, ~EphemeralInit.1, ~RootInit.1, lock.1,
                                                      Dec.5, a.5, ~Ephemeral_sy.8, ~Root_sy.8,
                                                      lock.20, lock.21
   )
   ]

  /*
  rule (modulo AC) insertsessionBobhashparshkdfRootsyEphemeralsy_0_111111111111212121212121212111211111111111[color=#40804c,
                                                                                                              process="insert session(~Bob.1),hash2(pars1(hkdf(~Root_sy.8, ~Ephemeral_sy.8)), '2');",
                                                                                                               ]:
     [
     State_111111111111212121212121212111211111111111( lock, ~Alice,
                                                       ~Bob, ~EphemeralInit, ~RootInit, lock.1, Dec,
                                                       a, ~Ephemeral_sy, ~Root_sy, lock.2, lock.3
     )
     ]
    --[
    Insert( session(~Bob),
            hash2(pars1(hkdf(~Root_sy, ~Ephemeral_sy)), '2')
    )
    ]->
     [
     State_1111111111112121212121212121112111111111111( lock, ~Alice,
                                                        ~Bob, ~EphemeralInit, ~RootInit, lock.1,
                                                        Dec, a, ~Ephemeral_sy, ~Root_sy, lock.2,
                                                        lock.3
     )
     ]
  */

rule (modulo E) unlocksessionAlice_0_1111111111112121212121212121112111111111111[color=#40804c,
                                                                                 process="unlock session(~Alice.1);",
                                                                                  ]:
   [
   State_1111111111112121212121212121112111111111111( lock, ~Alice.1,
                                                      ~Bob.1, ~EphemeralInit.1, ~RootInit.1, lock.1,
                                                      Dec.5, a.5, ~Ephemeral_sy.8, ~Root_sy.8,
                                                      lock.20, lock.21
   )
   ]
  --[
  Unlock_20( '20', lock.20, session(~Alice.1) ),
  Unlock( '20', lock.20, session(~Alice.1) )
  ]->
   [
   State_11111111111121212121212121211121111111111111( lock, ~Alice.1,
                                                       ~Bob.1, ~EphemeralInit.1, ~RootInit.1,
                                                       lock.1, Dec.5, a.5, ~Ephemeral_sy.8,
                                                       ~Root_sy.8, lock.20, lock.21
   )
   ]

  /*
  rule (modulo AC) unlocksessionAlice_0_1111111111112121212121212121112111111111111[color=#40804c,
                                                                                    process="unlock session(~Alice.1);",
                                                                                     ]:
     [
     State_1111111111112121212121212121112111111111111( lock, ~Alice,
                                                        ~Bob, ~EphemeralInit, ~RootInit, lock.1,
                                                        Dec, a, ~Ephemeral_sy, ~Root_sy, lock.2,
                                                        lock.3
     )
     ]
    --[
    Unlock_20( '20', lock.2, session(~Alice) ),
    Unlock( '20', lock.2, session(~Alice) )
    ]->
     [
     State_11111111111121212121212121211121111111111111( lock, ~Alice,
                                                         ~Bob, ~EphemeralInit, ~RootInit, lock.1,
                                                         Dec, a, ~Ephemeral_sy, ~Root_sy, lock.2,
                                                         lock.3
     )
     ]
  */

rule (modulo E) unlocksessionBob_0_11111111111121212121212121211121111111111111[color=#40804c,
                                                                                process="unlock session(~Bob.1);",
                                                                                 ]:
   [
   State_11111111111121212121212121211121111111111111( lock, ~Alice.1,
                                                       ~Bob.1, ~EphemeralInit.1, ~RootInit.1,
                                                       lock.1, Dec.5, a.5, ~Ephemeral_sy.8,
                                                       ~Root_sy.8, lock.20, lock.21
   )
   ]
  --[
  Unlock_21( '21', lock.21, session(~Bob.1) ),
  Unlock( '21', lock.21, session(~Bob.1) )
  ]->
   [ ]

  /*
  rule (modulo AC) unlocksessionBob_0_11111111111121212121212121211121111111111111[color=#40804c,
                                                                                   process="unlock session(~Bob.1);",
                                                                                    ]:
     [
     State_11111111111121212121212121211121111111111111( lock, ~Alice,
                                                         ~Bob, ~EphemeralInit, ~RootInit, lock.1,
                                                         Dec, a, ~Ephemeral_sy, ~Root_sy, lock.2,
                                                         lock.3
     )
     ]
    --[
    Unlock_21( '21', lock.3, session(~Bob) ),
    Unlock( '21', lock.3, session(~Bob) )
    ]->
     [ ]
  */

rule (modulo E) newephemeralsecret_0_111111111111212121212121212111211112[color=#40804c,
                                                                          process="new ~ephemeral_secret.2;",
                                                                           ]:
   [
   State_11111111111121212121212121211121111( lock, ~Alice.1, ~Bob.1,
                                              ~EphemeralInit.1, ~RootInit.1, lock.1,
                                              ~Ephemeral_sy.8, ~Root_sy.8, lock.20, lock.21
   ),
   Fr( ~ephemeral_secret.2 )
   ]
  --[
  Insert( session(~Alice.1),
          pars1(hkdf(pars2(hkdf(~Root_sy.8, ~Ephemeral_sy.8)),
                     ~ephemeral_secret.2))
  )
  ]->
   [
   State_11111111111121212121212121211121111211( lock, ~Alice.1,
                                                 ~Bob.1, ~EphemeralInit.1, ~RootInit.1, lock.1,
                                                 ~ephemeral_secret.2, ~Ephemeral_sy.8, ~Root_sy.8,
                                                 lock.20, lock.21
   )
   ]

  /*
  rule (modulo AC) newephemeralsecret_0_111111111111212121212121212111211112[color=#40804c,
                                                                             process="new ~ephemeral_secret.2;",
                                                                              ]:
     [
     State_11111111111121212121212121211121111( lock, ~Alice, ~Bob,
                                                ~EphemeralInit, ~RootInit, lock.1, ~Ephemeral_sy,
                                                ~Root_sy, lock.2, lock.3
     ),
     Fr( ~ephemeral_secret )
     ]
    --[
    Insert( session(~Alice),
            pars1(hkdf(pars2(hkdf(~Root_sy, ~Ephemeral_sy)),
                       ~ephemeral_secret))
    )
    ]->
     [
     State_11111111111121212121212121211121111211( lock, ~Alice, ~Bob,
                                                   ~EphemeralInit, ~RootInit, lock.1,
                                                   ~ephemeral_secret, ~Ephemeral_sy, ~Root_sy,
                                                   lock.2, lock.3
     )
     ]
  */

rule (modulo E) insertsessionBobparshkdfparshkdfRootsyEphemeralsyephemeralsecret_0_11111111111121212121212121211121111211[color=#40804c,
                                                                                                                          process="insert session(~Bob.1),pars1(hkdf(pars2(hkdf(~Root_sy.8, ~Ephemeral_sy.8)),
           ~ephemeral_secret.2));",
                                                                                                                           ]:
   [
   State_11111111111121212121212121211121111211( lock, ~Alice.1,
                                                 ~Bob.1, ~EphemeralInit.1, ~RootInit.1, lock.1,
                                                 ~ephemeral_secret.2, ~Ephemeral_sy.8, ~Root_sy.8,
                                                 lock.20, lock.21
   )
   ]
  --[
  Insert( session(~Bob.1),
          pars1(hkdf(pars2(hkdf(~Root_sy.8, ~Ephemeral_sy.8)),
                     ~ephemeral_secret.2))
  )
  ]->
   [
   State_111111111111212121212121212111211112111( lock, ~Alice.1,
                                                  ~Bob.1, ~EphemeralInit.1, ~RootInit.1, lock.1,
                                                  ~ephemeral_secret.2, ~Ephemeral_sy.8, ~Root_sy.8,
                                                  lock.20, lock.21
   )
   ]

  /*
  rule (modulo AC) insertsessionBobparshkdfparshkdfRootsyEphemeralsyephemeralsecret_0_11111111111121212121212121211121111211[color=#40804c,
                                                                                                                             process="insert session(~Bob.1),pars1(hkdf(pars2(hkdf(~Root_sy.8, ~Ephemeral_sy.8)),
           ~ephemeral_secret.2));",
                                                                                                                              ]:
     [
     State_11111111111121212121212121211121111211( lock, ~Alice, ~Bob,
                                                   ~EphemeralInit, ~RootInit, lock.1,
                                                   ~ephemeral_secret, ~Ephemeral_sy, ~Root_sy,
                                                   lock.2, lock.3
     )
     ]
    --[
    Insert( session(~Bob),
            pars1(hkdf(pars2(hkdf(~Root_sy, ~Ephemeral_sy)),
                       ~ephemeral_secret))
    )
    ]->
     [
     State_111111111111212121212121212111211112111( lock, ~Alice, ~Bob,
                                                    ~EphemeralInit, ~RootInit, lock.1,
                                                    ~ephemeral_secret, ~Ephemeral_sy, ~Root_sy,
                                                    lock.2, lock.3
     )
     ]
  */

rule (modulo E) eventHealsessionAlicesessionBob_0_111111111111212121212121212111211112111[color=#40804c,
                                                                                          process="event Heal( session(~Alice.1), session(~Bob.1) );",
                                                                                           ]:
   [
   State_111111111111212121212121212111211112111( lock, ~Alice.1,
                                                  ~Bob.1, ~EphemeralInit.1, ~RootInit.1, lock.1,
                                                  ~ephemeral_secret.2, ~Ephemeral_sy.8, ~Root_sy.8,
                                                  lock.20, lock.21
   ),
   In( a.6 )
   ]
  --[ Heal( session(~Alice.1), session(~Bob.1) ) ]->
   [
   Let_111111111111212121212121212111211112111111( <a.6, 
                                                    hash2(pars1(hkdf(pars2(hkdf(~Root_sy.8,
                                                                                ~Ephemeral_sy.8)),
                                                                     ~ephemeral_secret.2)),
                                                          '1')
                                                   >,
                                                   lock, ~Alice.1, ~Bob.1, ~EphemeralInit.1,
                                                   ~RootInit.1, lock.1, ~ephemeral_secret.2, a.6,
                                                   ~Ephemeral_sy.8, ~Root_sy.8, lock.20, lock.21
   )
   ]

  /*
  rule (modulo AC) eventHealsessionAlicesessionBob_0_111111111111212121212121212111211112111[color=#40804c,
                                                                                             process="event Heal( session(~Alice.1), session(~Bob.1) );",
                                                                                              ]:
     [
     State_111111111111212121212121212111211112111( lock, ~Alice, ~Bob,
                                                    ~EphemeralInit, ~RootInit, lock.1,
                                                    ~ephemeral_secret, ~Ephemeral_sy, ~Root_sy,
                                                    lock.2, lock.3
     ),
     In( a )
     ]
    --[ Heal( session(~Alice), session(~Bob) ) ]->
     [
     Let_111111111111212121212121212111211112111111( <a, 
                                                      hash2(pars1(hkdf(pars2(hkdf(~Root_sy,
                                                                                  ~Ephemeral_sy)),
                                                                       ~ephemeral_secret)),
                                                            '1')
                                                     >,
                                                     lock, ~Alice, ~Bob, ~EphemeralInit, ~RootInit,
                                                     lock.1, ~ephemeral_secret, a, ~Ephemeral_sy,
                                                     ~Root_sy, lock.2, lock.3
     )
     ]
  */

rule (modulo E) letDecdecahashparshkdfparshkdfRootsyEphemeralsyephemeralsecret_1_11111111111121212121212121211121111211111[color=#ffffff,
                                                                                                                           process="let Dec.6=dec(a.6,
    hash2(pars1(hkdf(pars2(hkdf(~Root_sy.8, ~Ephemeral_sy.8)),
                     ~ephemeral_secret.2)),
          '1'))",
                                                                                                                            ]:
   [
   Let_111111111111212121212121212111211112111111( <enc(Dec.6, k), k>,
                                                   lock, ~Alice.1, ~Bob.1, ~EphemeralInit.1,
                                                   ~RootInit.1, lock.1, ~ephemeral_secret.2, a.6,
                                                   ~Ephemeral_sy.8, ~Root_sy.8, lock.20, lock.21
   )
   ]
  -->
   [
   State_111111111111212121212121212111211112111111( lock, ~Alice.1,
                                                     ~Bob.1, ~EphemeralInit.1, ~RootInit.1, lock.1,
                                                     ~ephemeral_secret.2, Dec.6, a.6,
                                                     ~Ephemeral_sy.8, ~Root_sy.8, lock.20, lock.21
   )
   ]

  /*
  rule (modulo AC) letDecdecahashparshkdfparshkdfRootsyEphemeralsyephemeralsecret_1_11111111111121212121212121211121111211111[color=#ffffff,
                                                                                                                              process="let Dec.6=dec(a.6,
    hash2(pars1(hkdf(pars2(hkdf(~Root_sy.8, ~Ephemeral_sy.8)),
                     ~ephemeral_secret.2)),
          '1'))",
                                                                                                                               ]:
     [
     Let_111111111111212121212121212111211112111111( <enc(Dec, k), k>,
                                                     lock, ~Alice, ~Bob, ~EphemeralInit, ~RootInit,
                                                     lock.1, ~ephemeral_secret, a, ~Ephemeral_sy,
                                                     ~Root_sy, lock.2, lock.3
     )
     ]
    -->
     [
     State_111111111111212121212121212111211112111111( lock, ~Alice,
                                                       ~Bob, ~EphemeralInit, ~RootInit, lock.1,
                                                       ~ephemeral_secret, Dec, a, ~Ephemeral_sy,
                                                       ~Root_sy, lock.2, lock.3
     )
     ]
  */

rule (modulo E) eventReceivesessionAlicesessionBobhashparshkdfparshkdfRootsyEphemeralsyephemeralsecret_0_111111111111212121212121212111211112111111[color=#40804c,
                                                                                                                                                    process="event Receive( session(~Alice.1), session(~Bob.1),
         hash2(pars1(hkdf(pars2(hkdf(~Root_sy.8, ~Ephemeral_sy.8)),
                          ~ephemeral_secret.2)),
               '1')
);",
                                                                                                                                                     ]:
   [
   State_111111111111212121212121212111211112111111( lock, ~Alice.1,
                                                     ~Bob.1, ~EphemeralInit.1, ~RootInit.1, lock.1,
                                                     ~ephemeral_secret.2, Dec.6, a.6,
                                                     ~Ephemeral_sy.8, ~Root_sy.8, lock.20, lock.21
   )
   ]
  --[
  Receive( session(~Alice.1), session(~Bob.1),
           hash2(pars1(hkdf(pars2(hkdf(~Root_sy.8, ~Ephemeral_sy.8)),
                            ~ephemeral_secret.2)),
                 '1')
  )
  ]->
   [
   State_1111111111112121212121212121112111121111111( lock, ~Alice.1,
                                                      ~Bob.1, ~EphemeralInit.1, ~RootInit.1, lock.1,
                                                      ~ephemeral_secret.2, Dec.6, a.6,
                                                      ~Ephemeral_sy.8, ~Root_sy.8, lock.20, lock.21
   )
   ]

  /*
  rule (modulo AC) eventReceivesessionAlicesessionBobhashparshkdfparshkdfRootsyEphemeralsyephemeralsecret_0_111111111111212121212121212111211112111111[color=#40804c,
                                                                                                                                                       process="event Receive( session(~Alice.1), session(~Bob.1),
         hash2(pars1(hkdf(pars2(hkdf(~Root_sy.8, ~Ephemeral_sy.8)),
                          ~ephemeral_secret.2)),
               '1')
);",
                                                                                                                                                        ]:
     [
     State_111111111111212121212121212111211112111111( lock, ~Alice,
                                                       ~Bob, ~EphemeralInit, ~RootInit, lock.1,
                                                       ~ephemeral_secret, Dec, a, ~Ephemeral_sy,
                                                       ~Root_sy, lock.2, lock.3
     )
     ]
    --[
    Receive( session(~Alice), session(~Bob),
             hash2(pars1(hkdf(pars2(hkdf(~Root_sy, ~Ephemeral_sy)),
                              ~ephemeral_secret)),
                   '1')
    )
    ]->
     [
     State_1111111111112121212121212121112111121111111( lock, ~Alice,
                                                        ~Bob, ~EphemeralInit, ~RootInit, lock.1,
                                                        ~ephemeral_secret, Dec, a, ~Ephemeral_sy,
                                                        ~Root_sy, lock.2, lock.3
     )
     ]
  */

rule (modulo E) insertsessionBobhashparshkdfparshkdfRootsyEphemeralsyephemeralsecret_0_1111111111112121212121212121112111121111111[color=#40804c,
                                                                                                                                   process="insert session(~Bob.1),hash2(pars1(hkdf(pars2(hkdf(~Root_sy.8, ~Ephemeral_sy.8)),
                 ~ephemeral_secret.2)),
      '2');",
                                                                                                                                    ]:
   [
   State_1111111111112121212121212121112111121111111( lock, ~Alice.1,
                                                      ~Bob.1, ~EphemeralInit.1, ~RootInit.1, lock.1,
                                                      ~ephemeral_secret.2, Dec.6, a.6,
                                                      ~Ephemeral_sy.8, ~Root_sy.8, lock.20, lock.21
   )
   ]
  --[
  Insert( session(~Bob.1),
          hash2(pars1(hkdf(pars2(hkdf(~Root_sy.8, ~Ephemeral_sy.8)),
                           ~ephemeral_secret.2)),
                '2')
  )
  ]->
   [
   State_11111111111121212121212121211121111211111111( lock, ~Alice.1,
                                                       ~Bob.1, ~EphemeralInit.1, ~RootInit.1,
                                                       lock.1, ~ephemeral_secret.2, Dec.6, a.6,
                                                       ~Ephemeral_sy.8, ~Root_sy.8, lock.20, lock.21
   )
   ]

  /*
  rule (modulo AC) insertsessionBobhashparshkdfparshkdfRootsyEphemeralsyephemeralsecret_0_1111111111112121212121212121112111121111111[color=#40804c,
                                                                                                                                      process="insert session(~Bob.1),hash2(pars1(hkdf(pars2(hkdf(~Root_sy.8, ~Ephemeral_sy.8)),
                 ~ephemeral_secret.2)),
      '2');",
                                                                                                                                       ]:
     [
     State_1111111111112121212121212121112111121111111( lock, ~Alice,
                                                        ~Bob, ~EphemeralInit, ~RootInit, lock.1,
                                                        ~ephemeral_secret, Dec, a, ~Ephemeral_sy,
                                                        ~Root_sy, lock.2, lock.3
     )
     ]
    --[
    Insert( session(~Bob),
            hash2(pars1(hkdf(pars2(hkdf(~Root_sy, ~Ephemeral_sy)),
                             ~ephemeral_secret)),
                  '2')
    )
    ]->
     [
     State_11111111111121212121212121211121111211111111( lock, ~Alice,
                                                         ~Bob, ~EphemeralInit, ~RootInit, lock.1,
                                                         ~ephemeral_secret, Dec, a, ~Ephemeral_sy,
                                                         ~Root_sy, lock.2, lock.3
     )
     ]
  */

rule (modulo E) unlocksessionAlice_0_11111111111121212121212121211121111211111111[color=#40804c,
                                                                                  process="unlock session(~Alice.1);",
                                                                                   ]:
   [
   State_11111111111121212121212121211121111211111111( lock, ~Alice.1,
                                                       ~Bob.1, ~EphemeralInit.1, ~RootInit.1,
                                                       lock.1, ~ephemeral_secret.2, Dec.6, a.6,
                                                       ~Ephemeral_sy.8, ~Root_sy.8, lock.20, lock.21
   )
   ]
  --[
  Unlock_20( '20', lock.20, session(~Alice.1) ),
  Unlock( '20', lock.20, session(~Alice.1) )
  ]->
   [
   State_111111111111212121212121212111211112111111111( lock,
                                                        ~Alice.1, ~Bob.1, ~EphemeralInit.1,
                                                        ~RootInit.1, lock.1, ~ephemeral_secret.2,
                                                        Dec.6, a.6, ~Ephemeral_sy.8, ~Root_sy.8,
                                                        lock.20, lock.21
   )
   ]

  /*
  rule (modulo AC) unlocksessionAlice_0_11111111111121212121212121211121111211111111[color=#40804c,
                                                                                     process="unlock session(~Alice.1);",
                                                                                      ]:
     [
     State_11111111111121212121212121211121111211111111( lock, ~Alice,
                                                         ~Bob, ~EphemeralInit, ~RootInit, lock.1,
                                                         ~ephemeral_secret, Dec, a, ~Ephemeral_sy,
                                                         ~Root_sy, lock.2, lock.3
     )
     ]
    --[
    Unlock_20( '20', lock.2, session(~Alice) ),
    Unlock( '20', lock.2, session(~Alice) )
    ]->
     [
     State_111111111111212121212121212111211112111111111( lock, ~Alice,
                                                          ~Bob, ~EphemeralInit, ~RootInit, lock.1,
                                                          ~ephemeral_secret, Dec, a, ~Ephemeral_sy,
                                                          ~Root_sy, lock.2, lock.3
     )
     ]
  */

rule (modulo E) unlocksessionBob_0_111111111111212121212121212111211112111111111[color=#40804c,
                                                                                 process="unlock session(~Bob.1);",
                                                                                  ]:
   [
   State_111111111111212121212121212111211112111111111( lock,
                                                        ~Alice.1, ~Bob.1, ~EphemeralInit.1,
                                                        ~RootInit.1, lock.1, ~ephemeral_secret.2,
                                                        Dec.6, a.6, ~Ephemeral_sy.8, ~Root_sy.8,
                                                        lock.20, lock.21
   )
   ]
  --[
  Unlock_21( '21', lock.21, session(~Bob.1) ),
  Unlock( '21', lock.21, session(~Bob.1) )
  ]->
   [ ]

  /*
  rule (modulo AC) unlocksessionBob_0_111111111111212121212121212111211112111111111[color=#40804c,
                                                                                    process="unlock session(~Bob.1);",
                                                                                     ]:
     [
     State_111111111111212121212121212111211112111111111( lock, ~Alice,
                                                          ~Bob, ~EphemeralInit, ~RootInit, lock.1,
                                                          ~ephemeral_secret, Dec, a, ~Ephemeral_sy,
                                                          ~Root_sy, lock.2, lock.3
     )
     ]
    --[
    Unlock_21( '21', lock.3, session(~Bob) ),
    Unlock( '21', lock.3, session(~Bob) )
    ]->
     [ ]
  */

rule (modulo E) p_1_111111111111212121212121212[color=#ffffff,
                                                process="!" ]:
   [
   !Semistate_1111111111112121212121212121( lock, ~Alice.1, ~Bob.1,
                                            ~EphemeralInit.1, ~RootInit.1, lock.1
   )
   ]
  -->
   [
   State_111111111111212121212121212111( lock, ~Alice.1, ~Bob.1,
                                         ~EphemeralInit.1, ~RootInit.1, lock.1
   )
   ]

  /*
  rule (modulo AC) p_1_111111111111212121212121212[color=#ffffff,
                                                   process="!" ]:
     [
     !Semistate_1111111111112121212121212121( lock, ~Alice, ~Bob,
                                              ~EphemeralInit, ~RootInit, lock.1
     )
     ]
    -->
     [
     State_111111111111212121212121212111( lock, ~Alice, ~Bob,
                                           ~EphemeralInit, ~RootInit, lock.1
     )
     ]
  */

restriction set_in:
  "∀ x y #t3.
    (IsIn( x, y ) @ #t3) ⇒
    (∃ #t2.
      ((Insert( x, y ) @ #t2) ∧ (#t2 < #t3)) ∧
      (∀ #t1 yp.
        (Insert( x, yp ) @ #t1) ⇒
        (((#t1 < #t2) ∨ (#t1 = #t2)) ∨ (#t3 < #t1))))"

restriction set_notin:
  "∀ x #t3.
    (IsNotSet( x ) @ #t3) ⇒
    (∀ #t1 y. (Insert( x, y ) @ #t1) ⇒ (#t3 < #t1))"
  // safety formula

restriction single_session:
  "∀ #i #j. ((Init( ) @ #i) ∧ (Init( ) @ #j)) ⇒ (#i = #j)"
  // safety formula

restriction locking_0:
  "∀ p pp l x lp #t1 #t3.
    ((Lock_0( p, l, x ) @ #t1) ∧ (Lock( pp, lp, x ) @ #t3)) ⇒
    ((((#t1 < #t3) ∧
       (∃ #t2.
         (((((Unlock_0( p, l, x ) @ #t2) ∧ (#t1 < #t2)) ∧ (#t2 < #t3)) ∧
           (∀ #t0 pp.1. (Unlock( pp.1, l, x ) @ #t0) ⇒ (#t0 = #t2))) ∧
          (∀ pp.1 lpp #t0.
            (Lock( pp.1, lpp, x ) @ #t0) ⇒
            (((#t0 < #t1) ∨ (#t0 = #t1)) ∨ (#t2 < #t0)))) ∧
         (∀ pp.1 lpp #t0.
           (Unlock( pp.1, lpp, x ) @ #t0) ⇒
           (((#t0 < #t1) ∨ (#t2 < #t0)) ∨ (#t2 = #t0))))) ∨
      (#t3 < #t1)) ∨
     (#t1 = #t3))"

restriction locking_1:
  "∀ p pp l x lp #t1 #t3.
    ((Lock_1( p, l, x ) @ #t1) ∧ (Lock( pp, lp, x ) @ #t3)) ⇒
    ((((#t1 < #t3) ∧
       (∃ #t2.
         (((((Unlock_1( p, l, x ) @ #t2) ∧ (#t1 < #t2)) ∧ (#t2 < #t3)) ∧
           (∀ #t0 pp.1. (Unlock( pp.1, l, x ) @ #t0) ⇒ (#t0 = #t2))) ∧
          (∀ pp.1 lpp #t0.
            (Lock( pp.1, lpp, x ) @ #t0) ⇒
            (((#t0 < #t1) ∨ (#t0 = #t1)) ∨ (#t2 < #t0)))) ∧
         (∀ pp.1 lpp #t0.
           (Unlock( pp.1, lpp, x ) @ #t0) ⇒
           (((#t0 < #t1) ∨ (#t2 < #t0)) ∨ (#t2 = #t0))))) ∨
      (#t3 < #t1)) ∨
     (#t1 = #t3))"

restriction locking_2:
  "∀ p pp l x lp #t1 #t3.
    ((Lock_2( p, l, x ) @ #t1) ∧ (Lock( pp, lp, x ) @ #t3)) ⇒
    ((((#t1 < #t3) ∧
       (∃ #t2.
         (((((Unlock_2( p, l, x ) @ #t2) ∧ (#t1 < #t2)) ∧ (#t2 < #t3)) ∧
           (∀ #t0 pp.1. (Unlock( pp.1, l, x ) @ #t0) ⇒ (#t0 = #t2))) ∧
          (∀ pp.1 lpp #t0.
            (Lock( pp.1, lpp, x ) @ #t0) ⇒
            (((#t0 < #t1) ∨ (#t0 = #t1)) ∨ (#t2 < #t0)))) ∧
         (∀ pp.1 lpp #t0.
           (Unlock( pp.1, lpp, x ) @ #t0) ⇒
           (((#t0 < #t1) ∨ (#t2 < #t0)) ∨ (#t2 = #t0))))) ∨
      (#t3 < #t1)) ∨
     (#t1 = #t3))"

restriction locking_3:
  "∀ p pp l x lp #t1 #t3.
    ((Lock_3( p, l, x ) @ #t1) ∧ (Lock( pp, lp, x ) @ #t3)) ⇒
    ((((#t1 < #t3) ∧
       (∃ #t2.
         (((((Unlock_3( p, l, x ) @ #t2) ∧ (#t1 < #t2)) ∧ (#t2 < #t3)) ∧
           (∀ #t0 pp.1. (Unlock( pp.1, l, x ) @ #t0) ⇒ (#t0 = #t2))) ∧
          (∀ pp.1 lpp #t0.
            (Lock( pp.1, lpp, x ) @ #t0) ⇒
            (((#t0 < #t1) ∨ (#t0 = #t1)) ∨ (#t2 < #t0)))) ∧
         (∀ pp.1 lpp #t0.
           (Unlock( pp.1, lpp, x ) @ #t0) ⇒
           (((#t0 < #t1) ∨ (#t2 < #t0)) ∨ (#t2 = #t0))))) ∨
      (#t3 < #t1)) ∨
     (#t1 = #t3))"

restriction locking_4:
  "∀ p pp l x lp #t1 #t3.
    ((Lock_4( p, l, x ) @ #t1) ∧ (Lock( pp, lp, x ) @ #t3)) ⇒
    ((((#t1 < #t3) ∧
       (∃ #t2.
         (((((Unlock_4( p, l, x ) @ #t2) ∧ (#t1 < #t2)) ∧ (#t2 < #t3)) ∧
           (∀ #t0 pp.1. (Unlock( pp.1, l, x ) @ #t0) ⇒ (#t0 = #t2))) ∧
          (∀ pp.1 lpp #t0.
            (Lock( pp.1, lpp, x ) @ #t0) ⇒
            (((#t0 < #t1) ∨ (#t0 = #t1)) ∨ (#t2 < #t0)))) ∧
         (∀ pp.1 lpp #t0.
           (Unlock( pp.1, lpp, x ) @ #t0) ⇒
           (((#t0 < #t1) ∨ (#t2 < #t0)) ∨ (#t2 = #t0))))) ∨
      (#t3 < #t1)) ∨
     (#t1 = #t3))"

restriction locking_5:
  "∀ p pp l x lp #t1 #t3.
    ((Lock_5( p, l, x ) @ #t1) ∧ (Lock( pp, lp, x ) @ #t3)) ⇒
    ((((#t1 < #t3) ∧
       (∃ #t2.
         (((((Unlock_5( p, l, x ) @ #t2) ∧ (#t1 < #t2)) ∧ (#t2 < #t3)) ∧
           (∀ #t0 pp.1. (Unlock( pp.1, l, x ) @ #t0) ⇒ (#t0 = #t2))) ∧
          (∀ pp.1 lpp #t0.
            (Lock( pp.1, lpp, x ) @ #t0) ⇒
            (((#t0 < #t1) ∨ (#t0 = #t1)) ∨ (#t2 < #t0)))) ∧
         (∀ pp.1 lpp #t0.
           (Unlock( pp.1, lpp, x ) @ #t0) ⇒
           (((#t0 < #t1) ∨ (#t2 < #t0)) ∨ (#t2 = #t0))))) ∨
      (#t3 < #t1)) ∨
     (#t1 = #t3))"

restriction locking_6:
  "∀ p pp l x lp #t1 #t3.
    ((Lock_6( p, l, x ) @ #t1) ∧ (Lock( pp, lp, x ) @ #t3)) ⇒
    ((((#t1 < #t3) ∧
       (∃ #t2.
         (((((Unlock_6( p, l, x ) @ #t2) ∧ (#t1 < #t2)) ∧ (#t2 < #t3)) ∧
           (∀ #t0 pp.1. (Unlock( pp.1, l, x ) @ #t0) ⇒ (#t0 = #t2))) ∧
          (∀ pp.1 lpp #t0.
            (Lock( pp.1, lpp, x ) @ #t0) ⇒
            (((#t0 < #t1) ∨ (#t0 = #t1)) ∨ (#t2 < #t0)))) ∧
         (∀ pp.1 lpp #t0.
           (Unlock( pp.1, lpp, x ) @ #t0) ⇒
           (((#t0 < #t1) ∨ (#t2 < #t0)) ∨ (#t2 = #t0))))) ∨
      (#t3 < #t1)) ∨
     (#t1 = #t3))"

restriction locking_7:
  "∀ p pp l x lp #t1 #t3.
    ((Lock_7( p, l, x ) @ #t1) ∧ (Lock( pp, lp, x ) @ #t3)) ⇒
    ((((#t1 < #t3) ∧
       (∃ #t2.
         (((((Unlock_7( p, l, x ) @ #t2) ∧ (#t1 < #t2)) ∧ (#t2 < #t3)) ∧
           (∀ #t0 pp.1. (Unlock( pp.1, l, x ) @ #t0) ⇒ (#t0 = #t2))) ∧
          (∀ pp.1 lpp #t0.
            (Lock( pp.1, lpp, x ) @ #t0) ⇒
            (((#t0 < #t1) ∨ (#t0 = #t1)) ∨ (#t2 < #t0)))) ∧
         (∀ pp.1 lpp #t0.
           (Unlock( pp.1, lpp, x ) @ #t0) ⇒
           (((#t0 < #t1) ∨ (#t2 < #t0)) ∨ (#t2 = #t0))))) ∨
      (#t3 < #t1)) ∨
     (#t1 = #t3))"

restriction locking_8:
  "∀ p pp l x lp #t1 #t3.
    ((Lock_8( p, l, x ) @ #t1) ∧ (Lock( pp, lp, x ) @ #t3)) ⇒
    ((((#t1 < #t3) ∧
       (∃ #t2.
         (((((Unlock_8( p, l, x ) @ #t2) ∧ (#t1 < #t2)) ∧ (#t2 < #t3)) ∧
           (∀ #t0 pp.1. (Unlock( pp.1, l, x ) @ #t0) ⇒ (#t0 = #t2))) ∧
          (∀ pp.1 lpp #t0.
            (Lock( pp.1, lpp, x ) @ #t0) ⇒
            (((#t0 < #t1) ∨ (#t0 = #t1)) ∨ (#t2 < #t0)))) ∧
         (∀ pp.1 lpp #t0.
           (Unlock( pp.1, lpp, x ) @ #t0) ⇒
           (((#t0 < #t1) ∨ (#t2 < #t0)) ∨ (#t2 = #t0))))) ∨
      (#t3 < #t1)) ∨
     (#t1 = #t3))"

restriction locking_9:
  "∀ p pp l x lp #t1 #t3.
    ((Lock_9( p, l, x ) @ #t1) ∧ (Lock( pp, lp, x ) @ #t3)) ⇒
    ((((#t1 < #t3) ∧
       (∃ #t2.
         (((((Unlock_9( p, l, x ) @ #t2) ∧ (#t1 < #t2)) ∧ (#t2 < #t3)) ∧
           (∀ #t0 pp.1. (Unlock( pp.1, l, x ) @ #t0) ⇒ (#t0 = #t2))) ∧
          (∀ pp.1 lpp #t0.
            (Lock( pp.1, lpp, x ) @ #t0) ⇒
            (((#t0 < #t1) ∨ (#t0 = #t1)) ∨ (#t2 < #t0)))) ∧
         (∀ pp.1 lpp #t0.
           (Unlock( pp.1, lpp, x ) @ #t0) ⇒
           (((#t0 < #t1) ∨ (#t2 < #t0)) ∨ (#t2 = #t0))))) ∨
      (#t3 < #t1)) ∨
     (#t1 = #t3))"

restriction locking_10:
  "∀ p pp l x lp #t1 #t3.
    ((Lock_10( p, l, x ) @ #t1) ∧ (Lock( pp, lp, x ) @ #t3)) ⇒
    ((((#t1 < #t3) ∧
       (∃ #t2.
         (((((Unlock_10( p, l, x ) @ #t2) ∧ (#t1 < #t2)) ∧ (#t2 < #t3)) ∧
           (∀ #t0 pp.1. (Unlock( pp.1, l, x ) @ #t0) ⇒ (#t0 = #t2))) ∧
          (∀ pp.1 lpp #t0.
            (Lock( pp.1, lpp, x ) @ #t0) ⇒
            (((#t0 < #t1) ∨ (#t0 = #t1)) ∨ (#t2 < #t0)))) ∧
         (∀ pp.1 lpp #t0.
           (Unlock( pp.1, lpp, x ) @ #t0) ⇒
           (((#t0 < #t1) ∨ (#t2 < #t0)) ∨ (#t2 = #t0))))) ∨
      (#t3 < #t1)) ∨
     (#t1 = #t3))"

restriction locking_11:
  "∀ p pp l x lp #t1 #t3.
    ((Lock_11( p, l, x ) @ #t1) ∧ (Lock( pp, lp, x ) @ #t3)) ⇒
    ((((#t1 < #t3) ∧
       (∃ #t2.
         (((((Unlock_11( p, l, x ) @ #t2) ∧ (#t1 < #t2)) ∧ (#t2 < #t3)) ∧
           (∀ #t0 pp.1. (Unlock( pp.1, l, x ) @ #t0) ⇒ (#t0 = #t2))) ∧
          (∀ pp.1 lpp #t0.
            (Lock( pp.1, lpp, x ) @ #t0) ⇒
            (((#t0 < #t1) ∨ (#t0 = #t1)) ∨ (#t2 < #t0)))) ∧
         (∀ pp.1 lpp #t0.
           (Unlock( pp.1, lpp, x ) @ #t0) ⇒
           (((#t0 < #t1) ∨ (#t2 < #t0)) ∨ (#t2 = #t0))))) ∨
      (#t3 < #t1)) ∨
     (#t1 = #t3))"

restriction locking_12:
  "∀ p pp l x lp #t1 #t3.
    ((Lock_12( p, l, x ) @ #t1) ∧ (Lock( pp, lp, x ) @ #t3)) ⇒
    ((((#t1 < #t3) ∧
       (∃ #t2.
         (((((Unlock_12( p, l, x ) @ #t2) ∧ (#t1 < #t2)) ∧ (#t2 < #t3)) ∧
           (∀ #t0 pp.1. (Unlock( pp.1, l, x ) @ #t0) ⇒ (#t0 = #t2))) ∧
          (∀ pp.1 lpp #t0.
            (Lock( pp.1, lpp, x ) @ #t0) ⇒
            (((#t0 < #t1) ∨ (#t0 = #t1)) ∨ (#t2 < #t0)))) ∧
         (∀ pp.1 lpp #t0.
           (Unlock( pp.1, lpp, x ) @ #t0) ⇒
           (((#t0 < #t1) ∨ (#t2 < #t0)) ∨ (#t2 = #t0))))) ∨
      (#t3 < #t1)) ∨
     (#t1 = #t3))"

restriction locking_13:
  "∀ p pp l x lp #t1 #t3.
    ((Lock_13( p, l, x ) @ #t1) ∧ (Lock( pp, lp, x ) @ #t3)) ⇒
    ((((#t1 < #t3) ∧
       (∃ #t2.
         (((((Unlock_13( p, l, x ) @ #t2) ∧ (#t1 < #t2)) ∧ (#t2 < #t3)) ∧
           (∀ #t0 pp.1. (Unlock( pp.1, l, x ) @ #t0) ⇒ (#t0 = #t2))) ∧
          (∀ pp.1 lpp #t0.
            (Lock( pp.1, lpp, x ) @ #t0) ⇒
            (((#t0 < #t1) ∨ (#t0 = #t1)) ∨ (#t2 < #t0)))) ∧
         (∀ pp.1 lpp #t0.
           (Unlock( pp.1, lpp, x ) @ #t0) ⇒
           (((#t0 < #t1) ∨ (#t2 < #t0)) ∨ (#t2 = #t0))))) ∨
      (#t3 < #t1)) ∨
     (#t1 = #t3))"

restriction locking_14:
  "∀ p pp l x lp #t1 #t3.
    ((Lock_14( p, l, x ) @ #t1) ∧ (Lock( pp, lp, x ) @ #t3)) ⇒
    ((((#t1 < #t3) ∧
       (∃ #t2.
         (((((Unlock_14( p, l, x ) @ #t2) ∧ (#t1 < #t2)) ∧ (#t2 < #t3)) ∧
           (∀ #t0 pp.1. (Unlock( pp.1, l, x ) @ #t0) ⇒ (#t0 = #t2))) ∧
          (∀ pp.1 lpp #t0.
            (Lock( pp.1, lpp, x ) @ #t0) ⇒
            (((#t0 < #t1) ∨ (#t0 = #t1)) ∨ (#t2 < #t0)))) ∧
         (∀ pp.1 lpp #t0.
           (Unlock( pp.1, lpp, x ) @ #t0) ⇒
           (((#t0 < #t1) ∨ (#t2 < #t0)) ∨ (#t2 = #t0))))) ∨
      (#t3 < #t1)) ∨
     (#t1 = #t3))"

restriction locking_15:
  "∀ p pp l x lp #t1 #t3.
    ((Lock_15( p, l, x ) @ #t1) ∧ (Lock( pp, lp, x ) @ #t3)) ⇒
    ((((#t1 < #t3) ∧
       (∃ #t2.
         (((((Unlock_15( p, l, x ) @ #t2) ∧ (#t1 < #t2)) ∧ (#t2 < #t3)) ∧
           (∀ #t0 pp.1. (Unlock( pp.1, l, x ) @ #t0) ⇒ (#t0 = #t2))) ∧
          (∀ pp.1 lpp #t0.
            (Lock( pp.1, lpp, x ) @ #t0) ⇒
            (((#t0 < #t1) ∨ (#t0 = #t1)) ∨ (#t2 < #t0)))) ∧
         (∀ pp.1 lpp #t0.
           (Unlock( pp.1, lpp, x ) @ #t0) ⇒
           (((#t0 < #t1) ∨ (#t2 < #t0)) ∨ (#t2 = #t0))))) ∨
      (#t3 < #t1)) ∨
     (#t1 = #t3))"

restriction locking_16:
  "∀ p pp l x lp #t1 #t3.
    ((Lock_16( p, l, x ) @ #t1) ∧ (Lock( pp, lp, x ) @ #t3)) ⇒
    ((((#t1 < #t3) ∧
       (∃ #t2.
         (((((Unlock_16( p, l, x ) @ #t2) ∧ (#t1 < #t2)) ∧ (#t2 < #t3)) ∧
           (∀ #t0 pp.1. (Unlock( pp.1, l, x ) @ #t0) ⇒ (#t0 = #t2))) ∧
          (∀ pp.1 lpp #t0.
            (Lock( pp.1, lpp, x ) @ #t0) ⇒
            (((#t0 < #t1) ∨ (#t0 = #t1)) ∨ (#t2 < #t0)))) ∧
         (∀ pp.1 lpp #t0.
           (Unlock( pp.1, lpp, x ) @ #t0) ⇒
           (((#t0 < #t1) ∨ (#t2 < #t0)) ∨ (#t2 = #t0))))) ∨
      (#t3 < #t1)) ∨
     (#t1 = #t3))"

restriction locking_17:
  "∀ p pp l x lp #t1 #t3.
    ((Lock_17( p, l, x ) @ #t1) ∧ (Lock( pp, lp, x ) @ #t3)) ⇒
    ((((#t1 < #t3) ∧
       (∃ #t2.
         (((((Unlock_17( p, l, x ) @ #t2) ∧ (#t1 < #t2)) ∧ (#t2 < #t3)) ∧
           (∀ #t0 pp.1. (Unlock( pp.1, l, x ) @ #t0) ⇒ (#t0 = #t2))) ∧
          (∀ pp.1 lpp #t0.
            (Lock( pp.1, lpp, x ) @ #t0) ⇒
            (((#t0 < #t1) ∨ (#t0 = #t1)) ∨ (#t2 < #t0)))) ∧
         (∀ pp.1 lpp #t0.
           (Unlock( pp.1, lpp, x ) @ #t0) ⇒
           (((#t0 < #t1) ∨ (#t2 < #t0)) ∨ (#t2 = #t0))))) ∨
      (#t3 < #t1)) ∨
     (#t1 = #t3))"

restriction locking_18:
  "∀ p pp l x lp #t1 #t3.
    ((Lock_18( p, l, x ) @ #t1) ∧ (Lock( pp, lp, x ) @ #t3)) ⇒
    ((((#t1 < #t3) ∧
       (∃ #t2.
         (((((Unlock_18( p, l, x ) @ #t2) ∧ (#t1 < #t2)) ∧ (#t2 < #t3)) ∧
           (∀ #t0 pp.1. (Unlock( pp.1, l, x ) @ #t0) ⇒ (#t0 = #t2))) ∧
          (∀ pp.1 lpp #t0.
            (Lock( pp.1, lpp, x ) @ #t0) ⇒
            (((#t0 < #t1) ∨ (#t0 = #t1)) ∨ (#t2 < #t0)))) ∧
         (∀ pp.1 lpp #t0.
           (Unlock( pp.1, lpp, x ) @ #t0) ⇒
           (((#t0 < #t1) ∨ (#t2 < #t0)) ∨ (#t2 = #t0))))) ∨
      (#t3 < #t1)) ∨
     (#t1 = #t3))"

restriction locking_19:
  "∀ p pp l x lp #t1 #t3.
    ((Lock_19( p, l, x ) @ #t1) ∧ (Lock( pp, lp, x ) @ #t3)) ⇒
    ((((#t1 < #t3) ∧
       (∃ #t2.
         (((((Unlock_19( p, l, x ) @ #t2) ∧ (#t1 < #t2)) ∧ (#t2 < #t3)) ∧
           (∀ #t0 pp.1. (Unlock( pp.1, l, x ) @ #t0) ⇒ (#t0 = #t2))) ∧
          (∀ pp.1 lpp #t0.
            (Lock( pp.1, lpp, x ) @ #t0) ⇒
            (((#t0 < #t1) ∨ (#t0 = #t1)) ∨ (#t2 < #t0)))) ∧
         (∀ pp.1 lpp #t0.
           (Unlock( pp.1, lpp, x ) @ #t0) ⇒
           (((#t0 < #t1) ∨ (#t2 < #t0)) ∨ (#t2 = #t0))))) ∨
      (#t3 < #t1)) ∨
     (#t1 = #t3))"

restriction locking_20:
  "∀ p pp l x lp #t1 #t3.
    ((Lock_20( p, l, x ) @ #t1) ∧ (Lock( pp, lp, x ) @ #t3)) ⇒
    ((((#t1 < #t3) ∧
       (∃ #t2.
         (((((Unlock_20( p, l, x ) @ #t2) ∧ (#t1 < #t2)) ∧ (#t2 < #t3)) ∧
           (∀ #t0 pp.1. (Unlock( pp.1, l, x ) @ #t0) ⇒ (#t0 = #t2))) ∧
          (∀ pp.1 lpp #t0.
            (Lock( pp.1, lpp, x ) @ #t0) ⇒
            (((#t0 < #t1) ∨ (#t0 = #t1)) ∨ (#t2 < #t0)))) ∧
         (∀ pp.1 lpp #t0.
           (Unlock( pp.1, lpp, x ) @ #t0) ⇒
           (((#t0 < #t1) ∨ (#t2 < #t0)) ∨ (#t2 = #t0))))) ∨
      (#t3 < #t1)) ∨
     (#t1 = #t3))"

restriction locking_21:
  "∀ p pp l x lp #t1 #t3.
    ((Lock_21( p, l, x ) @ #t1) ∧ (Lock( pp, lp, x ) @ #t3)) ⇒
    ((((#t1 < #t3) ∧
       (∃ #t2.
         (((((Unlock_21( p, l, x ) @ #t2) ∧ (#t1 < #t2)) ∧ (#t2 < #t3)) ∧
           (∀ #t0 pp.1. (Unlock( pp.1, l, x ) @ #t0) ⇒ (#t0 = #t2))) ∧
          (∀ pp.1 lpp #t0.
            (Lock( pp.1, lpp, x ) @ #t0) ⇒
            (((#t0 < #t1) ∨ (#t0 = #t1)) ∨ (#t2 < #t0)))) ∧
         (∀ pp.1 lpp #t0.
           (Unlock( pp.1, lpp, x ) @ #t0) ⇒
           (((#t0 < #t1) ∨ (#t2 < #t0)) ∨ (#t2 = #t0))))) ∨
      (#t3 < #t1)) ∨
     (#t1 = #t3))"

/*
WARNING: the following wellformedness checks failed!

Derivation Checks
=================

  Derivation checks timed out.
  Use --derivcheck-timeout=INT to configure timeout.
  Set to 0 to deactivate for no timeout.
*/

/*
Generated from:
Tamarin version 1.9.0
Maude version 3.1
Git revision: UNKNOWN, branch: UNKNOWN
Compiled at: 2024-10-08 08:59:29.1623454 UTC
*/

end
